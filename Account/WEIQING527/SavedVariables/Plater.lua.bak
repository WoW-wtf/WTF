
PlaterDB = {
["captured_spells"] = {
[419204] = {
["source"] = "科蕾娜·大地之女",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209072,
},
[448147] = {
["encounterName"] = "安苏雷克女王",
["source"] = "内室卫士",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223204,
},
[439031] = {
["encounterName"] = "艾帕",
["source"] = "艾帕",
["encounterID"] = 2929,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210267,
},
[436800] = {
["encounterName"] = "安苏雷克女王",
["type"] = "DEBUFF",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
[441518] = {
["isChanneled"] = false,
["source"] = "失败批次",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220368,
},
[448977] = {
["source"] = "粗心的酒花大地精",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223423,
},
[419207] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "科蕾娜·大地之女",
["npcID"] = 209072,
},
[445281] = {
["encounterName"] = "安苏雷克女王",
["type"] = "BUFF",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
[448660] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218370,
},
[456438] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "扭曲的撕裂者",
["npcID"] = 225342,
},
[438971] = {
["encounterName"] = "本克·鸣蜂",
["source"] = "贪婪的燧烬蜂",
["encounterID"] = 2931,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218016,
},
[457969] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "惊魂聚合体",
["npcID"] = 220999,
},
[454782] = {
["encounterName"] = "安苏雷克女王",
["type"] = "BUFF",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
[431896] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "口渴的主顾",
["encounterID"] = 2900,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215819,
},
[431897] = {
["encounterName"] = "酿造大师阿德里尔",
["type"] = "DEBUFF",
["source"] = "口渴的主顾",
["encounterID"] = 2900,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215819,
},
[438974] = {
["encounterName"] = "安苏雷克女王",
["type"] = "DEBUFF",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
[441397] = {
["source"] = "小蜜蜂",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218865,
},
[447135] = {
["isChanneled"] = false,
["source"] = "风味科学家",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222964,
},
[437956] = {
["isChanneled"] = false,
["source"] = "风险投资公司纵火狂",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218671,
},
[447965] = {
["encounterName"] = "安苏雷克女王",
["type"] = "BUFF",
["source"] = "虔诚的敬奉者",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223318,
},
[433622] = {
["source"] = "布莱恩·铜须",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 210759,
},
[434706] = {
["isChanneled"] = false,
["source"] = "品酒间侍从",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214920,
},
[451600] = {
["encounterName"] = "安苏雷克女王",
["source"] = "内室驱逐者",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224368,
},
[443504] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "[DNT] Beehive Trash Stalker",
["npcID"] = 221194,
},
[462693] = {
["encounterName"] = "安苏雷克女王",
["type"] = "BUFF",
["source"] = "内室驱逐者",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224368,
},
[447967] = {
["encounterName"] = "安苏雷克女王",
["type"] = "DEBUFF",
["source"] = "虔诚的敬奉者",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223318,
},
[442995] = {
["isChanneled"] = false,
["source"] = "风险投资公司蜂蜜收割者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220946,
},
[462694] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "小芯",
["npcID"] = 229637,
},
[443888] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218370,
},
[447076] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218370,
},
[439299] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218370,
},
[434773] = {
["isChanneled"] = false,
["source"] = "风险投资公司主顾",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214668,
},
[463206] = {
["isChanneled"] = false,
["source"] = "主厨丘伊",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214697,
},
[438025] = {
["encounterName"] = "本克·鸣蜂",
["source"] = "本克·鸣蜂",
["encounterID"] = 2931,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218002,
},
[439365] = {
["encounterName"] = "艾帕",
["source"] = "艾帕",
["encounterID"] = 2929,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210267,
},
[441214] = {
["isChanneled"] = false,
["source"] = "美味测试员",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220060,
},
[115804] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "乌达斯塔",
["npcID"] = 165189,
},
[447207] = {
["encounterName"] = "安苏雷克女王",
["type"] = "BUFF",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
[435797] = {
["encounterName"] = "戈尔迪·底爵",
["source"] = "燧酿炸弹",
["encounterID"] = 2930,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217837,
},
[439814] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218370,
},
[441408] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "风险投资公司纵火狂",
["npcID"] = 218671,
},
[419287] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "科蕾娜·大地之女",
["npcID"] = 209072,
},
[440899] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218370,
},
[441410] = {
["isChanneled"] = false,
["source"] = "工蜂",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210265,
},
[448488] = {
["encounterName"] = "安苏雷克女王",
["type"] = "BUFF",
["source"] = "虔诚的敬奉者",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223318,
},
[447532] = {
["encounterName"] = "安苏雷克女王",
["type"] = "DEBUFF",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
[448935] = {
["isChanneled"] = false,
["source"] = "粗心的酒花大地精",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223423,
},
[441413] = {
["source"] = "工蜂",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 210265,
},
[453271] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "惊魂聚合体",
["npcID"] = 220999,
},
[453909] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "风险投资公司纵火狂",
["npcID"] = 218671,
},
[449702] = {
["isChanneled"] = false,
["source"] = "酒滴",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223562,
},
[441351] = {
["isChanneled"] = false,
["source"] = "驯蜂者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210264,
},
[448300] = {
["encounterName"] = "安苏雷克女王",
["type"] = "BUFF",
["source"] = "扬升虚空语者",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223150,
},
[448619] = {
["isChanneled"] = false,
["source"] = "粗心的酒花大地精",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223423,
},
[463218] = {
["isChanneled"] = false,
["source"] = "雇佣的打手",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210269,
},
[440141] = {
["encounterName"] = "本克·鸣蜂",
["type"] = "DEBUFF",
["source"] = "本克·鸣蜂",
["encounterID"] = 2931,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218002,
},
[441353] = {
["source"] = "驯蜂者",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 210264,
},
[437592] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218370,
},
[463220] = {
["source"] = "雇佣的打手",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 210269,
},
[438804] = {
["encounterName"] = "安苏雷克女王",
["type"] = "DEBUFF",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
[436637] = {
["encounterName"] = "戈尔迪·底爵",
["source"] = "戈尔迪·底爵",
["encounterID"] = 2930,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214661,
},
[447411] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218370,
},
[439825] = {
["encounterName"] = "安苏雷克女王",
["type"] = "DEBUFF",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
[436640] = {
["encounterName"] = "戈尔迪·底爵",
["type"] = "DEBUFF",
["source"] = "戈尔迪·底爵",
["encounterID"] = 2930,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214661,
},
[360969] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "海龟",
["npcID"] = 165189,
},
[456212] = {
["type"] = "DEBUFF",
["source"] = "缠网矿脉",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226716,
},
[439829] = {
["encounterName"] = "安苏雷克女王",
["type"] = "DEBUFF",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
[443336] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218370,
},
[463227] = {
["source"] = "雇佣的打手",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 210269,
},
[443656] = {
["encounterName"] = "安苏雷克女王",
["type"] = "DEBUFF",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
[435560] = {
["encounterName"] = "戈尔迪·底爵",
["source"] = "戈尔迪·底爵",
["encounterID"] = 2930,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214661,
},
[436644] = {
["encounterName"] = "戈尔迪·底爵",
["source"] = "戈尔迪·底爵",
["encounterID"] = 2930,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214661,
},
[432182] = {
["encounterName"] = "酿造大师阿德里尔",
["type"] = "DEBUFF",
["source"] = "酿造大师阿德里尔",
["encounterID"] = 2900,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 210271,
},
[108446] = {
["isChanneled"] = false,
["source"] = "未知目标",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 417,
},
[443403] = {
["encounterName"] = "安苏雷克女王",
["type"] = "DEBUFF",
["source"] = "扬升虚空语者",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223150,
},
[437093] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218370,
},
[448505] = {
["encounterName"] = "安苏雷克女王",
["type"] = "BUFF",
["source"] = "虔诚的敬奉者",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223318,
},
[15654] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "沙怒暗影法师",
["npcID"] = 5648,
},
[443342] = {
["encounterName"] = "安苏雷克女王",
["type"] = "DEBUFF",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
[453989] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "风险投资公司纵火狂",
["npcID"] = 218671,
},
[452205] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "惊魂聚合体",
["npcID"] = 220999,
},
[447170] = {
["encounterName"] = "安苏雷克女王",
["type"] = "DEBUFF",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
[447999] = {
["encounterName"] = "安苏雷克女王",
["type"] = "BUFF",
["source"] = "扬升虚空语者",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223150,
},
[441242] = {
["isChanneled"] = false,
["source"] = "美味测试员",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220060,
},
[441434] = {
["isChanneled"] = false,
["source"] = "风味科学家",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214673,
},
[461388] = {
["encounterName"] = "安苏雷克女王",
["type"] = "DEBUFF",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
[439586] = {
["encounterName"] = "本克·鸣蜂",
["type"] = "DEBUFF",
["source"] = "本克·鸣蜂",
["encounterID"] = 2931,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218002,
},
[441627] = {
["isChanneled"] = false,
["source"] = "风味科学家",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214673,
},
[447046] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "风味科学家",
["npcID"] = 222964,
},
[436592] = {
["encounterName"] = "戈尔迪·底爵",
["source"] = "戈尔迪·底爵",
["encounterID"] = 2930,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214661,
},
[439524] = {
["encounterName"] = "本克·鸣蜂",
["source"] = "本克·鸣蜂",
["encounterID"] = 2931,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218002,
},
[434743] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "主厨丘伊",
["npcID"] = 214697,
},
[404207] = {
["source"] = "控火师罗格雷恩",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 232571,
},
[437417] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218370,
},
[434745] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "主厨丘伊",
["npcID"] = 214697,
},
[441119] = {
["isChanneled"] = false,
["source"] = "驯蜂者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210264,
},
[432179] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "酿造大师阿德里尔",
["encounterID"] = 2900,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210271,
},
[462692] = {
["encounterName"] = "安苏雷克女王",
["type"] = "BUFF",
["source"] = "内室卫士",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223204,
},
[438975] = {
["encounterName"] = "本克·鸣蜂",
["type"] = "DEBUFF",
["source"] = "贪婪的燧烬蜂",
["encounterID"] = 2931,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218016,
},
[435000] = {
["source"] = "主厨丘伊",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214697,
},
[443325] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218370,
},
[33395] = {
["source"] = "未知目标",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 208441,
},
[438976] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218370,
},
[432196] = {
["encounterName"] = "酿造大师阿德里尔",
["type"] = "DEBUFF",
["source"] = "酿造大师阿德里尔",
["encounterID"] = 2900,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 210271,
},
[61684] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "海龟",
["npcID"] = 165189,
},
[449106] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "粗心的酒花大地精",
["npcID"] = 223423,
},
[462733] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "小芯",
["npcID"] = 229637,
},
[447136] = {
["source"] = "风味科学家",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222964,
},
[440876] = {
["isChanneled"] = false,
["source"] = "蜂王浆供应商",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220141,
},
[452980] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "惊魂聚合体",
["npcID"] = 220999,
},
[442589] = {
["isChanneled"] = false,
["source"] = "风险投资公司蜂蜜收割者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220946,
},
[432198] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "酿造大师阿德里尔",
["encounterID"] = 2900,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210271,
},
[465] = {
["source"] = "嘉里克船长",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209057,
},
[455363] = {
["source"] = "阿努巴拉什",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217489,
},
[453810] = {
["source"] = "失败批次",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220368,
},
[435004] = {
["isChanneled"] = true,
["source"] = "主厨丘伊",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214697,
},
[439403] = {
["isChanneled"] = false,
["source"] = "好好先生",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219588,
},
[450177] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "暴怒之根",
["npcID"] = 216250,
},
[449986] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218370,
},
[441171] = {
["encounterName"] = "艾帕",
["source"] = "酒滴",
["encounterID"] = 2929,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219301,
},
[260249] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "海龟",
["npcID"] = 165189,
},
[439468] = {
["isChanneled"] = false,
["source"] = "好好先生",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219588,
},
[434505] = {
["isChanneled"] = false,
["source"] = "风险投资公司主顾",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214668,
},
[437721] = {
["isChanneled"] = true,
["source"] = "风险投资公司纵火狂",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218671,
},
[437078] = {
["encounterName"] = "安苏雷克女王",
["type"] = "DEBUFF",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
[127801] = {
["source"] = "芜菁沙袋",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 65310,
},
[450191] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218370,
},
[454319] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "风险投资公司纵火狂",
["npcID"] = 218671,
},
[386176] = {
["source"] = "未知目标",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[447456] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218370,
},
[456891] = {
["isChanneled"] = false,
["source"] = "驯蜂者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210264,
},
[440134] = {
["encounterName"] = "本克·鸣蜂",
["source"] = "本克·鸣蜂",
["encounterID"] = 2931,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218002,
},
[443487] = {
["isChanneled"] = false,
["source"] = "工蜂",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210265,
},
[441256] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "幽滴爬行者",
["npcID"] = 223069,
},
[440104] = {
["encounterName"] = "艾帕",
["type"] = "DEBUFF",
["source"] = "酒滴",
["encounterID"] = 2929,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219301,
},
[445268] = {
["encounterName"] = "安苏雷克女王",
["type"] = "BUFF",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
[441179] = {
["isChanneled"] = false,
["source"] = "酒滴",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223562,
},
[434998] = {
["isChanneled"] = true,
["source"] = "主厨丘伊",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214697,
},
[439536] = {
["encounterName"] = "安苏雷克女王",
["type"] = "DEBUFF",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
[442611] = {
["encounterName"] = "酿造大师阿德里尔",
["type"] = "BUFF",
["source"] = "酿造大师阿德里尔",
["encounterID"] = 2900,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 210271,
},
[432229] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "酿造大师阿德里尔",
["encounterID"] = 2900,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210271,
},
[436624] = {
["encounterName"] = "戈尔迪·底爵",
["type"] = "DEBUFF",
["source"] = "戈尔迪·底爵",
["encounterID"] = 2930,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214661,
},
[439467] = {
["isChanneled"] = false,
["source"] = "好好先生",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219588,
},
[434756] = {
["isChanneled"] = false,
["source"] = "雇佣的打手",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210269,
},
[447060] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "风味科学家",
["npcID"] = 222964,
},
[442525] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "酿造大师阿德里尔",
["encounterID"] = 2900,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210271,
},
[455380] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "失控的轨机",
["npcID"] = 218251,
},
[454318] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "风险投资公司纵火狂",
["npcID"] = 218671,
},
[449090] = {
["isChanneled"] = false,
["source"] = "粗心的酒花大地精",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223423,
},
[453298] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "惊魂聚合体",
["npcID"] = 220999,
},
[449568] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "蛛网将军阿贝纳尔",
["npcID"] = 221896,
},
[416224] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "布莱恩·铜须",
["npcID"] = 210759,
},
[440687] = {
["isChanneled"] = false,
["source"] = "蜂王浆供应商",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220141,
},
[453294] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "惊魂聚合体",
["npcID"] = 220999,
},
[259277] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "海龟",
["npcID"] = 165189,
},
},
["profileKeys"] = {
["女巫的工具人 - 死亡之翼"] = "Jundies Plater",
["諾宝 - 索拉丁"] = "Jundies Plater",
["丶諾諾丶 - 白银之手"] = "Jundies Plater",
["小尾巴要长高 - 布兰卡德"] = "Jundies Plater",
["然而 - 索拉丁"] = "Jundies Plater",
["乱舞諾諾 - 白银之手"] = "Jundies Plater",
["海棠未眠 - 索拉丁"] = "Jundies Plater",
["丶諾諾丶 - 索拉丁"] = "Jundies Plater",
["丶诺宝 - 索拉丁"] = "Jundies Plater",
["諾諾诺 - 安苏"] = "Default",
["诺宝 - 白银之手"] = "Default",
["Same - 索拉丁"] = "Default",
["小尾巴诺诺 - 死亡之翼"] = "Default",
["兜兜全是糖 - 索拉丁"] = "Jundies Plater",
["诺诺丶 - 白银之手"] = "Jundies Plater",
["諾諾下有 - 白银之手"] = "Default",
["诺诺宝丶 - 索拉丁"] = "Jundies Plater",
["小尾巴 - 索拉丁"] = "Jundies Plater",
["Bomb - 索拉丁"] = "Jundies Plater",
["諾諾的小尾巴 - 死亡之翼"] = "Jundies Plater",
["丶亦言 - 死亡之翼"] = "Jundies Plater",
["乱舞诺诺 - 白银之手"] = "Jundies Plater",
["按时吃饭 - 索拉丁"] = "Jundies Plater",
},
["captured_casts"] = {
[423664] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[128753] = {
["source"] = "狒狒村智者",
["event"] = "SPELL_CAST_START",
["npcID"] = 55601,
},
[79881] = {
["source"] = "暮光湮灭者",
["event"] = "SPELL_CAST_START",
["npcID"] = 38913,
},
[80009] = {
["event"] = "SPELL_CAST_START",
["source"] = "迪菲亚哨兵",
["npcID"] = 222866,
},
[469723] = {
["encounterName"] = "黑铁七贤",
["source"] = "瓦勒雷尔",
["npcID"] = 226308,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3048,
},
[451812] = {
["event"] = "SPELL_CAST_START",
["source"] = "波克霍特",
["npcID"] = 228671,
},
[321828] = {
["encounterName"] = "唤雾者",
["source"] = "唤雾者",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[324387] = {
["event"] = "SPELL_CAST_START",
["source"] = "骸骨巨怪",
["npcID"] = 165197,
},
[43667] = {
["encounterName"] = "凯雷塞斯王子",
["source"] = "凯雷塞斯王子",
["encounterID"] = 2026,
["event"] = "SPELL_CAST_START",
["npcID"] = 23953,
},
[456420] = {
["encounterName"] = "苏雷吉队长席克兰",
["source"] = "席克兰",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[104318] = {
["event"] = "SPELL_CAST_START",
["source"] = "野生小鬼",
["npcID"] = 143622,
},
[325413] = {
["source"] = "锥喉酸咽者",
["event"] = "SPELL_CAST_START",
["npcID"] = 167113,
},
[235951] = {
["source"] = "艾瑞达招魂者",
["event"] = "SPELL_CAST_START",
["npcID"] = 118838,
},
[333602] = {
["event"] = "SPELL_CAST_START",
["source"] = "脆骨法师",
["npcID"] = 163126,
},
[31405] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗血神谕者",
["npcID"] = 17771,
},
[176333] = {
["source"] = "铁军炽烤者",
["event"] = "SPELL_CAST_START",
["npcID"] = 78674,
},
[42708] = {
["encounterName"] = "掠夺者因格瓦尔",
["source"] = "掠夺者因格瓦尔",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[42772] = {
["source"] = "掠龙战略家",
["event"] = "SPELL_CAST_START",
["npcID"] = 23956,
},
[321834] = {
["encounterName"] = "唤雾者",
["source"] = "唤雾者",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[431349] = {
["source"] = "夜幕筑暗师",
["event"] = "SPELL_CAST_START",
["npcID"] = 213885,
},
[324394] = {
["event"] = "SPELL_CAST_START",
["source"] = "骸骨巨怪",
["npcID"] = 165197,
},
[335141] = {
["event"] = "SPELL_CAST_START",
["source"] = "纳祖达",
["npcID"] = 165824,
},
[17620] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "苍白的玛勒基",
["npcID"] = 10438,
},
[470244] = {
["encounterName"] = "弗莱拉斯大使",
["source"] = "弗莱拉斯大使",
["npcID"] = 226302,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3047,
},
[335143] = {
["event"] = "SPELL_CAST_START",
["source"] = "佐尔拉姆斯愈骨者",
["npcID"] = 165222,
},
[463081] = {
["source"] = "觉醒的方阵兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 229782,
},
[324909] = {
["source"] = "德鲁斯特碎枝者",
["event"] = "SPELL_CAST_START",
["npcID"] = 164926,
},
[118905] = {
["source"] = "电能图腾",
["event"] = "SPELL_CAST_START",
["npcID"] = 61245,
},
[390926] = {
["source"] = "水能堡活跃者",
["event"] = "SPELL_CAST_START",
["npcID"] = 223918,
},
[456942] = {
["source"] = "授权方阵兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 221917,
},
[439031] = {
["encounterName"] = "艾帕",
["source"] = "艾帕",
["encounterID"] = 2929,
["event"] = "SPELL_CAST_START",
["npcID"] = 210267,
},
[80780] = {
["event"] = "SPELL_CAST_START",
["source"] = "尖叫的女妖",
["npcID"] = 10463,
},
[460525] = {
["event"] = "SPELL_CAST_START",
["source"] = "比塔",
["npcID"] = 222653,
},
[40598] = {
["encounterName"] = "伊利丹·怒风",
["source"] = "伊利丹·怒风",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[415492] = {
["encounterName"] = "旋菇",
["source"] = "旋菇",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[295231] = {
["event"] = "SPELL_CAST_START",
["source"] = "灼疤者基罗克",
["npcID"] = 144575,
},
[424704] = {
["event"] = "SPELL_CAST_START",
["source"] = "真菌开膛者",
["npcID"] = 207454,
},
[453875] = {
["event"] = "SPELL_CAST_START",
["source"] = "修拉伊",
["npcID"] = 221224,
},
[41238] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "噬骨血先知",
["npcID"] = 23237,
},
[80781] = {
["event"] = "SPELL_CAST_START",
["source"] = "石翼尖啸者",
["npcID"] = 10409,
},
[6728] = {
["source"] = "雪盲唤风者",
["event"] = "SPELL_CAST_START",
["npcID"] = 11675,
},
[442618] = {
["source"] = "虚居哨兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 220986,
},
[320822] = {
["event"] = "SPELL_CAST_START",
["source"] = "佐尔拉姆斯愈骨者",
["npcID"] = 165222,
},
[439037] = {
["encounterName"] = "噬灭者乌格拉克斯",
["source"] = "贪婪之裔",
["npcID"] = 216205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[302912] = {
["source"] = "赞齐尔诱捕者",
["event"] = "SPELL_CAST_START",
["npcID"] = 153741,
},
[463602] = {
["encounterName"] = "特雷德奥瓦",
["source"] = "特雷德奥瓦",
["encounterID"] = 2393,
["event"] = "SPELL_CAST_START",
["npcID"] = 164517,
},
[453879] = {
["source"] = "大正纺师安图里克斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 225263,
},
[456438] = {
["source"] = "被诅咒的矿工",
["event"] = "SPELL_CAST_START",
["npcID"] = 213565,
},
[167385] = {
["source"] = "水晶之喉",
["event"] = "SPELL_CAST_START",
["npcID"] = 225978,
},
[433410] = {
["source"] = "啾鸣释惧蛛",
["event"] = "SPELL_CAST_START",
["npcID"] = 216583,
},
[431364] = {
["source"] = "夜幕祭师",
["event"] = "SPELL_CAST_START",
["npcID"] = 214761,
},
[446717] = {
["source"] = "长者织影",
["event"] = "SPELL_CAST_START",
["npcID"] = 221102,
},
[465652] = {
["encounterName"] = "黑铁七贤",
["source"] = "安格雷尔",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226307,
},
[378143] = {
["source"] = "拜荒渗透者",
["event"] = "SPELL_CAST_START",
["npcID"] = 191844,
},
[419595] = {
["event"] = "SPELL_CAST_START",
["source"] = "熔火将军",
["npcID"] = 207941,
},
[449277] = {
["event"] = "SPELL_CAST_START",
["source"] = "爱默里奇将军",
["npcID"] = 215371,
},
[41303] = {
["encounterName"] = "灵魂之匣",
["source"] = "苦痛精华",
["encounterID"] = 606,
["event"] = "SPELL_CAST_START",
["npcID"] = 23418,
},
[15979] = {
["event"] = "SPELL_CAST_START",
["source"] = "相位鞭笞者",
["npcID"] = 13196,
},
[443649] = {
["event"] = "SPELL_CAST_START",
["source"] = "皇家书记员",
["npcID"] = 221035,
},
[443138] = {
["event"] = "SPELL_CAST_START",
["source"] = "皇家书记员",
["npcID"] = 221035,
},
[455932] = {
["event"] = "SPELL_CAST_START",
["source"] = "老格林",
["npcID"] = 213403,
},
[463609] = {
["encounterName"] = "节点女亲王凯威扎",
["source"] = "扭曲虚空幻影",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 218429,
},
[448257] = {
["event"] = "SPELL_CAST_START",
["source"] = "预知者西克萨蒙",
["npcID"] = 215435,
},
[340279] = {
["source"] = "纱雾夜花",
["event"] = "SPELL_CAST_START",
["npcID"] = 173714,
},
[212423] = {
["event"] = "SPELL_CAST_START",
["source"] = "复生的潜伏者",
["npcID"] = 99541,
},
[439559] = {
["encounterName"] = "苏雷吉队长席克兰",
["source"] = "席克兰",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[390943] = {
["encounterName"] = "克拉格派",
["source"] = "克拉格派",
["encounterID"] = 3001,
["event"] = "SPELL_CAST_START",
["npcID"] = 220008,
},
[40536] = {
["encounterName"] = "伊利丹·怒风",
["source"] = "阿卡玛",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 23089,
},
[453889] = {
["source"] = "朗克哈特",
["event"] = "SPELL_CAST_START",
["npcID"] = 222152,
},
[388897] = {
["event"] = "SPELL_CAST_START",
["source"] = "游荡的碎步壳蟹",
["npcID"] = 229820,
},
[333629] = {
["encounterName"] = "收割者阿玛厄斯",
["source"] = "复生的弩手",
["npcID"] = 168246,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[5137] = {
["event"] = "SPELL_CAST_START",
["source"] = "亡灵邮差",
["npcID"] = 11142,
},
[441097] = {
["event"] = "SPELL_CAST_START",
["source"] = "反刍巨怪",
["npcID"] = 220138,
},
[3605] = {
["event"] = "SPELL_CAST_START",
["source"] = "地精工程师",
["npcID"] = 622,
},
[257459] = {
["encounterName"] = "“屠夫”血钩",
["source"] = "“屠夫”血钩",
["encounterID"] = 2098,
["event"] = "SPELL_CAST_START",
["npcID"] = 128650,
},
[340796] = {
["event"] = "SPELL_CAST_START",
["source"] = "光尘，饰演基尔加丹",
["npcID"] = 166139,
},
[445705] = {
["event"] = "SPELL_CAST_START",
["source"] = "深水龙虾人",
["npcID"] = 220643,
},
[426771] = {
["source"] = "虚缚抢劫者",
["event"] = "SPELL_CAST_START",
["npcID"] = 212765,
},
[453894] = {
["source"] = "朗克哈特",
["event"] = "SPELL_CAST_START",
["npcID"] = 222152,
},
[456453] = {
["source"] = "斯卡丁躯壳",
["event"] = "SPELL_CAST_START",
["npcID"] = 213566,
},
[444683] = {
["source"] = "缀苔磐羊",
["event"] = "SPELL_CAST_START",
["npcID"] = 214945,
},
[284506] = {
["event"] = "SPELL_CAST_START",
["source"] = "审判官德莱雷丝",
["npcID"] = 144567,
},
[31407] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗血矛兵",
["npcID"] = 17729,
},
[449290] = {
["source"] = "夏亚路德",
["event"] = "SPELL_CAST_START",
["npcID"] = 223834,
},
[17174] = {
["source"] = "炎鹰海员",
["event"] = "SPELL_CAST_START",
["npcID"] = 35070,
},
[340289] = {
["source"] = "纱雾夜花",
["event"] = "SPELL_CAST_START",
["npcID"] = 173714,
},
[448269] = {
["event"] = "SPELL_CAST_START",
["source"] = "预知者西克萨蒙",
["npcID"] = 215435,
},
[457993] = {
["event"] = "SPELL_CAST_START",
["source"] = "呱吉特",
["npcID"] = 214757,
},
[63758] = {
["source"] = "暮光冰法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 33819,
},
[398631] = {
["source"] = "郁齿诱捕者",
["event"] = "SPELL_CAST_START",
["npcID"] = 220256,
},
[420125] = {
["source"] = "原始石眷",
["event"] = "SPELL_CAST_START",
["npcID"] = 194291,
},
[13005] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊利达雷血领主",
["npcID"] = 23397,
},
[375605] = {
["source"] = "苏醒水晶",
["event"] = "SPELL_CAST_START",
["npcID"] = 205061,
},
[391470] = {
["event"] = "SPELL_CAST_START",
["source"] = "暮光保镖",
["npcID"] = 232443,
},
[453392] = {
["source"] = "苏雷吉根除者",
["event"] = "SPELL_CAST_START",
["npcID"] = 225408,
},
[15228] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗血神谕者",
["npcID"] = 17771,
},
[445205] = {
["event"] = "SPELL_CAST_START",
["source"] = "燧烬工蜂",
["npcID"] = 215023,
},
[439576] = {
["encounterName"] = "节点女亲王凯威扎",
["source"] = "节点女亲王凯威扎",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[448276] = {
["event"] = "SPELL_CAST_START",
["source"] = "真菌人掷孢者",
["npcID"] = 218667,
},
[445718] = {
["source"] = "影袭装货者",
["event"] = "SPELL_CAST_START",
["npcID"] = 223866,
},
[446230] = {
["encounterName"] = "地渊之海憎恶",
["source"] = "地渊之海憎恶",
["npcID"] = 214348,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2895,
},
[412455] = {
["source"] = "神秘结界",
["event"] = "SPELL_CAST_START",
["npcID"] = 210398,
},
[455443] = {
["source"] = "蜡克斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 226267,
},
[200663] = {
["source"] = "痛苦的灵魂",
["event"] = "SPELL_CAST_START",
["npcID"] = 95433,
},
[448791] = {
["source"] = "热切的圣骑士",
["event"] = "SPELL_CAST_START",
["npcID"] = 206704,
},
[443162] = {
["source"] = "噬光魔影",
["event"] = "SPELL_CAST_START",
["npcID"] = 217870,
},
[211666] = {
["source"] = "虹吸裂隙",
["event"] = "SPELL_CAST_START",
["npcID"] = 102787,
},
[456468] = {
["source"] = "斯卡丁躯壳",
["event"] = "SPELL_CAST_START",
["npcID"] = 213566,
},
[426787] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "阿努布伊卡基",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[125056] = {
["source"] = "冰皮",
["event"] = "SPELL_CAST_START",
["npcID"] = 165189,
},
[70043] = {
["encounterName"] = "布隆亚姆",
["source"] = "布隆亚姆",
["encounterID"] = 2006,
["event"] = "SPELL_CAST_START",
["npcID"] = 36497,
},
[256957] = {
["source"] = "铁潮塑浪者",
["event"] = "SPELL_CAST_START",
["npcID"] = 129370,
},
[394037] = {
["source"] = "达拉然的碎片",
["event"] = "SPELL_CAST_START",
["npcID"] = 223799,
},
[441630] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡赫提先锋",
["npcID"] = 218316,
},
[441119] = {
["source"] = "驯蜂者",
["event"] = "SPELL_CAST_START",
["npcID"] = 210264,
},
[69148] = {
["source"] = "幽灵守卫",
["event"] = "SPELL_CAST_START",
["npcID"] = 36666,
},
[389433] = {
["event"] = "SPELL_CAST_START",
["source"] = "天灾缚魂者",
["npcID"] = 230422,
},
[447261] = {
["encounterName"] = "乌比斯将军",
["source"] = "乌比斯将军",
["event"] = "SPELL_CAST_START",
["npcID"] = 39625,
},
[32863] = {
["event"] = "SPELL_CAST_START",
["source"] = "影月术士",
["npcID"] = 17371,
},
[275826] = {
["source"] = "艾什凡指挥官",
["event"] = "SPELL_CAST_START",
["npcID"] = 128969,
},
[13901] = {
["event"] = "SPELL_CAST_START",
["source"] = "骷髅守护者",
["npcID"] = 10390,
},
[41371] = {
["event"] = "SPELL_CAST_START",
["source"] = "苦痛祭司",
["npcID"] = 22956,
},
[444705] = {
["source"] = "热心的圣殿骑士",
["event"] = "SPELL_CAST_START",
["npcID"] = 207949,
},
[426283] = {
["source"] = "咒心入侵者",
["event"] = "SPELL_CAST_START",
["npcID"] = 212389,
},
[259519] = {
["source"] = "盐牙巨蜥",
["event"] = "SPELL_CAST_START",
["npcID"] = 136901,
},
[451871] = {
["source"] = "暮光唤地者",
["event"] = "SPELL_CAST_START",
["npcID"] = 224219,
},
[325469] = {
["event"] = "SPELL_CAST_START",
["source"] = "衰颓的胆裔",
["npcID"] = 166928,
},
[16172] = {
["source"] = "扭木守护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 11461,
},
[424750] = {
["event"] = "SPELL_CAST_START",
["source"] = "真菌腐法师",
["npcID"] = 207459,
},
[463644] = {
["encounterName"] = "伊森迪奥斯",
["source"] = "伊森迪奥斯",
["npcID"] = 226304,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3043,
},
[38621] = {
["source"] = "始祖幼龙训练者",
["event"] = "SPELL_CAST_START",
["npcID"] = 24082,
},
[22421] = {
["source"] = "海多斯博恩",
["event"] = "SPELL_CAST_START",
["npcID"] = 13280,
},
[381765] = {
["event"] = "SPELL_CAST_START",
["source"] = "天灾领主",
["npcID"] = 227180,
},
[243401] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊森德雷",
["npcID"] = 121912,
},
[53334] = {
["isChanneled"] = true,
["source"] = "阿努巴尔通灵师",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28925,
},
[451364] = {
["source"] = "暮光蛮兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 224152,
},
[449318] = {
["source"] = "蛛魔暗法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[275835] = {
["source"] = "艾什凡入侵者",
["event"] = "SPELL_CAST_START",
["npcID"] = 137516,
},
[239564] = {
["source"] = "观察之眼",
["event"] = "SPELL_CAST_START",
["npcID"] = 117741,
},
[450854] = {
["event"] = "SPELL_CAST_START",
["source"] = "死亡尖啸者艾肯塔克",
["npcID"] = 211263,
},
[320358] = {
["encounterName"] = "外科医生缝肉",
["event"] = "SPELL_CAST_START",
["source"] = "外科医生缝肉",
["npcID"] = 162689,
},
[321894] = {
["encounterName"] = "缚霜者纳尔佐",
["source"] = "缚霜者纳尔佐",
["npcID"] = 162693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2390,
},
[257732] = {
["source"] = "雕骨执行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 129374,
},
[454438] = {
["source"] = "艾什凡指挥官",
["event"] = "SPELL_CAST_START",
["npcID"] = 128969,
},
[256709] = {
["source"] = "激流破浪者",
["event"] = "SPELL_CAST_START",
["npcID"] = 129371,
},
[454440] = {
["source"] = "水鼠帮劫掠者",
["event"] = "SPELL_CAST_START",
["npcID"] = 135241,
},
[31601] = {
["event"] = "SPELL_CAST_START",
["source"] = "地穴爬行者",
["npcID"] = 10412,
},
[243661] = {
["source"] = "泰拉尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 121911,
},
[41117] = {
["encounterName"] = "伊利丹·怒风",
["source"] = "伊利丹·怒风",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[41245] = {
["source"] = "苦痛灵魂碎块",
["event"] = "SPELL_CAST_START",
["npcID"] = 23399,
},
[417598] = {
["source"] = "暮光使者",
["event"] = "SPELL_CAST_START",
["npcID"] = 232440,
},
[434998] = {
["source"] = "主厨丘伊",
["event"] = "SPELL_CAST_START",
["npcID"] = 214697,
},
[444722] = {
["source"] = "热心的圣殿骑士",
["event"] = "SPELL_CAST_START",
["npcID"] = 207949,
},
[465704] = {
["source"] = "蕨皮腐肉召唤者",
["event"] = "SPELL_CAST_START",
["npcID"] = 230686,
},
[396107] = {
["event"] = "SPELL_CAST_START",
["source"] = "控火师罗格雷恩",
["npcID"] = 232571,
},
[445236] = {
["event"] = "SPELL_CAST_START",
["source"] = "怨毒盘蛇",
["npcID"] = 218735,
},
[450866] = {
["event"] = "SPELL_CAST_START",
["source"] = "荒野唤魔者",
["npcID"] = 11457,
},
[451378] = {
["source"] = "暮光监督者",
["event"] = "SPELL_CAST_START",
["npcID"] = 224221,
},
[446261] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎石追猎者",
["npcID"] = 215833,
},
[451379] = {
["source"] = "暮光监督者",
["event"] = "SPELL_CAST_START",
["npcID"] = 224221,
},
[435004] = {
["isChanneled"] = true,
["source"] = "主厨丘伊",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214697,
},
[41374] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊利达雷执政官",
["npcID"] = 23400,
},
[415047] = {
["encounterName"] = "无头骑士",
["source"] = "无头骑士",
["npcID"] = 207438,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2725,
},
[431935] = {
["event"] = "SPELL_CAST_START",
["source"] = "皇家记者伊斯特伊克斯",
["npcID"] = 226234,
},
[446776] = {
["source"] = "作战山猫",
["event"] = "SPELL_CAST_START",
["npcID"] = 206699,
},
[68899] = {
["encounterName"] = "噬魂者",
["source"] = "噬魂者",
["encounterID"] = 2007,
["event"] = "SPELL_CAST_START",
["npcID"] = 36502,
},
[432448] = {
["source"] = "夜幕祭师",
["event"] = "SPELL_CAST_START",
["npcID"] = 214761,
},
[465201] = {
["source"] = "提克迪奥斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 231059,
},
[320376] = {
["encounterName"] = "外科医生缝肉",
["source"] = "缝肉的造物",
["npcID"] = 164578,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[455480] = {
["source"] = "泰克",
["event"] = "SPELL_CAST_START",
["npcID"] = 226272,
},
[31602] = {
["event"] = "SPELL_CAST_START",
["source"] = "奈鲁布恩坎",
["npcID"] = 10437,
},
[191726] = {
["source"] = "强力闪电元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 97022,
},
[451387] = {
["source"] = "暮光熔岩操纵使",
["event"] = "SPELL_CAST_START",
["npcID"] = 224249,
},
[322938] = {
["isChanneled"] = true,
["source"] = "德鲁斯特收割者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164921,
},
[450364] = {
["source"] = "皇家纺织者",
["event"] = "SPELL_CAST_START",
["npcID"] = 222881,
},
[399701] = {
["event"] = "SPELL_CAST_START",
["source"] = "废土剥石者",
["npcID"] = 220363,
},
[432965] = {
["encounterName"] = "苏雷吉队长席克兰",
["source"] = "席克兰",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[324986] = {
["source"] = "纱雾追猎者",
["event"] = "SPELL_CAST_START",
["npcID"] = 166301,
},
[59734] = {
["encounterName"] = "掠夺者因格瓦尔",
["source"] = "掠夺者因格瓦尔",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[465718] = {
["event"] = "SPELL_CAST_START",
["source"] = "陷惧末日尖哮者",
["npcID"] = 231107,
},
[381280] = {
["source"] = "乌克图鲁特受训者",
["event"] = "SPELL_CAST_START",
["npcID"] = 193203,
},
[168699] = {
["source"] = "莫克里克·黑指",
["event"] = "SPELL_CAST_START",
["npcID"] = 73459,
},
[451391] = {
["source"] = "无面腐蚀者",
["event"] = "SPELL_CAST_START",
["npcID"] = 39392,
},
[439621] = {
["encounterName"] = "女王之牙",
["source"] = "恩克斯",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216648,
},
[452927] = {
["event"] = "SPELL_CAST_START",
["source"] = "巴纳扎尔",
["npcID"] = 10813,
},
[463674] = {
["encounterName"] = "洛考尔",
["source"] = "洛考尔",
["encounterID"] = 3042,
["event"] = "SPELL_CAST_START",
["npcID"] = 226315,
},
[460092] = {
["source"] = "锥喉鹿角巨虫",
["event"] = "SPELL_CAST_START",
["npcID"] = 167111,
},
[427852] = {
["encounterName"] = "虚空代言人艾里克",
["source"] = "虚空代言人艾里克",
["encounterID"] = 2883,
["event"] = "SPELL_CAST_START",
["npcID"] = 213119,
},
[465210] = {
["encounterName"] = "达格兰·索瑞森大帝",
["source"] = "达格兰·索瑞森大帝",
["npcID"] = 226305,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[445252] = {
["isChanneled"] = true,
["source"] = "蜃鱼人通灵师",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214625,
},
[427342] = {
["isChanneled"] = true,
["source"] = "阿拉希步兵",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[295311] = {
["event"] = "SPELL_CAST_START",
["source"] = "埃兰迪雅·奥箭",
["npcID"] = 154034,
},
[451395] = {
["source"] = "无面腐蚀者",
["event"] = "SPELL_CAST_START",
["npcID"] = 39392,
},
[470330] = {
["event"] = "SPELL_CAST_START",
["source"] = "烈焰行者",
["npcID"] = 233203,
},
[468795] = {
["source"] = "厄炉机械师",
["event"] = "SPELL_CAST_START",
["npcID"] = 232266,
},
[444743] = {
["source"] = "亡灵法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 221760,
},
[428879] = {
["source"] = "击石者",
["event"] = "SPELL_CAST_START",
["npcID"] = 213954,
},
[406874] = {
["event"] = "SPELL_CAST_START",
["source"] = "暮光保镖",
["npcID"] = 232443,
},
[450885] = {
["event"] = "SPELL_CAST_START",
["source"] = "燧烬蜂觅食者",
["npcID"] = 222976,
},
[18649] = {
["source"] = "沙怒暗影猎手",
["event"] = "SPELL_CAST_START",
["npcID"] = 7246,
},
[20824] = {
["source"] = "逆风食人魔法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 7379,
},
[427346] = {
["source"] = "虔诚的牧师",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[191732] = {
["source"] = "强力闪电元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 97022,
},
[43935] = {
["isChanneled"] = true,
["source"] = "掠龙碎骨者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24069,
},
[326021] = {
["source"] = "锥喉饕餮者",
["event"] = "SPELL_CAST_START",
["npcID"] = 172312,
},
[460100] = {
["event"] = "SPELL_CAST_START",
["source"] = "板岩之牙",
["npcID"] = 228439,
},
[160772] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "米雷达尔市民",
["npcID"] = 225601,
},
[408927] = {
["event"] = "SPELL_CAST_START",
["source"] = "控火师罗格雷恩",
["npcID"] = 232571,
},
[65301] = {
["encounterName"] = "尤格-萨隆",
["source"] = "萨拉",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[422233] = {
["encounterName"] = "斯卡莫拉克",
["source"] = "斯卡莫拉克",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[445774] = {
["event"] = "SPELL_CAST_START",
["source"] = "狂乱掠食者",
["npcID"] = 216325,
},
[17434] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥里克斯·瑞文戴尔领主",
["npcID"] = 45412,
},
[295320] = {
["event"] = "SPELL_CAST_START",
["source"] = "埃兰迪雅·奥箭",
["npcID"] = 154034,
},
[53467] = {
["encounterName"] = "阿努巴拉克",
["source"] = "阿努巴拉克",
["encounterID"] = 1973,
["event"] = "SPELL_CAST_START",
["npcID"] = 29120,
},
[63830] = {
["encounterName"] = "尤格-萨隆",
["source"] = "萨拉",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[384366] = {
["event"] = "SPELL_CAST_START",
["source"] = "灰岩猎鹰",
["npcID"] = 214772,
},
[448847] = {
["encounterName"] = "乌比斯将军",
["source"] = "乌比斯将军",
["event"] = "SPELL_CAST_START",
["npcID"] = 39625,
},
[460106] = {
["event"] = "SPELL_CAST_START",
["source"] = "板岩之牙",
["npcID"] = 228439,
},
[216044] = {
["event"] = "SPELL_CAST_START",
["source"] = "沙索斯",
["npcID"] = 108678,
},
[439637] = {
["encounterName"] = "女王之牙",
["source"] = "回响之影",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 219675,
},
[465225] = {
["encounterName"] = "达格兰·索瑞森大帝",
["source"] = "拉格纳罗斯的影像",
["npcID"] = 231006,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[117010] = {
["source"] = "忿怒具象",
["event"] = "SPELL_CAST_START",
["npcID"] = 120768,
},
[427356] = {
["source"] = "虔诚的牧师",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[424798] = {
["event"] = "SPELL_CAST_START",
["source"] = "被感染的野兽",
["npcID"] = 210478,
},
[437592] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[427869] = {
["encounterName"] = "虚空代言人艾里克",
["source"] = "虚空代言人艾里克",
["encounterID"] = 2883,
["event"] = "SPELL_CAST_START",
["npcID"] = 213119,
},
[445781] = {
["source"] = "影袭装货者",
["event"] = "SPELL_CAST_START",
["npcID"] = 223866,
},
[205811] = {
["event"] = "SPELL_CAST_START",
["source"] = "陷惧末日领主",
["npcID"] = 231130,
},
[428894] = {
["source"] = "咒炉荣誉卫兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 214264,
},
[427359] = {
["isChanneled"] = true,
["source"] = "阿拉希步兵",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[463182] = {
["encounterName"] = "恐怖船长洛克伍德",
["source"] = "恐怖船长洛克伍德",
["encounterID"] = 2109,
["event"] = "SPELL_CAST_START",
["npcID"] = 129208,
},
[451412] = {
["event"] = "SPELL_CAST_START",
["source"] = "噬灭者乌格拉克斯",
["npcID"] = 215657,
},
[7713] = {
["event"] = "SPELL_CAST_START",
["source"] = "亡灵邮差",
["npcID"] = 11142,
},
[80549] = {
["source"] = "狂怒的火焰风暴",
["event"] = "SPELL_CAST_START",
["npcID"] = 39939,
},
[41378] = {
["event"] = "SPELL_CAST_START",
["source"] = "欢愉祭司",
["npcID"] = 22964,
},
[76711] = {
["source"] = "暮光欺诈者",
["event"] = "SPELL_CAST_START",
["npcID"] = 40167,
},
[124048] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥苏尔锐角者",
["npcID"] = 60647,
},
[425315] = {
["encounterName"] = "旋菇",
["source"] = "旋菇",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[449368] = {
["event"] = "SPELL_CAST_START",
["source"] = "流浪者伊达",
["npcID"] = 220953,
},
[458068] = {
["event"] = "SPELL_CAST_START",
["source"] = "呱吉特",
["npcID"] = 214757,
},
[405870] = {
["source"] = "厄炉魔匠",
["event"] = "SPELL_CAST_START",
["npcID"] = 232458,
},
["167385"] = {
["npcID"] = 175451,
},
[383866] = {
["source"] = "烛芯化形",
["event"] = "SPELL_CAST_START",
["npcID"] = 205407,
},
[322968] = {
["source"] = "德鲁斯特恶爪者",
["event"] = "SPELL_CAST_START",
["npcID"] = 165111,
},
[446300] = {
["encounterName"] = "地渊之海憎恶",
["source"] = "地渊之海憎恶",
["npcID"] = 214348,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2895,
},
[448859] = {
["event"] = "SPELL_CAST_START",
["source"] = "被激怒的醉鬼",
["npcID"] = 218655,
},
[57051] = {
["source"] = "晶化保卫者",
["event"] = "SPELL_CAST_START",
["npcID"] = 26792,
},
[17435] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥里克斯·瑞文戴尔领主",
["npcID"] = 45412,
},
[443232] = {
["source"] = "夜幕哨兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 217485,
},
[440162] = {
["event"] = "SPELL_CAST_START",
["source"] = "真菌人诡伞者",
["npcID"] = 218665,
},
[426345] = {
["source"] = "虚触元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 212400,
},
[15982] = {
["source"] = "巫医祖穆拉恩",
["event"] = "SPELL_CAST_START",
["npcID"] = 7271,
},
[448351] = {
["event"] = "SPELL_CAST_START",
["source"] = "狗头人灭焰压制者",
["npcID"] = 218662,
},
[437093] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[448864] = {
["event"] = "SPELL_CAST_START",
["source"] = "壮实的竞争者",
["npcID"] = 217646,
},
[451423] = {
["source"] = "谢非提克",
["event"] = "SPELL_CAST_START",
["npcID"] = 219984,
},
[426860] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "阿努布伊卡基",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[466265] = {
["encounterName"] = "怒炉将军",
["source"] = "怒炉将军",
["encounterID"] = 3045,
["event"] = "SPELL_CAST_START",
["npcID"] = 226316,
},
[326046] = {
["source"] = "锥喉鹿角巨虫",
["event"] = "SPELL_CAST_START",
["npcID"] = 167111,
},
[451937] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "盛宴暴食者",
["npcID"] = 217747,
},
[334747] = {
["event"] = "SPELL_CAST_START",
["source"] = "尸体收割者",
["npcID"] = 166302,
},
[394622] = {
["source"] = "腐臭橡树",
["event"] = "SPELL_CAST_START",
["npcID"] = 231083,
},
[389505] = {
["event"] = "SPELL_CAST_START",
["source"] = "天灾憎恶",
["npcID"] = 227177,
},
[334748] = {
["event"] = "SPELL_CAST_START",
["source"] = "尸体收割者",
["npcID"] = 166302,
},
[458080] = {
["event"] = "SPELL_CAST_START",
["source"] = "呱吉特",
["npcID"] = 214757,
},
[451428] = {
["isChanneled"] = true,
["source"] = "谢非提克",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219984,
},
[3110] = {
["event"] = "SPELL_CAST_START",
["source"] = "拉兹洛普",
["npcID"] = 416,
},
[64153] = {
["encounterName"] = "尤格-萨隆",
["source"] = "腐蚀触须",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33985,
},
[433519] = {
["encounterName"] = "苏雷吉队长席克兰",
["source"] = "席克兰",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[450407] = {
["event"] = "SPELL_CAST_START",
["source"] = "欧尔塔",
["npcID"] = 221067,
},
[462690] = {
["source"] = "黑化躯壳",
["event"] = "SPELL_CAST_START",
["npcID"] = 220164,
},
[58460] = {
["event"] = "SPELL_CAST_START",
["source"] = "铁怒狱卒",
["npcID"] = 232893,
},
[449385] = {
["event"] = "SPELL_CAST_START",
["source"] = "流浪者伊达",
["npcID"] = 220953,
},
[429427] = {
["source"] = "咒炉塑石者",
["event"] = "SPELL_CAST_START",
["npcID"] = 214066,
},
[436592] = {
["encounterName"] = "戈尔迪·底爵",
["source"] = "戈尔迪·底爵",
["encounterID"] = 2930,
["event"] = "SPELL_CAST_START",
["npcID"] = 214661,
},
[428916] = {
["source"] = "虔诚的牧师",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[429428] = {
["source"] = "爆地图腾",
["event"] = "SPELL_CAST_START",
["npcID"] = 214287,
},
[323496] = {
["event"] = "SPELL_CAST_START",
["source"] = "血肉工匠",
["npcID"] = 165872,
},
[455016] = {
["event"] = "SPELL_CAST_START",
["source"] = "腐蚀剃天者",
["npcID"] = 225817,
},
[427382] = {
["source"] = "引擎语者",
["event"] = "SPELL_CAST_START",
["npcID"] = 212764,
},
[427894] = {
["source"] = "铸炉大师达米安",
["event"] = "SPELL_CAST_START",
["npcID"] = 212831,
},
[187656] = {
["source"] = "蔑魔步兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 118807,
},
[451435] = {
["source"] = "虚空幽灵",
["event"] = "SPELL_CAST_START",
["npcID"] = 224466,
},
[448877] = {
["encounterName"] = "乌比斯将军",
["source"] = "乌比斯将军",
["event"] = "SPELL_CAST_START",
["npcID"] = 39625,
},
[34984] = {
["event"] = "SPELL_CAST_START",
["source"] = "沼泽鳐",
["npcID"] = 17731,
},
[268230] = {
["source"] = "艾什凡水手",
["event"] = "SPELL_CAST_START",
["npcID"] = 138464,
},
[41381] = {
["event"] = "SPELL_CAST_START",
["source"] = "欢愉祭司",
["npcID"] = 22964,
},
[6466] = {
["event"] = "SPELL_CAST_START",
["source"] = "地精木匠",
["npcID"] = 641,
},
[440181] = {
["source"] = "侵蚀的真菌人",
["event"] = "SPELL_CAST_START",
["npcID"] = 216281,
},
[54431] = {
["source"] = "邪缚猎潮者",
["event"] = "SPELL_CAST_START",
["npcID"] = 116981,
},
[450929] = {
["event"] = "SPELL_CAST_START",
["source"] = "欧尔塔",
["npcID"] = 221067,
},
[326574] = {
["encounterName"] = "外科医生缝肉",
["source"] = "外科医生缝肉",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[445813] = {
["source"] = "不稳定的测试对象",
["event"] = "SPELL_CAST_START",
["npcID"] = 216328,
},
[440184] = {
["source"] = "几丁质骑士",
["event"] = "SPELL_CAST_START",
["npcID"] = 219725,
},
[53472] = {
["encounterName"] = "阿努巴拉克",
["source"] = "阿努巴拉克",
["encounterID"] = 1973,
["event"] = "SPELL_CAST_START",
["npcID"] = 29120,
},
[452980] = {
["source"] = "惊魂聚合体",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[41382] = {
["isChanneled"] = true,
["source"] = "伊利达雷战斗法师",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23402,
},
[458610] = {
["event"] = "SPELL_CAST_START",
["source"] = "踏蟾者",
["npcID"] = 207803,
},
[464240] = {
["source"] = "高阶牧师艾姆雅",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[22938] = {
["event"] = "SPELL_CAST_START",
["source"] = "复生的战斗法师",
["npcID"] = 10425,
},
[448888] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[322486] = {
["source"] = "仙木灵居民",
["event"] = "SPELL_CAST_START",
["npcID"] = 164929,
},
[450424] = {
["source"] = "凝结的蜡油巨人",
["event"] = "SPELL_CAST_START",
["npcID"] = 223206,
},
[463218] = {
["source"] = "雇佣的打手",
["event"] = "SPELL_CAST_START",
["npcID"] = 210269,
},
[445819] = {
["event"] = "SPELL_CAST_START",
["source"] = "暴怒的深岩剥石者",
["npcID"] = 218657,
},
[465266] = {
["source"] = "提克迪奥斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 231059,
},
[269266] = {
["encounterName"] = "维克戈斯",
["source"] = "攻城恐魔",
["encounterID"] = 2100,
["event"] = "SPELL_CAST_START",
["npcID"] = 137614,
},
[431491] = {
["source"] = "夜幕司令官",
["event"] = "SPELL_CAST_START",
["npcID"] = 214762,
},
[338353] = {
["event"] = "SPELL_CAST_START",
["source"] = "尸体采集者",
["npcID"] = 173016,
},
[105762] = {
["event"] = "SPELL_CAST_START",
["source"] = "古鲁金蛮尾猴",
["npcID"] = 56309,
},
[465268] = {
["encounterName"] = "达格兰·索瑞森大帝",
["source"] = "火焰驱逐者",
["npcID"] = 230991,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[371618] = {
["source"] = "觉醒的机械师",
["event"] = "SPELL_CAST_START",
["npcID"] = 227273,
},
[17405] = {
["event"] = "SPELL_CAST_START",
["source"] = "巴纳扎尔",
["npcID"] = 10813,
},
[431494] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕战略家",
["npcID"] = 213934,
},
[444288] = {
["event"] = "SPELL_CAST_START",
["source"] = "织网助祭",
["npcID"] = 218320,
},
[451965] = {
["source"] = "熔核巨人",
["event"] = "SPELL_CAST_START",
["npcID"] = 40166,
},
[440195] = {
["source"] = "恶意暗影",
["event"] = "SPELL_CAST_START",
["npcID"] = 225338,
},
[338357] = {
["event"] = "SPELL_CAST_START",
["source"] = "格里恩缝合憎恶",
["npcID"] = 172981,
},
[400279] = {
["encounterName"] = "洛考尔",
["source"] = "洛考尔之子",
["encounterID"] = 3042,
["event"] = "SPELL_CAST_START",
["npcID"] = 229444,
},
[11969] = {
["event"] = "SPELL_CAST_START",
["source"] = "炽焰禁锢元素",
["npcID"] = 38896,
},
[448384] = {
["event"] = "SPELL_CAST_START",
["source"] = "扭芯狗头人",
["npcID"] = 221066,
},
[4979] = {
["event"] = "SPELL_CAST_START",
["source"] = "迪菲亚招魂师",
["npcID"] = 1729,
},
[465275] = {
["source"] = "幽灵血牙",
["event"] = "SPELL_CAST_START",
["npcID"] = 231061,
},
[438153] = {
["encounterName"] = "节点女亲王凯威扎",
["source"] = "扭曲虚空幻影",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 218429,
},
[7154] = {
["source"] = "沙怒噬魂者",
["event"] = "SPELL_CAST_START",
["npcID"] = 7247,
},
[451971] = {
["source"] = "熔核巨人",
["event"] = "SPELL_CAST_START",
["npcID"] = 40166,
},
[22651] = {
["source"] = "瑟雷姆·刺蹄",
["event"] = "SPELL_CAST_START",
["npcID"] = 11490,
},
[444296] = {
["source"] = "阿拉希骑士",
["event"] = "SPELL_CAST_START",
["npcID"] = 206696,
},
[126235] = {
["event"] = "SPELL_CAST_START",
["source"] = "古代雕像",
["npcID"] = 228791,
},
[22907] = {
["encounterName"] = "沼地领主穆塞雷克",
["source"] = "沼地领主穆塞雷克",
["npcID"] = 17826,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1947,
},
[16798] = {
["source"] = "弗雷斯特恩",
["event"] = "SPELL_CAST_START",
["npcID"] = 10558,
},
[39849] = {
["encounterName"] = "伊利丹·怒风",
["source"] = "伊利丹·怒风",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[464769] = {
["encounterName"] = "弗莱拉斯大使",
["source"] = "燃烧之魂",
["npcID"] = 230799,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3047,
},
[66489] = {
["source"] = "克瓦迪尔持戟者",
["event"] = "SPELL_CAST_START",
["npcID"] = 34907,
},
[268260] = {
["source"] = "艾什凡炮手",
["event"] = "SPELL_CAST_START",
["npcID"] = 138465,
},
[381357] = {
["source"] = "狩猎的奥獭",
["event"] = "SPELL_CAST_START",
["npcID"] = 190267,
},
[17470] = {
["event"] = "SPELL_CAST_START",
["source"] = "悲惨的提米",
["npcID"] = 10808,
},
[238592] = {
["source"] = "恶魔训导员",
["event"] = "SPELL_CAST_START",
["npcID"] = 117018,
},
[19645] = {
["event"] = "SPELL_CAST_START",
["source"] = "哀嚎的女妖",
["npcID"] = 10464,
},
[462216] = {
["source"] = "暮光烈焰粉碎者",
["event"] = "SPELL_CAST_START",
["npcID"] = 224240,
},
[68793] = {
["encounterName"] = "布隆亚姆",
["source"] = "布隆亚姆",
["encounterID"] = 2006,
["event"] = "SPELL_CAST_START",
["npcID"] = 36497,
},
[320462] = {
["event"] = "SPELL_CAST_START",
["source"] = "佐尔拉姆斯巫师",
["npcID"] = 163128,
},
[423324] = {
["encounterName"] = "斯卡莫拉克",
["source"] = "斯卡莫拉克",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[438677] = {
["encounterName"] = "流丝之庭",
["source"] = "阿努巴拉什",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[400296] = {
["source"] = "厄炉魔匠",
["event"] = "SPELL_CAST_START",
["npcID"] = 232458,
},
[233220] = {
["source"] = "邪能召唤者萨勒兹拉",
["event"] = "SPELL_CAST_START",
["npcID"] = 117056,
},
[386991] = {
["source"] = "原始始祖幼龙",
["event"] = "SPELL_CAST_START",
["npcID"] = 184869,
},
[8995] = {
["source"] = "暮光火枪手",
["event"] = "SPELL_CAST_START",
["npcID"] = 42155,
},
[320464] = {
["event"] = "SPELL_CAST_START",
["source"] = "佐尔拉姆斯巫师",
["npcID"] = 163128,
},
[15232] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗血神谕者",
["npcID"] = 17771,
},
[243712] = {
["source"] = "卡扎克",
["event"] = "SPELL_CAST_START",
["npcID"] = 121818,
},
[449939] = {
["encounterName"] = "埃鲁达克",
["source"] = "埃鲁达克",
["encounterID"] = 1049,
["event"] = "SPELL_CAST_START",
["npcID"] = 40484,
},
[449940] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[243713] = {
["source"] = "卡扎克",
["event"] = "SPELL_CAST_START",
["npcID"] = 121818,
},
[433053] = {
["event"] = "SPELL_CAST_START",
["source"] = "食光者",
["npcID"] = 216036,
},
[432030] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛛魔斩颚者",
["npcID"] = 218654,
},
[434589] = {
["event"] = "SPELL_CAST_START",
["source"] = "大恶魔",
["npcID"] = 217429,
},
[441242] = {
["source"] = "美味测试员",
["event"] = "SPELL_CAST_START",
["npcID"] = 220060,
},
[450454] = {
["event"] = "SPELL_CAST_START",
["source"] = "欧尔塔",
["npcID"] = 221067,
},
[328146] = {
["encounterName"] = "凋骨",
["source"] = "食腐蛆虫",
["npcID"] = 164702,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[15536] = {
["event"] = "SPELL_CAST_START",
["source"] = "暮光烈焰召唤者",
["npcID"] = 38926,
},
[69051] = {
["encounterName"] = "噬魂者",
["source"] = "噬魂者",
["encounterID"] = 2007,
["event"] = "SPELL_CAST_START",
["npcID"] = 36502,
},
[443292] = {
["source"] = "噬光魔影",
["event"] = "SPELL_CAST_START",
["npcID"] = 217870,
},
[440222] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗狂收割者",
["npcID"] = 206067,
},
[15744] = {
["event"] = "SPELL_CAST_START",
["source"] = "复生的战斗法师",
["npcID"] = 10425,
},
[444829] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[40683] = {
["encounterName"] = "伊利丹·怒风",
["source"] = "伊利丹·怒风",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[200218] = {
["event"] = "SPELL_CAST_START",
["source"] = "里弗斯",
["npcID"] = 101462,
},
[69564] = {
["source"] = "护魂精兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 36620,
},
[285165] = {
["event"] = "SPELL_CAST_START",
["source"] = "玛丽丝·邪触",
["npcID"] = 154040,
},
[451996] = {
["encounterName"] = "铸炉之主索朗格斯",
["source"] = "铸炉之主索朗格斯",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[327130] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "血肉工匠",
["npcID"] = 165872,
},
[389564] = {
["event"] = "SPELL_CAST_START",
["source"] = "贪婪的饥螈",
["npcID"] = 217727,
},
[465815] = {
["event"] = "SPELL_CAST_START",
["source"] = "其拉战地卫士",
["npcID"] = 230420,
},
[11970] = {
["source"] = "被制服的纵火者",
["event"] = "SPELL_CAST_START",
["npcID"] = 46838,
},
[14033] = {
["event"] = "SPELL_CAST_START",
["source"] = "地狱魔法猎犬",
["npcID"] = 17401,
},
[328667] = {
["event"] = "SPELL_CAST_START",
["source"] = "脆骨法师",
["npcID"] = 163126,
},
[54309] = {
["source"] = "阿努巴尔原始卫士",
["event"] = "SPELL_CAST_START",
["npcID"] = 29128,
},
[434089] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[272888] = {
["source"] = "艾什凡破坏者",
["event"] = "SPELL_CAST_START",
["npcID"] = 137517,
},
[447395] = {
["encounterName"] = "铸炉之主索朗格斯",
["source"] = "铸炉之主索朗格斯",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[440231] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗狂收割者",
["npcID"] = 206067,
},
[424879] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[16336] = {
["event"] = "SPELL_CAST_START",
["source"] = "幽灵市民",
["npcID"] = 10385,
},
[449444] = {
["encounterName"] = "铸炉之主索朗格斯",
["source"] = "铸炉之主索朗格斯",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[450980] = {
["encounterName"] = "流丝之庭",
["source"] = "纺束者塔卡兹基",
["npcID"] = 217491,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2921,
},
[63713] = {
["source"] = "无面恐魔",
["event"] = "SPELL_CAST_START",
["npcID"] = 33772,
},
[295409] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "玛丽丝·邪触",
["npcID"] = 154040,
},
[30937] = {
["event"] = "SPELL_CAST_START",
["source"] = "影月导魔者",
["npcID"] = 17653,
},
[389572] = {
["source"] = "湿滑虹吸鳗",
["event"] = "SPELL_CAST_START",
["npcID"] = 214548,
},
[449447] = {
["source"] = "监督者洛斯卡拉格",
["event"] = "SPELL_CAST_START",
["npcID"] = 221071,
},
[449960] = {
["event"] = "SPELL_CAST_START",
["source"] = "艾尔玛",
["npcID"] = 228419,
},
[404415] = {
["source"] = "恐惧之影",
["event"] = "SPELL_CAST_START",
["npcID"] = 206338,
},
[243468] = {
["source"] = "莱索恩",
["event"] = "SPELL_CAST_START",
["npcID"] = 121821,
},
[69056] = {
["source"] = "护魂守卫",
["event"] = "SPELL_CAST_START",
["npcID"] = 36478,
},
[31673] = {
["encounterName"] = "霍加尔芬",
["source"] = "霍加尔芬",
["npcID"] = 17770,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1946,
},
[465828] = {
["event"] = "SPELL_CAST_START",
["source"] = "阿努比萨斯征服者",
["npcID"] = 226757,
},
[456105] = {
["source"] = "怒之煞",
["event"] = "SPELL_CAST_START",
["npcID"] = 226646,
},
[432565] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗影具象",
["npcID"] = 211341,
},
[449453] = {
["source"] = "监督者洛斯卡拉格",
["event"] = "SPELL_CAST_START",
["npcID"] = 221071,
},
[449965] = {
["event"] = "SPELL_CAST_START",
["source"] = "毒根",
["npcID"] = 214783,
},
[455596] = {
["event"] = "SPELL_CAST_START",
["source"] = "巴瑟拉斯镇长",
["npcID"] = 10435,
},
[431544] = {
["event"] = "SPELL_CAST_START",
["source"] = "潜地聚石者",
["npcID"] = 216537,
},
[448944] = {
["event"] = "SPELL_CAST_START",
["source"] = "狗头人灭焰压制者",
["npcID"] = 218662,
},
[456109] = {
["event"] = "SPELL_CAST_START",
["source"] = "怒之煞",
["npcID"] = 226646,
},
[378835] = {
["source"] = "蕨皮腐肉召唤者",
["event"] = "SPELL_CAST_START",
["npcID"] = 230686,
},
[295420] = {
["event"] = "SPELL_CAST_START",
["source"] = "玛丽丝·邪触",
["npcID"] = 154040,
},
[440246] = {
["encounterName"] = "流丝之庭",
["source"] = "阿努巴拉什",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[447411] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[441782] = {
["encounterName"] = "流丝之庭",
["source"] = "纺束者塔卡兹基",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[438200] = {
["encounterName"] = "流丝之庭",
["source"] = "纺束者塔卡兹基",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[213279] = {
["source"] = "邪能卫士入侵者",
["event"] = "SPELL_CAST_START",
["npcID"] = 104758,
},
[42669] = {
["encounterName"] = "掠夺者因格瓦尔",
["source"] = "掠夺者因格瓦尔",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[456112] = {
["source"] = "怒之煞",
["event"] = "SPELL_CAST_START",
["npcID"] = 226646,
},
[450483] = {
["encounterName"] = "流丝之庭",
["source"] = "纺束者塔卡兹基",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[202277] = {
["source"] = "艾瑞达缚邪者",
["event"] = "SPELL_CAST_START",
["npcID"] = 116909,
},
[431549] = {
["event"] = "SPELL_CAST_START",
["source"] = "萨兹凯尔",
["npcID"] = 221166,
},
[458672] = {
["source"] = "岩石看守者阿尔卡冯",
["event"] = "SPELL_CAST_START",
["npcID"] = 227257,
},
[335853] = {
["source"] = "瓦格里猎人",
["event"] = "SPELL_CAST_START",
["npcID"] = 227967,
},
[295425] = {
["event"] = "SPELL_CAST_START",
["source"] = "玛丽丝·邪触",
["npcID"] = 154040,
},
[20735] = {
["encounterName"] = "伊琳娜·暗木",
["source"] = "伊琳娜·暗木",
["encounterID"] = 347,
["event"] = "SPELL_CAST_START",
["npcID"] = 11488,
},
[35377] = {
["source"] = "被制服的纵火者",
["event"] = "SPELL_CAST_START",
["npcID"] = 46838,
},
[11443] = {
["event"] = "SPELL_CAST_START",
["source"] = "图萨丁暗影法师",
["npcID"] = 10398,
},
[431552] = {
["source"] = "胭脂红炼金师",
["event"] = "SPELL_CAST_START",
["npcID"] = 222124,
},
[288774] = {
["isChanneled"] = true,
["source"] = "失控的晶塔",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229739,
},
[15585] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗血治疗者",
["npcID"] = 17730,
},
[322550] = {
["encounterName"] = "特雷德奥瓦",
["source"] = "特雷德奥瓦",
["encounterID"] = 2393,
["event"] = "SPELL_CAST_START",
["npcID"] = 164517,
},
[445882] = {
["event"] = "SPELL_CAST_START",
["source"] = "石蹄猪",
["npcID"] = 214928,
},
[448441] = {
["event"] = "SPELL_CAST_START",
["source"] = "鳄鱼人唤泉者",
["npcID"] = 218650,
},
[435136] = {
["encounterName"] = "噬灭者乌格拉克斯",
["source"] = "噬灭者乌格拉克斯",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[183345] = {
["source"] = "克索诺斯教徒",
["event"] = "SPELL_CAST_START",
["npcID"] = 119053,
},
[177460] = {
["source"] = "堕落的清风之魂",
["event"] = "SPELL_CAST_START",
["npcID"] = 80381,
},
[443325] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[443837] = {
["encounterName"] = "重塑之怒",
["source"] = "代言人达文鲁兹",
["npcID"] = 218022,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2998,
},
[448443] = {
["encounterName"] = "蛛网将军阿贝纳尔",
["source"] = "蛛网将军阿贝纳尔",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[424903] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["encounterID"] = 2854,
["event"] = "SPELL_CAST_START",
["npcID"] = 210108,
},
[441791] = {
["encounterName"] = "流丝之庭",
["source"] = "阿努巴拉什",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[432068] = {
["event"] = "SPELL_CAST_START",
["source"] = "拉巴恩",
["npcID"] = 228343,
},
[85692] = {
["event"] = "SPELL_CAST_START",
["source"] = "末日守卫",
["npcID"] = 11859,
},
[450492] = {
["source"] = "泽克维尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 217208,
},
[17473] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥里克斯·瑞文戴尔领主",
["npcID"] = 45412,
},
[41455] = {
["encounterName"] = "伊利达雷议会",
["source"] = "女公爵玛兰德",
["npcID"] = 22951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[322557] = {
["source"] = "德鲁斯特斩魂者",
["event"] = "SPELL_CAST_START",
["npcID"] = 164920,
},
[443842] = {
["encounterName"] = "噬灭者乌格拉克斯",
["source"] = "噬灭者乌格拉克斯",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[446401] = {
["source"] = "授权方阵兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 221917,
},
[456125] = {
["event"] = "SPELL_CAST_START",
["source"] = "水晶夹钳者",
["npcID"] = 215881,
},
[436679] = {
["event"] = "SPELL_CAST_START",
["source"] = "甲虫队长沃拉坎",
["npcID"] = 218306,
},
[458685] = {
["event"] = "SPELL_CAST_START",
["source"] = "莫斯艾兹克",
["npcID"] = 206203,
},
[52586] = {
["encounterName"] = "看门者克里克希尔",
["source"] = "看门者克里克希尔",
["encounterID"] = 1971,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28684,
},
[449986] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[434122] = {
["source"] = "扬升新兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 216326,
},
[295438] = {
["event"] = "SPELL_CAST_START",
["source"] = "玛丽丝·邪触",
["npcID"] = 154040,
},
[446405] = {
["encounterName"] = "地渊之海憎恶",
["source"] = "地渊之海憎恶",
["npcID"] = 214348,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2895,
},
[462782] = {
["event"] = "SPELL_CAST_START",
["source"] = "出故障的防御炮台",
["npcID"] = 229678,
},
[443336] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[78530] = {
["event"] = "SPELL_CAST_START",
["source"] = "僵化的树人",
["npcID"] = 11458,
},
[451014] = {
["event"] = "SPELL_CAST_START",
["source"] = "特迪斯·扭木",
["npcID"] = 11489,
},
[470973] = {
["source"] = "法拉克斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 232593,
},
[25054] = {
["event"] = "SPELL_CAST_START",
["source"] = "复生的牧师",
["npcID"] = 10423,
},
[444363] = {
["encounterName"] = "血缚恐魔",
["source"] = "血缚恐魔",
["npcID"] = 214502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[449481] = {
["source"] = "监督者洛斯卡拉格",
["event"] = "SPELL_CAST_START",
["npcID"] = 221071,
},
[450505] = {
["source"] = "泽克维尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 217208,
},
[82625] = {
["event"] = "SPELL_CAST_START",
["source"] = "神圣遗物学会挖掘者",
["npcID"] = 38997,
},
[12675] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗血神谕者",
["npcID"] = 17771,
},
[301075] = {
["event"] = "SPELL_CAST_START",
["source"] = "灼疤者基罗克",
["npcID"] = 144575,
},
[466371] = {
["event"] = "SPELL_CAST_START",
["source"] = "暮光之锤特使",
["npcID"] = 232463,
},
[430037] = {
["event"] = "SPELL_CAST_START",
["source"] = "蜃鱼人矛渔夫",
["npcID"] = 214338,
},
[31707] = {
["event"] = "SPELL_CAST_START",
["source"] = "水元素",
["npcID"] = 208441,
},
[456649] = {
["source"] = "亡缚躯壳",
["event"] = "SPELL_CAST_START",
["npcID"] = 220272,
},
[432597] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊利亚·泽宁",
["npcID"] = 228663,
},
[396775] = {
["event"] = "SPELL_CAST_START",
["source"] = "暮光保镖",
["npcID"] = 232443,
},
[450509] = {
["source"] = "蛛魔队长",
["event"] = "SPELL_CAST_START",
["npcID"] = 216584,
},
[447439] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "戴尔克莱上尉",
["encounterID"] = 2847,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207946,
},
[125997] = {
["event"] = "SPELL_CAST_START",
["source"] = "疲惫的伞兵",
["npcID"] = 63764,
},
[459210] = {
["source"] = "虚缚抢劫者",
["event"] = "SPELL_CAST_START",
["npcID"] = 212765,
},
[272422] = {
["source"] = "艾什凡观察员",
["event"] = "SPELL_CAST_START",
["npcID"] = 138255,
},
[343556] = {
["encounterName"] = "外科医生缝肉",
["source"] = "外科医生缝肉",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[182333] = {
["source"] = "积怨唤雷者",
["event"] = "SPELL_CAST_START",
["npcID"] = 88087,
},
[427484] = {
["source"] = "狂热的咒术师",
["event"] = "SPELL_CAST_START",
["npcID"] = 206698,
},
[450513] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "拉克佐",
["npcID"] = 644,
},
[424414] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "戴尔克莱上尉",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[464331] = {
["encounterName"] = "黑铁七贤",
["source"] = "杜姆雷尔",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226310,
},
[451026] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[463820] = {
["source"] = "原型电荷金刚",
["event"] = "SPELL_CAST_START",
["npcID"] = 232552,
},
[437721] = {
["source"] = "风险投资公司纵火狂",
["event"] = "SPELL_CAST_START",
["npcID"] = 218671,
},
[450515] = {
["event"] = "SPELL_CAST_START",
["source"] = "拉克佐",
["npcID"] = 644,
},
[436698] = {
["event"] = "SPELL_CAST_START",
["source"] = "甲虫队长沃拉坎",
["npcID"] = 218306,
},
[463821] = {
["encounterName"] = "傀儡统帅阿格曼奇",
["source"] = "傀儡统帅阿格曼奇",
["encounterID"] = 3046,
["event"] = "SPELL_CAST_START",
["npcID"] = 226306,
},
[464333] = {
["encounterName"] = "黑铁七贤",
["source"] = "杜姆雷尔",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226310,
},
[464334] = {
["encounterName"] = "黑铁七贤",
["source"] = "杜姆雷尔",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226310,
},
[468940] = {
["source"] = "法拉克斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 232593,
},
[463823] = {
["encounterName"] = "傀儡统帅阿格曼奇",
["source"] = "熔岩金刚Mk. II",
["encounterID"] = 3046,
["event"] = "SPELL_CAST_START",
["npcID"] = 230216,
},
[456147] = {
["event"] = "SPELL_CAST_START",
["source"] = "条尾茶隼",
["npcID"] = 220300,
},
[444377] = {
["event"] = "SPELL_CAST_START",
["source"] = "晦崖灰熊",
["npcID"] = 227954,
},
[11428] = {
["source"] = "扭木树人",
["event"] = "SPELL_CAST_START",
["npcID"] = 11462,
},
[68939] = {
["encounterName"] = "噬魂者",
["source"] = "噬魂者",
["encounterID"] = 2007,
["event"] = "SPELL_CAST_START",
["npcID"] = 36502,
},
[468942] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "法拉克斯",
["npcID"] = 232593,
},
[15586] = {
["event"] = "SPELL_CAST_START",
["source"] = "复生的牧师",
["npcID"] = 10423,
},
[467919] = {
["source"] = "原型熔岩金刚",
["event"] = "SPELL_CAST_START",
["npcID"] = 232551,
},
[15618] = {
["event"] = "SPELL_CAST_START",
["source"] = "斯坦索姆信使",
["npcID"] = 11082,
},
[462802] = {
["source"] = "被腐蚀的机械师",
["event"] = "SPELL_CAST_START",
["npcID"] = 229695,
},
[424421] = {
["source"] = "泰纳·杜尔玛",
["event"] = "SPELL_CAST_START",
["npcID"] = 211289,
},
[464338] = {
["encounterName"] = "黑铁七贤",
["source"] = "西斯雷尔",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226312,
},
[424423] = {
["source"] = "歇尼麦尔中士",
["event"] = "SPELL_CAST_START",
["npcID"] = 211291,
},
[440288] = {
["event"] = "SPELL_CAST_START",
["source"] = "野蛮的巨型血犬",
["npcID"] = 233328,
},
[463829] = {
["source"] = "原型剧毒金刚",
["event"] = "SPELL_CAST_START",
["npcID"] = 232553,
},
[464341] = {
["encounterName"] = "黑铁七贤",
["source"] = "西斯雷尔",
["npcID"] = 226312,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3048,
},
[446430] = {
["source"] = "被惊扰的海藻",
["event"] = "SPELL_CAST_START",
["npcID"] = 215702,
},
[445407] = {
["event"] = "SPELL_CAST_START",
["source"] = "游荡的开膛者",
["npcID"] = 214551,
},
[447966] = {
["encounterName"] = "达加·燃影者",
["source"] = "达加·燃影者",
["encounterID"] = 1048,
["event"] = "SPELL_CAST_START",
["npcID"] = 40319,
},
[447456] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[464344] = {
["encounterName"] = "黑铁七贤",
["source"] = "瓦勒雷尔",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226308,
},
[438245] = {
["encounterName"] = "节点女亲王凯威扎",
["source"] = "节点女亲王凯威扎",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[467415] = {
["encounterName"] = "怒炉将军",
["source"] = "怒炉将军",
["encounterID"] = 3045,
["event"] = "SPELL_CAST_START",
["npcID"] = 226316,
},
[441316] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "狂乱的跃行魔",
["npcID"] = 222214,
},
[385024] = {
["event"] = "SPELL_CAST_START",
["source"] = "陷惧末日追猎者",
["npcID"] = 231124,
},
[33975] = {
["source"] = "档案管理员加尔福特",
["event"] = "SPELL_CAST_START",
["npcID"] = 10811,
},
[436200] = {
["encounterName"] = "噬灭者乌格拉克斯",
["source"] = "噬灭者乌格拉克斯",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[338456] = {
["event"] = "SPELL_CAST_START",
["source"] = "格里恩缝合憎恶",
["npcID"] = 172981,
},
[464347] = {
["encounterName"] = "黑铁七贤",
["source"] = "安格雷尔",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226307,
},
[464348] = {
["encounterName"] = "黑铁七贤",
["source"] = "安格雷尔",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226307,
},
[463837] = {
["encounterName"] = "傀儡统帅阿格曼奇",
["source"] = "剧毒金刚Mk. II",
["encounterID"] = 3046,
["event"] = "SPELL_CAST_START",
["npcID"] = 230217,
},
[464349] = {
["encounterName"] = "黑铁七贤",
["source"] = "安格雷尔",
["encounterID"] = 3048,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226307,
},
[448485] = {
["source"] = "守卫队长苏雷曼",
["event"] = "SPELL_CAST_START",
["npcID"] = 212826,
},
[10277] = {
["source"] = "碎鳍滩行鱼人",
["event"] = "SPELL_CAST_START",
["npcID"] = 2375,
},
[41396] = {
["event"] = "SPELL_CAST_START",
["source"] = "热忱的招待",
["npcID"] = 22959,
},
[436205] = {
["source"] = "不稳定的测试对象",
["event"] = "SPELL_CAST_START",
["npcID"] = 216328,
},
[22945] = {
["source"] = "奥术洪流",
["event"] = "SPELL_CAST_START",
["npcID"] = 14399,
},
[418295] = {
["event"] = "SPELL_CAST_START",
["source"] = "宝藏怨灵",
["npcID"] = 208728,
},
[16868] = {
["event"] = "SPELL_CAST_START",
["source"] = "安娜丝塔丽男爵夫人",
["npcID"] = 10436,
},
[423413] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊利亚·泽宁",
["npcID"] = 228663,
},
[432113] = {
["event"] = "SPELL_CAST_START",
["source"] = "主宰",
["npcID"] = 228575,
},
[453607] = {
["event"] = "SPELL_CAST_START",
["source"] = "修拉伊",
["npcID"] = 221224,
},
[284218] = {
["event"] = "SPELL_CAST_START",
["source"] = "雄鹿克星巴扎",
["npcID"] = 144565,
},
[432114] = {
["event"] = "SPELL_CAST_START",
["source"] = "死板的熔炉法师",
["npcID"] = 212884,
},
[425974] = {
["source"] = "大地注能的魔像",
["event"] = "SPELL_CAST_START",
["npcID"] = 210109,
},
[142174] = {
["event"] = "SPELL_CAST_START",
["source"] = "小型幻影守卫",
["npcID"] = 71079,
},
[448492] = {
["source"] = "守卫队长苏雷曼",
["event"] = "SPELL_CAST_START",
["npcID"] = 212826,
},
[445422] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[176718] = {
["event"] = "SPELL_CAST_START",
["source"] = "废土追踪者",
["npcID"] = 154461,
},
[443888] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[257063] = {
["source"] = "铁潮塑浪者",
["event"] = "SPELL_CAST_START",
["npcID"] = 129370,
},
[427001] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "阿努布伊卡基",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[464359] = {
["encounterName"] = "黑铁七贤",
["source"] = "格鲁雷尔",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226313,
},
[450542] = {
["event"] = "SPELL_CAST_START",
["source"] = "基尔尼格",
["npcID"] = 1763,
},
[32093] = {
["source"] = "日光眼镜蛇",
["event"] = "SPELL_CAST_START",
["npcID"] = 40657,
},
[15043] = {
["event"] = "SPELL_CAST_START",
["source"] = "复生的魔术师",
["npcID"] = 10419,
},
[432120] = {
["event"] = "SPELL_CAST_START",
["source"] = "主宰",
["npcID"] = 228575,
},
[464361] = {
["encounterName"] = "黑铁七贤",
["source"] = "格鲁雷尔",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226313,
},
[462826] = {
["source"] = "爆破炸弹机器人",
["event"] = "SPELL_CAST_START",
["npcID"] = 229706,
},
[456174] = {
["encounterName"] = "流丝之庭",
["source"] = "阿努巴拉什",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[52592] = {
["encounterName"] = "看门者克里克希尔",
["source"] = "看门者克里克希尔",
["encounterID"] = 1971,
["event"] = "SPELL_CAST_START",
["npcID"] = 28684,
},
[453616] = {
["source"] = "末日守卫",
["event"] = "SPELL_CAST_START",
["npcID"] = 225493,
},
[464363] = {
["encounterName"] = "黑铁七贤",
["source"] = "黑特雷尔",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226311,
},
[450546] = {
["source"] = "蛛魔队长",
["event"] = "SPELL_CAST_START",
["npcID"] = 216584,
},
[32637] = {
["source"] = "末日行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 167749,
},
[455153] = {
["event"] = "SPELL_CAST_START",
["source"] = "深渊吞噬者",
["npcID"] = 216031,
},
[396302] = {
["source"] = "吉欧瑟姆斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 217416,
},
[34809] = {
["event"] = "SPELL_CAST_START",
["source"] = "血警卫修理工",
["npcID"] = 19633,
},
[432125] = {
["source"] = "吐丝运线者",
["event"] = "SPELL_CAST_START",
["npcID"] = 221939,
},
[41078] = {
["encounterName"] = "伊利丹·怒风",
["source"] = "伊利丹·怒风",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[462319] = {
["encounterName"] = "洛考尔",
["source"] = "洛考尔",
["encounterID"] = 3042,
["event"] = "SPELL_CAST_START",
["npcID"] = 226315,
},
[444408] = {
["encounterName"] = "重塑之怒",
["source"] = "代言人达文鲁兹",
["npcID"] = 218022,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2998,
},
[41334] = {
["event"] = "SPELL_CAST_START",
["source"] = "神殿助祭",
["npcID"] = 22939,
},
[462320] = {
["encounterName"] = "洛考尔",
["source"] = "洛考尔",
["encounterID"] = 3042,
["event"] = "SPELL_CAST_START",
["npcID"] = 226315,
},
[450550] = {
["event"] = "SPELL_CAST_START",
["source"] = "重拳先生",
["npcID"] = 646,
},
[39671] = {
["isChanneled"] = true,
["source"] = "伊利达雷玷污者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22853,
},
[22946] = {
["source"] = "奥术洪流",
["event"] = "SPELL_CAST_START",
["npcID"] = 14399,
},
[15587] = {
["event"] = "SPELL_CAST_START",
["source"] = "复生的新兵",
["npcID"] = 10420,
},
[16869] = {
["event"] = "SPELL_CAST_START",
["source"] = "苍白的玛勒基",
["npcID"] = 10438,
},
[458228] = {
["source"] = "萨克雷特纳",
["event"] = "SPELL_CAST_START",
["npcID"] = 215841,
},
[328756] = {
["encounterName"] = "英格拉·马洛克",
["source"] = "英格拉·马洛克",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164567,
},
[373279] = {
["source"] = "彼岸之物",
["event"] = "SPELL_CAST_START",
["npcID"] = 189988,
},
[157534] = {
["source"] = "积怨毒语者",
["event"] = "SPELL_CAST_START",
["npcID"] = 89025,
},
[444925] = {
["source"] = "飘移的孢堇",
["event"] = "SPELL_CAST_START",
["npcID"] = 214961,
},
[441343] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "狂乱的跃行魔",
["npcID"] = 222214,
},
[464372] = {
["encounterName"] = "弗莱拉斯大使",
["source"] = "弗莱拉斯大使",
["npcID"] = 226302,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3047,
},
[456696] = {
["event"] = "SPELL_CAST_START",
["source"] = "暮光蛮兵",
["npcID"] = 224152,
},
[257326] = {
["encounterName"] = "“屠夫”血钩",
["source"] = "“屠夫”血钩",
["encounterID"] = 2098,
["event"] = "SPELL_CAST_START",
["npcID"] = 128650,
},
[461814] = {
["event"] = "SPELL_CAST_START",
["source"] = "阿丽萨巴尔之女",
["npcID"] = 214142,
},
[9734] = {
["source"] = "血色追随者",
["event"] = "SPELL_CAST_START",
["npcID"] = 4285,
},
[444415] = {
["event"] = "SPELL_CAST_START",
["source"] = "洞窟巨熊",
["npcID"] = 227255,
},
[254256] = {
["source"] = "审判庭仲裁者",
["event"] = "SPELL_CAST_START",
["npcID"] = 109933,
},
[11829] = {
["event"] = "SPELL_CAST_START",
["source"] = "迪菲亚招魂师",
["npcID"] = 1729,
},
[450045] = {
["encounterName"] = "流丝之庭",
["source"] = "纺束者塔卡兹基",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[76369] = {
["source"] = "暮光欺诈者",
["event"] = "SPELL_CAST_START",
["npcID"] = 40167,
},
[432135] = {
["event"] = "SPELL_CAST_START",
["source"] = "入侵的狗头人",
["npcID"] = 216157,
},
[284752] = {
["event"] = "SPELL_CAST_START",
["source"] = "冰淞使者卡兹莱克",
["npcID"] = 150747,
},
[21987] = {
["source"] = "抽笞者",
["event"] = "SPELL_CAST_START",
["npcID"] = 13022,
},
[7068] = {
["event"] = "SPELL_CAST_START",
["source"] = "幽灵市民",
["npcID"] = 10385,
},
[464378] = {
["encounterName"] = "弗莱拉斯大使",
["source"] = "弗莱拉斯大使",
["npcID"] = 226302,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3047,
},
[436637] = {
["encounterName"] = "戈尔迪·底爵",
["source"] = "戈尔迪·底爵",
["encounterID"] = 2930,
["event"] = "SPELL_CAST_START",
["npcID"] = 214661,
},
[434697] = {
["encounterName"] = "噬灭者乌格拉克斯",
["source"] = "噬灭者乌格拉克斯",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[443397] = {
["source"] = "苏雷吉剧毒之刃",
["event"] = "SPELL_CAST_START",
["npcID"] = 220193,
},
[464379] = {
["event"] = "SPELL_CAST_START",
["source"] = "烈焰行者",
["npcID"] = 233203,
},
[448515] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "艾蕾娜·安博兰兹",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211290,
},
[435560] = {
["encounterName"] = "戈尔迪·底爵",
["source"] = "戈尔迪·底爵",
["encounterID"] = 2930,
["event"] = "SPELL_CAST_START",
["npcID"] = 214661,
},
[68950] = {
["encounterName"] = "布隆亚姆",
["source"] = "布隆亚姆",
["encounterID"] = 2006,
["event"] = "SPELL_CAST_START",
["npcID"] = 36497,
},
[323137] = {
["encounterName"] = "英格拉·马洛克",
["source"] = "宗主奥法兰",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164804,
},
[449251] = {
["source"] = "蛛魔御纤士",
["event"] = "SPELL_CAST_START",
["npcID"] = 208244,
},
[450786] = {
["event"] = "SPELL_CAST_START",
["source"] = "燧烬蜂觅食者",
["npcID"] = 222976,
},
[440134] = {
["encounterName"] = "本克·鸣蜂",
["source"] = "本克·鸣蜂",
["encounterID"] = 2931,
["event"] = "SPELL_CAST_START",
["npcID"] = 218002,
},
[323138] = {
["encounterName"] = "英格拉·马洛克",
["source"] = "英格拉·马洛克",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164567,
},
[438025] = {
["encounterName"] = "本克·鸣蜂",
["source"] = "本克·鸣蜂",
["encounterID"] = 2931,
["event"] = "SPELL_CAST_START",
["npcID"] = 218002,
},
[427357] = {
["source"] = "虔诚的牧师",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[441351] = {
["source"] = "驯蜂者",
["event"] = "SPELL_CAST_START",
["npcID"] = 210264,
},
[440687] = {
["source"] = "蜂王浆供应商",
["event"] = "SPELL_CAST_START",
["npcID"] = 220141,
},
[432142] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛛魔伏击者",
["npcID"] = 216247,
},
[113] = {
["event"] = "SPELL_CAST_START",
["source"] = "迪菲亚巫师",
["npcID"] = 4418,
},
[431896] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "口渴的主顾",
["encounterID"] = 2900,
["event"] = "SPELL_CAST_START",
["npcID"] = 215819,
},
[451939] = {
["source"] = "暮光毁灭者",
["event"] = "SPELL_CAST_START",
["npcID"] = 224609,
},
[317511] = {
["event"] = "SPELL_CAST_START",
["source"] = "砂石潜地者",
["npcID"] = 158477,
},
[449031] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛛魔斩颚者",
["npcID"] = 218654,
},
[5213] = {
["event"] = "SPELL_CAST_START",
["source"] = "基尔尼格",
["npcID"] = 1763,
},
[450784] = {
["source"] = "谢非提克",
["event"] = "SPELL_CAST_START",
["npcID"] = 219984,
},
[430097] = {
["encounterName"] = "机械大师",
["source"] = "代言人布洛克",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213217,
},
[434706] = {
["source"] = "品酒间侍从",
["event"] = "SPELL_CAST_START",
["npcID"] = 214920,
},
[470014] = {
["source"] = "原型奥能金刚",
["event"] = "SPELL_CAST_START",
["npcID"] = 232550,
},
[83920] = {
["source"] = "蓝鬃倭黑猩猩",
["event"] = "SPELL_CAST_START",
["npcID"] = 43417,
},
[465204] = {
["source"] = "提克迪奥斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 231059,
},
[48016] = {
["encounterName"] = "塑树者奥莫洛克",
["source"] = "塑树者奥莫洛克",
["encounterID"] = 2012,
["event"] = "SPELL_CAST_START",
["npcID"] = 26794,
},
[377900] = {
["event"] = "SPELL_CAST_START",
["source"] = "天灾石像鬼",
["npcID"] = 227179,
},
[142189] = {
["event"] = "SPELL_CAST_START",
["source"] = "小型幻影织珀者",
["npcID"] = 71077,
},
[434407] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[449034] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛛魔斩颚者",
["npcID"] = 218654,
},
[236355] = {
["source"] = "克索诺斯祭师",
["event"] = "SPELL_CAST_START",
["npcID"] = 119733,
},
[439524] = {
["encounterName"] = "本克·鸣蜂",
["source"] = "本克·鸣蜂",
["encounterID"] = 2931,
["event"] = "SPELL_CAST_START",
["npcID"] = 218002,
},
[456711] = {
["source"] = "暮光熔岩操纵使",
["event"] = "SPELL_CAST_START",
["npcID"] = 224249,
},
[453129] = {
["event"] = "SPELL_CAST_START",
["source"] = "腐蚀轰炸者",
["npcID"] = 224970,
},
[54962] = {
["source"] = "掠龙战略家",
["event"] = "SPELL_CAST_START",
["npcID"] = 23956,
},
[69080] = {
["source"] = "护魂骨法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 36564,
},
[446477] = {
["event"] = "SPELL_CAST_START",
["source"] = "踏蟾者",
["npcID"] = 207803,
},
[438801] = {
["encounterName"] = "流丝之庭",
["source"] = "阿努巴拉什",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[166242] = {
["event"] = "SPELL_CAST_START",
["source"] = "阿拉萨斯",
["npcID"] = 119840,
},
[448013] = {
["encounterName"] = "达加·燃影者",
["source"] = "达加·燃影者",
["encounterID"] = 1048,
["event"] = "SPELL_CAST_START",
["npcID"] = 40319,
},
[456713] = {
["source"] = "暮光熔岩操纵使",
["event"] = "SPELL_CAST_START",
["npcID"] = 224249,
},
[324923] = {
["source"] = "德鲁斯特碎枝者",
["event"] = "SPELL_CAST_START",
["npcID"] = 164926,
},
[441214] = {
["source"] = "美味测试员",
["event"] = "SPELL_CAST_START",
["npcID"] = 220060,
},
[415262] = {
["encounterName"] = "无头骑士",
["source"] = "无头骑士",
["npcID"] = 207438,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2725,
},
[21668] = {
["source"] = "树林德鲁伊",
["event"] = "SPELL_CAST_START",
["npcID"] = 13443,
},
[449038] = {
["encounterName"] = "监督者卡斯凯尔",
["source"] = "监督者卡斯凯尔",
["encounterID"] = 2990,
["event"] = "SPELL_CAST_START",
["npcID"] = 220437,
},
[419211] = {
["event"] = "SPELL_CAST_START",
["source"] = "天灾憎恶",
["npcID"] = 227177,
},
[431639] = {
["source"] = "花哨的摧网者",
["event"] = "SPELL_CAST_START",
["npcID"] = 224567,
},
[462856] = {
["source"] = "空值机器人",
["event"] = "SPELL_CAST_START",
["npcID"] = 229729,
},
[32063] = {
["event"] = "SPELL_CAST_START",
["source"] = "暮光监督者",
["npcID"] = 40123,
},
[449246] = {
["event"] = "SPELL_CAST_START",
["source"] = "爱默里奇将军",
["npcID"] = 215371,
},
[323149] = {
["encounterName"] = "英格拉·马洛克",
["source"] = "英格拉·马洛克",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164567,
},
[442387] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛛魔伏击者",
["npcID"] = 216247,
},
[444946] = {
["source"] = "雷巅岩蜥",
["event"] = "SPELL_CAST_START",
["npcID"] = 214581,
},
[446862] = {
["event"] = "SPELL_CAST_START",
["source"] = "寄生蠕虫",
["npcID"] = 222786,
},
[327127] = {
["event"] = "SPELL_CAST_START",
["source"] = "血肉工匠",
["npcID"] = 165872,
},
[321891] = {
["encounterName"] = "唤雾者",
["source"] = "幻影仙狐",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 165251,
},
[467464] = {
["encounterName"] = "怒炉将军",
["source"] = "暗炉持火者",
["encounterID"] = 3045,
["event"] = "SPELL_CAST_START",
["npcID"] = 231554,
},
[451600] = {
["encounterName"] = "安苏雷克女王",
["source"] = "内室驱逐者",
["npcID"] = 224368,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[378420] = {
["source"] = "原始石眷",
["event"] = "SPELL_CAST_START",
["npcID"] = 194291,
},
[462859] = {
["source"] = "热诚的神射手",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[458077] = {
["event"] = "SPELL_CAST_START",
["source"] = "寄生蠕虫",
["npcID"] = 222786,
},
[324914] = {
["source"] = "纱雾照看者",
["event"] = "SPELL_CAST_START",
["npcID"] = 166299,
},
[135029] = {
["event"] = "SPELL_CAST_START",
["source"] = "水元素",
["npcID"] = 208441,
},
[69058] = {
["source"] = "护魂收割者",
["event"] = "SPELL_CAST_START",
["npcID"] = 36499,
},
[321968] = {
["source"] = "仙木灵居民",
["event"] = "SPELL_CAST_START",
["npcID"] = 164929,
},
[15284] = {
["source"] = "指挥官达尔多什",
["event"] = "SPELL_CAST_START",
["npcID"] = 13140,
},
[450519] = {
["source"] = "泽克维尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 217208,
},
[53044] = {
["source"] = "掠龙灵魂师",
["event"] = "SPELL_CAST_START",
["npcID"] = 28410,
},
[463206] = {
["source"] = "主厨丘伊",
["event"] = "SPELL_CAST_START",
["npcID"] = 214697,
},
[434505] = {
["source"] = "风险投资公司主顾",
["event"] = "SPELL_CAST_START",
["npcID"] = 214668,
},
[431645] = {
["source"] = "网语者格里吉克",
["event"] = "SPELL_CAST_START",
["npcID"] = 216041,
},
[141427] = {
["source"] = "怨叶吐疫者",
["event"] = "SPELL_CAST_START",
["npcID"] = 84655,
},
[463256] = {
["source"] = "纱雾防御者",
["event"] = "SPELL_CAST_START",
["npcID"] = 171772,
},
[320596] = {
["encounterName"] = "凋骨",
["source"] = "凋骨",
["npcID"] = 162691,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[462351] = {
["encounterName"] = "洛考尔",
["source"] = "洛考尔",
["encounterID"] = 3042,
["event"] = "SPELL_CAST_START",
["npcID"] = 226315,
},
[419876] = {
["source"] = "热心之影",
["event"] = "SPELL_CAST_START",
["npcID"] = 211008,
},
[453140] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[275563] = {
["event"] = "SPELL_CAST_START",
["source"] = "饥影牛蛙",
["npcID"] = 214406,
},
[456211] = {
["event"] = "SPELL_CAST_START",
["source"] = "斯玛拉格尔",
["npcID"] = 220362,
},
[435138] = {
["encounterName"] = "噬灭者乌格拉克斯",
["source"] = "噬灭者乌格拉克斯",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[20805] = {
["source"] = "泥嘴萨满祭司",
["event"] = "SPELL_CAST_START",
["npcID"] = 2373,
},
[275564] = {
["event"] = "SPELL_CAST_START",
["source"] = "饥影牛蛙",
["npcID"] = 214406,
},
[466447] = {
["encounterName"] = "达格兰·索瑞森大帝",
["source"] = "达格兰·索瑞森大帝",
["npcID"] = 226305,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[59359] = {
["encounterName"] = "阿努巴拉克",
["source"] = "阿努巴尔制毒师",
["encounterID"] = 1973,
["event"] = "SPELL_CAST_START",
["npcID"] = 29217,
},
[453142] = {
["source"] = "掠网者",
["event"] = "SPELL_CAST_START",
["npcID"] = 219034,
},
[398385] = {
["event"] = "SPELL_CAST_START",
["source"] = "暴怒的炽焰猎犬",
["npcID"] = 207429,
},
[325205] = {
["source"] = "锐眼弓手",
["event"] = "SPELL_CAST_START",
["npcID"] = 166936,
},
[46608] = {
["source"] = "巴琳达·斯通赫尔斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 11949,
},
[432673] = {
["source"] = "狗头人掠夺者",
["event"] = "SPELL_CAST_START",
["npcID"] = 216303,
},
[451608] = {
["event"] = "SPELL_CAST_START",
["source"] = "蜃鱼人塑影者",
["npcID"] = 215653,
},
[439838] = {
["encounterName"] = "流丝之庭",
["source"] = "纺束者塔卡兹基",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[419880] = {
["source"] = "热心之影",
["event"] = "SPELL_CAST_START",
["npcID"] = 211009,
},
[458582] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉暗刃",
["npcID"] = 222274,
},
[322614] = {
["encounterName"] = "特雷德奥瓦",
["source"] = "特雷德奥瓦",
["encounterID"] = 2393,
["event"] = "SPELL_CAST_START",
["npcID"] = 164517,
},
[179538] = {
["source"] = "积怨毒语者",
["event"] = "SPELL_CAST_START",
["npcID"] = 89025,
},
[340544] = {
["isChanneled"] = true,
["source"] = "锥喉鹿角巨虫",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167111,
},
[434722] = {
["encounterName"] = "演说者基克斯威兹克",
["source"] = "演说者基克斯威兹克",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[64156] = {
["encounterName"] = "尤格-萨隆",
["source"] = "腐蚀触须",
["npcID"] = 33985,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[67037] = {
["event"] = "SPELL_CAST_START",
["source"] = "托塞德林王子",
["npcID"] = 11486,
},
[469711] = {
["encounterName"] = "黑铁七贤",
["source"] = "瓦勒雷尔",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226308,
},
[22373] = {
["source"] = "扭木守护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 11461,
},
[443430] = {
["source"] = "苏雷吉缚丝者",
["event"] = "SPELL_CAST_START",
["npcID"] = 220195,
},
[42723] = {
["encounterName"] = "掠夺者因格瓦尔",
["source"] = "掠夺者因格瓦尔",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[7948] = {
["source"] = "荒野变形者奥兹恩",
["event"] = "SPELL_CAST_START",
["npcID"] = 11492,
},
[436203] = {
["encounterName"] = "噬灭者乌格拉克斯",
["source"] = "噬灭者乌格拉克斯",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[451612] = {
["source"] = "暮光毁灭者",
["event"] = "SPELL_CAST_START",
["npcID"] = 224609,
},
[450077] = {
["encounterName"] = "埃鲁达克",
["source"] = "埃鲁达克",
["encounterID"] = 1049,
["event"] = "SPELL_CAST_START",
["npcID"] = 40484,
},
[438012] = {
["encounterName"] = "噬灭者乌格拉克斯",
["source"] = "噬灭者乌格拉克斯",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[68895] = {
["source"] = "怨恨的魂影",
["event"] = "SPELL_CAST_START",
["npcID"] = 36551,
},
[451510] = {
["encounterName"] = "流丝之庭",
["source"] = "纺束者塔卡兹基",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[445984] = {
["source"] = "贪食的利颚爬行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 223931,
},
[444449] = {
["source"] = "热诚的神射手",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[451102] = {
["event"] = "SPELL_CAST_START",
["source"] = "扬升者维斯可里亚",
["npcID"] = 211261,
},
[449567] = {
["event"] = "SPELL_CAST_START",
["source"] = "盛宴暴食者",
["npcID"] = 217747,
},
[465615] = {
["source"] = "蕨皮黑羽",
["event"] = "SPELL_CAST_START",
["npcID"] = 230680,
},
[323057] = {
["encounterName"] = "英格拉·马洛克",
["source"] = "英格拉·马洛克",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164567,
},
[52086] = {
["encounterName"] = "看门者克里克希尔",
["source"] = "看守者希尔希克",
["encounterID"] = 1971,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28731,
},
[377923] = {
["event"] = "SPELL_CAST_START",
["source"] = "过热炉渣",
["npcID"] = 227382,
},
[452127] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "阿努布伊卡基",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[50653] = {
["isChanneled"] = true,
["source"] = "被奴役的始祖幼龙",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24083,
},
[345495] = {
["source"] = "起泡脓包",
["event"] = "SPELL_CAST_START",
["npcID"] = 175519,
},
[398394] = {
["source"] = "三叶虫幼体",
["event"] = "SPELL_CAST_START",
["npcID"] = 225388,
},
[440768] = {
["source"] = "黑血容器",
["event"] = "SPELL_CAST_START",
["npcID"] = 220002,
},
[8600] = {
["source"] = "耐克鲁姆",
["event"] = "SPELL_CAST_START",
["npcID"] = 7796,
},
[438823] = {
["event"] = "SPELL_CAST_START",
["source"] = "敬魔小鬼",
["npcID"] = 219161,
},
[429545] = {
["source"] = "被转化的代言人",
["event"] = "SPELL_CAST_START",
["npcID"] = 214350,
},
[431659] = {
["event"] = "SPELL_CAST_START",
["source"] = "恐网祭师",
["npcID"] = 221300,
},
[243784] = {
["source"] = "艾索雷苟斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 121820,
},
[64157] = {
["encounterName"] = "尤格-萨隆",
["source"] = "腐蚀触须",
["npcID"] = 33985,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[54965] = {
["encounterName"] = "凯雷塞斯王子",
["source"] = "掠龙符文法师",
["encounterID"] = 2026,
["event"] = "SPELL_CAST_START",
["npcID"] = 23960,
},
[458271] = {
["event"] = "SPELL_CAST_START",
["source"] = "莫斯艾兹克",
["npcID"] = 206203,
},
[69562] = {
["source"] = "护魂复生者",
["event"] = "SPELL_CAST_START",
["npcID"] = 36516,
},
[451107] = {
["source"] = "苏雷吉网法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 210966,
},
[441384] = {
["encounterName"] = "女王之牙",
["source"] = "维克斯",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[456654] = {
["source"] = "亡缚躯壳",
["event"] = "SPELL_CAST_START",
["npcID"] = 220272,
},
[13323] = {
["event"] = "SPELL_CAST_START",
["source"] = "复生的法术师",
["npcID"] = 10422,
},
[295283] = {
["event"] = "SPELL_CAST_START",
["source"] = "埃兰迪雅·奥箭",
["npcID"] = 154034,
},
[207451] = {
["source"] = "播邪小鬼",
["event"] = "SPELL_CAST_START",
["npcID"] = 104754,
},
[22661] = {
["source"] = "荒野变形者奥兹恩",
["event"] = "SPELL_CAST_START",
["npcID"] = 11492,
},
[41276] = {
["event"] = "SPELL_CAST_START",
["source"] = "噬骨巨兽",
["npcID"] = 23196,
},
[55077] = {
["source"] = "野蛮的座狼",
["event"] = "SPELL_CAST_START",
["npcID"] = 29735,
},
[443433] = {
["source"] = "安苏雷克的传令官",
["event"] = "SPELL_CAST_START",
["npcID"] = 220196,
},
[284279] = {
["event"] = "SPELL_CAST_START",
["source"] = "雄鹿克星巴扎",
["npcID"] = 144565,
},
[60211] = {
["source"] = "掠龙铸造大师",
["event"] = "SPELL_CAST_START",
["npcID"] = 24079,
},
[436781] = {
["isChanneled"] = true,
["source"] = "甲虫队长沃拉坎",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218306,
},
[320614] = {
["encounterName"] = "凋骨",
["source"] = "食腐蛆虫",
["npcID"] = 164702,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[441747] = {
["source"] = "织网助祭",
["event"] = "SPELL_CAST_START",
["npcID"] = 218320,
},
[6253] = {
["source"] = "勇猛的冰冷矿洞守卫",
["event"] = "SPELL_CAST_START",
["npcID"] = 13536,
},
[440876] = {
["source"] = "蜂王浆供应商",
["event"] = "SPELL_CAST_START",
["npcID"] = 220141,
},
[439341] = {
["encounterName"] = "大捻接师艾佐",
["source"] = "大捻接师艾佐",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[450088] = {
["encounterName"] = "埃鲁达克",
["source"] = "埃鲁达克",
["encounterID"] = 1049,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40484,
},
[276068] = {
["encounterName"] = "哈达尔·黑渊",
["source"] = "哈达尔·黑渊",
["encounterID"] = 2099,
["event"] = "SPELL_CAST_START",
["npcID"] = 128651,
},
[90325] = {
["source"] = "积怨蛮兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 109154,
},
[443436] = {
["source"] = "安苏雷克的传令官",
["event"] = "SPELL_CAST_START",
["npcID"] = 220196,
},
[290423] = {
["event"] = "SPELL_CAST_START",
["source"] = "吉鲁玛·血裘",
["npcID"] = 144537,
},
[52535] = {
["encounterName"] = "看门者克里克希尔",
["source"] = "阿努巴尔暗影法师",
["encounterID"] = 1971,
["event"] = "SPELL_CAST_START",
["npcID"] = 28733,
},
[451113] = {
["source"] = "苏雷吉网法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 210966,
},
[378850] = {
["source"] = "呓语魔典",
["event"] = "SPELL_CAST_START",
["npcID"] = 223852,
},
[325223] = {
["source"] = "纱雾钉刺蛾",
["event"] = "SPELL_CAST_START",
["npcID"] = 166304,
},
[432179] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "酿造大师阿德里尔",
["encounterID"] = 2900,
["event"] = "SPELL_CAST_START",
["npcID"] = 210271,
},
[451114] = {
["source"] = "活化黑暗",
["event"] = "SPELL_CAST_START",
["npcID"] = 213905,
},
[429109] = {
["source"] = "炉铸愈疗者",
["event"] = "SPELL_CAST_START",
["npcID"] = 213338,
},
[323177] = {
["encounterName"] = "英格拉·马洛克",
["source"] = "宗主奥法兰",
["encounterID"] = 2397,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164804,
},
[428086] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[63891] = {
["encounterName"] = "尤格-萨隆",
["source"] = "萨拉",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[429110] = {
["source"] = "炉铸愈疗者",
["event"] = "SPELL_CAST_START",
["npcID"] = 213338,
},
[439857] = {
["source"] = "皇家低语者",
["event"] = "SPELL_CAST_START",
["npcID"] = 219723,
},
[456745] = {
["source"] = "猩红织亡者",
["event"] = "SPELL_CAST_START",
["npcID"] = 222692,
},
[434740] = {
["source"] = "夜幕审判官",
["event"] = "SPELL_CAST_START",
["npcID"] = 217518,
},
[419229] = {
["source"] = "暮光使者",
["event"] = "SPELL_CAST_START",
["npcID"] = 232440,
},
[64966] = {
["source"] = "发条机械师",
["event"] = "SPELL_CAST_START",
["npcID"] = 34184,
},
[41277] = {
["event"] = "SPELL_CAST_START",
["source"] = "噬骨巨兽",
["npcID"] = 23196,
},
[451117] = {
["event"] = "SPELL_CAST_START",
["source"] = "坚不可摧的伊克斯雷腾",
["npcID"] = 211262,
},
[283775] = {
["event"] = "SPELL_CAST_START",
["source"] = "“风拳”琳扎卡",
["npcID"] = 150745,
},
[283772] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "“风拳”琳扎卡",
["npcID"] = 150745,
},
[442418] = {
["event"] = "SPELL_CAST_START",
["source"] = "皇家记者伊斯特伊克斯",
["npcID"] = 226234,
},
[456910] = {
["event"] = "SPELL_CAST_START",
["source"] = "被惊扰的吞壤者",
["npcID"] = 218393,
},
[441395] = {
["encounterName"] = "凝结聚合体",
["source"] = "凝结聚合体",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[450095] = {
["encounterName"] = "达加·燃影者",
["source"] = "达加·燃影者",
["encounterID"] = 1048,
["event"] = "SPELL_CAST_START",
["npcID"] = 40319,
},
[448560] = {
["encounterName"] = "演说者基克斯威兹克",
["source"] = "演说者基克斯威兹克",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[449072] = {
["encounterName"] = "监督者卡斯凯尔",
["source"] = "监督者卡斯凯尔",
["encounterID"] = 2990,
["event"] = "SPELL_CAST_START",
["npcID"] = 220437,
},
[449584] = {
["event"] = "SPELL_CAST_START",
["source"] = "盛宴暴食者",
["npcID"] = 217747,
},
[233048] = {
["source"] = "魔刃毁灭者",
["event"] = "SPELL_CAST_START",
["npcID"] = 118776,
},
[469031] = {
["event"] = "SPELL_CAST_START",
["source"] = "审讯官格斯塔恩",
["npcID"] = 232243,
},
[40062] = {
["encounterName"] = "制造者",
["source"] = "影月技师",
["npcID"] = 17414,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1922,
},
[63775] = {
["source"] = "暮光炎术师",
["event"] = "SPELL_CAST_START",
["npcID"] = 33820,
},
[431674] = {
["source"] = "吐丝运线者",
["event"] = "SPELL_CAST_START",
["npcID"] = 221939,
},
[197735] = {
["source"] = "卑鄙的强盗",
["event"] = "SPELL_CAST_START",
["npcID"] = 121022,
},
[369241] = {
["event"] = "SPELL_CAST_START",
["source"] = "野蛮的巨型血犬",
["npcID"] = 233328,
},
[445492] = {
["event"] = "SPELL_CAST_START",
["source"] = "游荡的开膛者",
["npcID"] = 214551,
},
[321807] = {
["event"] = "SPELL_CAST_START",
["source"] = "佐尔拉姆斯刻骨者",
["npcID"] = 163619,
},
[462892] = {
["source"] = "失控的晶塔",
["event"] = "SPELL_CAST_START",
["npcID"] = 229739,
},
[63760] = {
["source"] = "暮光追随者",
["event"] = "SPELL_CAST_START",
["npcID"] = 33818,
},
[52469] = {
["encounterName"] = "看门者克里克希尔",
["source"] = "看守者希尔希克",
["encounterID"] = 1971,
["event"] = "SPELL_CAST_START",
["npcID"] = 28731,
},
[284223] = {
["event"] = "SPELL_CAST_START",
["source"] = "雄鹿克星巴扎",
["npcID"] = 144565,
},
[440376] = {
["event"] = "SPELL_CAST_START",
["source"] = "影盲巢母",
["npcID"] = 206078,
},
[57054] = {
["isChanneled"] = true,
["source"] = "晶化看护者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28231,
},
[461870] = {
["event"] = "SPELL_CAST_START",
["source"] = "萨拉塔斯",
["npcID"] = 229227,
},
[427583] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "艾蕾娜·安博兰兹",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211290,
},
[440377] = {
["encounterName"] = "节点女亲王凯威扎",
["source"] = "节点女亲王凯威扎",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[34945] = {
["source"] = "碧蓝缚鳞者",
["event"] = "SPELL_CAST_START",
["npcID"] = 26735,
},
[6685] = {
["event"] = "SPELL_CAST_START",
["source"] = "迪菲亚工头",
["npcID"] = 4417,
},
[22662] = {
["source"] = "荒野变形者奥兹恩",
["event"] = "SPELL_CAST_START",
["npcID"] = 11492,
},
[446519] = {
["source"] = "锈鬃岩角麋",
["event"] = "SPELL_CAST_START",
["npcID"] = 214764,
},
[457266] = {
["event"] = "SPELL_CAST_START",
["source"] = "新手临时演员",
["npcID"] = 228307,
},
[295324] = {
["event"] = "SPELL_CAST_START",
["source"] = "埃兰迪雅·奥箭",
["npcID"] = 154034,
},
[270481] = {
["source"] = "恶魔暴君",
["event"] = "SPELL_CAST_START",
["npcID"] = 135002,
},
[182384] = {
["source"] = "积怨毒语者",
["event"] = "SPELL_CAST_START",
["npcID"] = 89025,
},
[444985] = {
["source"] = "化蛹钉刺者",
["event"] = "SPELL_CAST_START",
["npcID"] = 216288,
},
[425027] = {
["source"] = "大地注能的魔像",
["event"] = "SPELL_CAST_START",
["npcID"] = 210109,
},
[345623] = {
["event"] = "SPELL_CAST_START",
["source"] = "纳祖达",
["npcID"] = 165824,
},
[469038] = {
["event"] = "SPELL_CAST_START",
["source"] = "恫吓具象",
["npcID"] = 232894,
},
[320637] = {
["encounterName"] = "凋骨",
["source"] = "凋骨",
["npcID"] = 162691,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[269456] = {
["encounterName"] = "维克戈斯",
["source"] = "维克戈斯",
["encounterID"] = 2100,
["event"] = "SPELL_CAST_START",
["npcID"] = 128652,
},
[290438] = {
["event"] = "SPELL_CAST_START",
["source"] = "地语者奥丘穆",
["npcID"] = 154032,
},
[442428] = {
["encounterName"] = "苏雷吉队长席克兰",
["source"] = "席克兰",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[449455] = {
["source"] = "阴森的虚空之魂",
["event"] = "SPELL_CAST_START",
["npcID"] = 212453,
},
[449568] = {
["encounterName"] = "蛛网将军阿贝纳尔",
["source"] = "蛛网将军阿贝纳尔",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[451277] = {
["encounterName"] = "流丝之庭",
["source"] = "阿努巴拉什",
["npcID"] = 217489,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2921,
},
[272528] = {
["source"] = "艾什凡狙击手",
["event"] = "SPELL_CAST_START",
["npcID"] = 128967,
},
[467505] = {
["encounterName"] = "怒炉将军",
["source"] = "铁怒炮手",
["encounterID"] = 3045,
["event"] = "SPELL_CAST_START",
["npcID"] = 231565,
},
[441412] = {
["isChanneled"] = true,
["source"] = "亡瓣之花",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206184,
},
[455380] = {
["event"] = "SPELL_CAST_START",
["source"] = "失控的轨机",
["npcID"] = 218251,
},
[439873] = {
["source"] = "皇家低语者",
["event"] = "SPELL_CAST_START",
["npcID"] = 219723,
},
[290435] = {
["event"] = "SPELL_CAST_START",
["source"] = "吉鲁玛·血裘",
["npcID"] = 144537,
},
[203368] = {
["source"] = "炽燃小鬼",
["event"] = "SPELL_CAST_START",
["npcID"] = 120627,
},
[9672] = {
["event"] = "SPELL_CAST_START",
["source"] = "迪菲亚塑风师",
["npcID"] = 1732,
},
[465093] = {
["encounterName"] = "达格兰·索瑞森大帝",
["source"] = "火焰驱逐者",
["npcID"] = 230991,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[359016] = {
["encounterName"] = "克拉格派",
["source"] = "克拉格派",
["encounterID"] = 3001,
["event"] = "SPELL_CAST_START",
["npcID"] = 220008,
},
[49722] = {
["source"] = "被奴役的始祖幼龙",
["event"] = "SPELL_CAST_START",
["npcID"] = 24083,
},
[6917] = {
["source"] = "野棘毒蜘蛛",
["event"] = "SPELL_CAST_START",
["npcID"] = 3820,
},
[444479] = {
["encounterName"] = "重塑之怒",
["source"] = "重塑之怒",
["npcID"] = 218034,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2998,
},
[434756] = {
["source"] = "雇佣的打手",
["event"] = "SPELL_CAST_START",
["npcID"] = 210269,
},
[446409] = {
["event"] = "SPELL_CAST_START",
["source"] = "巨大的缠藻者",
["npcID"] = 221061,
},
[59638] = {
["source"] = "镜像",
["event"] = "SPELL_CAST_START",
["npcID"] = 31216,
},
[432198] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "酿造大师阿德里尔",
["encounterID"] = 2900,
["event"] = "SPELL_CAST_START",
["npcID"] = 210271,
},
[171385] = {
["source"] = "不稳定的大地之魂",
["event"] = "SPELL_CAST_START",
["npcID"] = 80382,
},
[441410] = {
["source"] = "工蜂",
["event"] = "SPELL_CAST_START",
["npcID"] = 210265,
},
[41471] = {
["encounterName"] = "伊利达雷议会",
["source"] = "女公爵玛兰德",
["npcID"] = 22951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[441385] = {
["event"] = "SPELL_CAST_START",
["source"] = "空洞织霜者",
["npcID"] = 222193,
},
[440899] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[291463] = {
["event"] = "SPELL_CAST_START",
["source"] = "预言者塔兹托",
["npcID"] = 150739,
},
[11975] = {
["event"] = "SPELL_CAST_START",
["source"] = "骷髅守护者",
["npcID"] = 10390,
},
[272711] = {
["source"] = "水鼠帮歼灭者",
["event"] = "SPELL_CAST_START",
["npcID"] = 135245,
},
[465464] = {
["event"] = "SPELL_CAST_START",
["source"] = "陷惧邪锤",
["npcID"] = 231134,
},
[439365] = {
["encounterName"] = "艾帕",
["source"] = "艾帕",
["encounterID"] = 2929,
["event"] = "SPELL_CAST_START",
["npcID"] = 210267,
},
[465805] = {
["source"] = "黑曜石毁灭者",
["event"] = "SPELL_CAST_START",
["npcID"] = 226505,
},
[68872] = {
["encounterName"] = "布隆亚姆",
["source"] = "布隆亚姆",
["encounterID"] = 2006,
["event"] = "SPELL_CAST_START",
["npcID"] = 36497,
},
[274002] = {
["encounterName"] = "“屠夫”血钩",
["source"] = "“屠夫”血钩",
["encounterID"] = 2098,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128650,
},
[448854] = {
["event"] = "SPELL_CAST_START",
["source"] = "壮实的竞争者",
["npcID"] = 217646,
},
[439692] = {
["encounterName"] = "女王之牙",
["source"] = "恩克斯",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216648,
},
[438343] = {
["encounterName"] = "流丝之庭",
["source"] = "纺束者塔卡兹基",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[461842] = {
["encounterName"] = "凝结聚合体",
["source"] = "凝结聚合体",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[261711] = {
["event"] = "SPELL_CAST_START",
["source"] = "三叶虫沙丘爬行者",
["npcID"] = 124654,
},
[456198] = {
["event"] = "SPELL_CAST_START",
["source"] = "斯玛拉格尔",
["npcID"] = 220362,
},
[458160] = {
["event"] = "SPELL_CAST_START",
["source"] = "扣颅",
["npcID"] = 221310,
},
[68839] = {
["encounterName"] = "布隆亚姆",
["source"] = "布隆亚姆",
["encounterID"] = 2006,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36497,
},
[470073] = {
["encounterName"] = "傀儡统帅阿格曼奇",
["source"] = "奥能金刚Mk. II",
["encounterID"] = 3046,
["event"] = "SPELL_CAST_START",
["npcID"] = 230219,
},
[452162] = {
["source"] = "隐秘网士",
["event"] = "SPELL_CAST_START",
["npcID"] = 223844,
},
[396879] = {
["source"] = "吉欧瑟姆斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 217416,
},
[40832] = {
["encounterName"] = "伊利丹·怒风",
["source"] = "伊利丹·怒风",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[290106] = {
["event"] = "SPELL_CAST_START",
["source"] = "接骨者班迪",
["npcID"] = 150729,
},
[284703] = {
["event"] = "SPELL_CAST_START",
["source"] = "冰淞使者卡兹莱克",
["npcID"] = 150747,
},
[434137] = {
["source"] = "皇家毒壳者",
["event"] = "SPELL_CAST_START",
["npcID"] = 220730,
},
[440107] = {
["encounterName"] = "女王之牙",
["source"] = "维克斯",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[280389] = {
["encounterName"] = "恐怖船长洛克伍德",
["source"] = "恐怖船长洛克伍德",
["encounterID"] = 2109,
["event"] = "SPELL_CAST_START",
["npcID"] = 129208,
},
[30851] = {
["event"] = "SPELL_CAST_START",
["source"] = "影月召唤者",
["npcID"] = 17395,
},
[39670] = {
["source"] = "伊利达雷玷污者",
["event"] = "SPELL_CAST_START",
["npcID"] = 22853,
},
[466111] = {
["source"] = "铁怒潜行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 232252,
},
[470588] = {
["source"] = "蜃鱼人枯败者",
["event"] = "SPELL_CAST_START",
["npcID"] = 214251,
},
[427601] = {
["source"] = "光耀之子",
["event"] = "SPELL_CAST_START",
["npcID"] = 206710,
},
[321669] = {
["encounterName"] = "唤雾者",
["source"] = "幻影克隆体",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 165108,
},
[438860] = {
["encounterName"] = "大捻接师艾佐",
["source"] = "大捻接师艾佐",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[12471] = {
["source"] = "沙怒暗影法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 5648,
},
[207940] = {
["source"] = "奇拉·艾索尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 104732,
},
[272542] = {
["source"] = "艾什凡狙击手",
["event"] = "SPELL_CAST_START",
["npcID"] = 128967,
},
[435148] = {
["source"] = "复活的步兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 212835,
},
[435405] = {
["encounterName"] = "节点女亲王凯威扎",
["source"] = "节点女亲王凯威扎",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[431697] = {
["source"] = "苏雷吉根除者",
["event"] = "SPELL_CAST_START",
["npcID"] = 225408,
},
[429422] = {
["source"] = "咒炉塑石者",
["event"] = "SPELL_CAST_START",
["npcID"] = 214066,
},
[465881] = {
["event"] = "SPELL_CAST_START",
["source"] = "阿努比萨斯征服者",
["npcID"] = 226757,
},
[447270] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "戴尔克莱上尉",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[470591] = {
["source"] = "夜幕窃愿者",
["event"] = "SPELL_CAST_START",
["npcID"] = 217517,
},
[466109] = {
["source"] = "铁怒潜行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 232252,
},
[438355] = {
["encounterName"] = "流丝之庭",
["source"] = "纺束者塔卡兹基",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[53322] = {
["source"] = "阿努巴尔地穴魔",
["event"] = "SPELL_CAST_START",
["npcID"] = 29063,
},
[17162] = {
["event"] = "SPELL_CAST_START",
["source"] = "复生的魔术师",
["npcID"] = 10419,
},
[12734] = {
["source"] = "指挥官玛洛尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 11032,
},
[431309] = {
["source"] = "夜幕影法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 213892,
},
[240736] = {
["event"] = "SPELL_CAST_START",
["source"] = "阿拉萨斯",
["npcID"] = 119840,
},
[470593] = {
["encounterName"] = "重塑之怒",
["source"] = "重塑之怒",
["npcID"] = 218034,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2998,
},
[272546] = {
["source"] = "水鼠帮海盗",
["event"] = "SPELL_CAST_START",
["npcID"] = 129366,
},
[440912] = {
["event"] = "SPELL_CAST_START",
["source"] = "入侵的鞭笞菇",
["npcID"] = 206194,
},
[426869] = {
["event"] = "SPELL_CAST_START",
["source"] = "水能堡蛮兵",
["npcID"] = 222979,
},
[31747] = {
["event"] = "SPELL_CAST_START",
["source"] = "沙虫",
["npcID"] = 44573,
},
[445771] = {
["event"] = "SPELL_CAST_START",
["source"] = "深水龙虾人",
["npcID"] = 220643,
},
[326281] = {
["encounterName"] = "特雷德奥瓦",
["source"] = "特雷德奥瓦",
["encounterID"] = 2393,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[466107] = {
["source"] = "铁怒军官",
["event"] = "SPELL_CAST_START",
["npcID"] = 232247,
},
[453149] = {
["source"] = "掠网者",
["event"] = "SPELL_CAST_START",
["npcID"] = 219034,
},
[374898] = {
["event"] = "SPELL_CAST_START",
["source"] = "狂乱掠食者",
["npcID"] = 216325,
},
[434773] = {
["source"] = "风险投资公司主顾",
["event"] = "SPELL_CAST_START",
["npcID"] = 214668,
},
[295304] = {
["event"] = "SPELL_CAST_START",
["source"] = "埃兰迪雅·奥箭",
["npcID"] = 154034,
},
[378394] = {
["event"] = "SPELL_CAST_START",
["source"] = "升腾之藻",
["npcID"] = 221062,
},
[410837] = {
["event"] = "SPELL_CAST_START",
["source"] = "控火师罗格雷恩",
["npcID"] = 232571,
},
[8873] = {
["source"] = "烈焰守护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 2726,
},
[453709] = {
["source"] = "藻泽",
["event"] = "SPELL_CAST_START",
["npcID"] = 220287,
},
[431637] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕影行者",
["npcID"] = 213895,
},
[456780] = {
["source"] = "漾水王",
["event"] = "SPELL_CAST_START",
["npcID"] = 220275,
},
[171394] = {
["source"] = "骚动的流水之魂",
["event"] = "SPELL_CAST_START",
["npcID"] = 80379,
},
[320655] = {
["encounterName"] = "凋骨",
["source"] = "凋骨",
["npcID"] = 162691,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[466504] = {
["encounterName"] = "达格兰·索瑞森大帝",
["source"] = "茉艾拉·铜须",
["npcID"] = 226314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[460102] = {
["event"] = "SPELL_CAST_START",
["source"] = "板岩之牙",
["npcID"] = 228439,
},
[63913] = {
["source"] = "暮光冰法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 33819,
},
[62661] = {
["encounterName"] = "维扎克斯将军",
["source"] = "维扎克斯将军",
["encounterID"] = 1134,
["event"] = "SPELL_CAST_START",
["npcID"] = 33271,
},
[32330] = {
["event"] = "SPELL_CAST_START",
["source"] = "莱库尔黄蜂",
["npcID"] = 17732,
},
[451543] = {
["source"] = "高耸虚居居民",
["event"] = "SPELL_CAST_START",
["npcID"] = 219983,
},
[239513] = {
["event"] = "SPELL_CAST_START",
["source"] = "死木邪能法师",
["npcID"] = 118786,
},
[445524] = {
["event"] = "SPELL_CAST_START",
["source"] = "喧翼猎人恩基拉赫",
["npcID"] = 222038,
},
[41150] = {
["source"] = "伊利达雷夜魔领主",
["event"] = "SPELL_CAST_START",
["npcID"] = 22855,
},
[374865] = {
["event"] = "SPELL_CAST_START",
["source"] = "天灾复生者",
["npcID"] = 230421,
},
[20297] = {
["event"] = "SPELL_CAST_START",
["source"] = "迪蒙·纳努克",
["npcID"] = 60683,
},
[390256] = {
["event"] = "SPELL_CAST_START",
["source"] = "榭台混混",
["npcID"] = 215791,
},
[450637] = {
["source"] = "蛛魔领主",
["event"] = "SPELL_CAST_START",
["npcID"] = 218103,
},
[14443] = {
["source"] = "炎鹰海员",
["event"] = "SPELL_CAST_START",
["npcID"] = 35070,
},
[434779] = {
["encounterName"] = "演说者基克斯威兹克",
["source"] = "演说者基克斯威兹克",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[431304] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗影具象",
["npcID"] = 211341,
},
[153485] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗影裂谷蠕虫",
["npcID"] = 217962,
},
[285148] = {
["event"] = "SPELL_CAST_START",
["source"] = "虚空法师凡德林",
["npcID"] = 144579,
},
[456891] = {
["source"] = "驯蜂者",
["event"] = "SPELL_CAST_START",
["npcID"] = 210264,
},
[369788] = {
["source"] = "蕨皮吞噬者",
["event"] = "SPELL_CAST_START",
["npcID"] = 230687,
},
[464358] = {
["encounterName"] = "黑铁七贤",
["source"] = "格鲁雷尔",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226313,
},
[11899] = {
["source"] = "沙怒巫医",
["event"] = "SPELL_CAST_START",
["npcID"] = 5650,
},
[445016] = {
["encounterName"] = "血缚恐魔",
["source"] = "失落的观察者",
["npcID"] = 221667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[41410] = {
["encounterName"] = "灵魂之匣",
["source"] = "欲望精华",
["encounterID"] = 606,
["event"] = "SPELL_CAST_START",
["npcID"] = 23419,
},
[436971] = {
["encounterName"] = "节点女亲王凯威扎",
["source"] = "节点女亲王凯威扎",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[458834] = {
["source"] = "代言人杉文兹",
["event"] = "SPELL_CAST_START",
["npcID"] = 220130,
},
[43649] = {
["encounterName"] = "斯卡瓦尔德和达尔隆",
["source"] = "控制者达尔隆",
["encounterID"] = 2024,
["event"] = "SPELL_CAST_START",
["npcID"] = 24201,
},
[20831] = {
["source"] = "艾德雷斯巫师",
["event"] = "SPELL_CAST_START",
["npcID"] = 11470,
},
[470605] = {
["encounterName"] = "达格兰·索瑞森大帝",
["source"] = "茉艾拉·铜须",
["npcID"] = 226314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[284840] = {
["event"] = "SPELL_CAST_START",
["source"] = "冰淞使者卡兹莱克",
["npcID"] = 150747,
},
[468886] = {
["source"] = "法拉克斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 232593,
},
[204114] = {
["source"] = "克索诺斯邪骑士",
["event"] = "SPELL_CAST_START",
["npcID"] = 119645,
},
[41986] = {
["source"] = "愤怒灵魂碎块",
["event"] = "SPELL_CAST_START",
["npcID"] = 23398,
},
[372862] = {
["source"] = "原始激流",
["event"] = "SPELL_CAST_START",
["npcID"] = 194219,
},
[371584] = {
["event"] = "SPELL_CAST_START",
["source"] = "逃离的蒸汽",
["npcID"] = 227383,
},
[422090] = {
["source"] = "树人",
["event"] = "SPELL_CAST_START",
["npcID"] = 54983,
},
[431714] = {
["source"] = "网语者格里吉克",
["event"] = "SPELL_CAST_START",
["npcID"] = 216041,
},
[445830] = {
["event"] = "SPELL_CAST_START",
["source"] = "暴怒的深岩剥石者",
["npcID"] = 218657,
},
[439646] = {
["encounterName"] = "大捻接师艾佐",
["source"] = "大捻接师艾佐",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[438749] = {
["encounterName"] = "流丝之庭",
["source"] = "碎壳甲虫",
["npcID"] = 218884,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2921,
},
[43650] = {
["encounterName"] = "斯卡瓦尔德和达尔隆",
["source"] = "控制者达尔隆",
["encounterID"] = 2024,
["event"] = "SPELL_CAST_START",
["npcID"] = 24201,
},
[63032] = {
["source"] = "丛林守护者哈特维斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 33443,
},
[445021] = {
["encounterName"] = "安苏雷克女王",
["source"] = "应诏的助祭",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 221863,
},
[458329] = {
["source"] = "考尔达克",
["event"] = "SPELL_CAST_START",
["npcID"] = 221084,
},
[470609] = {
["encounterName"] = "达格兰·索瑞森大帝",
["source"] = "茉艾拉·铜须",
["npcID"] = 226314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[18327] = {
["event"] = "SPELL_CAST_START",
["source"] = "安娜丝塔丽男爵夫人",
["npcID"] = 10436,
},
[87527] = {
["source"] = "火烟新兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 46694,
},
[443487] = {
["source"] = "工蜂",
["event"] = "SPELL_CAST_START",
["npcID"] = 210265,
},
[456281] = {
["source"] = "怒之煞",
["event"] = "SPELL_CAST_START",
["npcID"] = 226646,
},
[432229] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "酿造大师阿德里尔",
["encounterID"] = 2900,
["event"] = "SPELL_CAST_START",
["npcID"] = 210271,
},
[29765] = {
["source"] = "晶化守护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 26782,
},
[340208] = {
["source"] = "纱雾龙母",
["event"] = "SPELL_CAST_START",
["npcID"] = 173655,
},
[444000] = {
["event"] = "SPELL_CAST_START",
["source"] = "交织御纤士",
["npcID"] = 218317,
},
[182145] = {
["source"] = "恶毒小鬼",
["event"] = "SPELL_CAST_START",
["npcID"] = 120628,
},
[453212] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[448444] = {
["encounterName"] = "蛛网将军阿贝纳尔",
["source"] = "蛛网将军阿贝纳尔",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[470612] = {
["encounterName"] = "克拉格派",
["source"] = "克拉格派",
["encounterID"] = 3001,
["event"] = "SPELL_CAST_START",
["npcID"] = 220008,
},
[464983] = {
["encounterName"] = "弗莱拉斯大使",
["source"] = "纵火者",
["npcID"] = 230804,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3047,
},
[455260] = {
["event"] = "SPELL_CAST_START",
["source"] = "亡孢鞭笞菇",
["npcID"] = 221424,
},
[66514] = {
["source"] = "北海海怪",
["event"] = "SPELL_CAST_START",
["npcID"] = 34925,
},
[468566] = {
["source"] = "弗诺斯·达克维尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 232269,
},
[41370] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊利达雷执政官",
["npcID"] = 23400,
},
[334488] = {
["encounterName"] = "外科医生缝肉",
["source"] = "外科医生缝肉",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[427629] = {
["source"] = "热诚的神射手",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[345552] = {
["source"] = "瓦格里猎人",
["event"] = "SPELL_CAST_START",
["npcID"] = 227967,
},
[443427] = {
["source"] = "苏雷吉缚丝者",
["event"] = "SPELL_CAST_START",
["npcID"] = 220195,
},
[439401] = {
["encounterName"] = "大捻接师艾佐",
["source"] = "大捻接师艾佐",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[22121] = {
["source"] = "霜狼弓箭手",
["event"] = "SPELL_CAST_START",
["npcID"] = 13359,
},
[448098] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "黑血收割者",
["npcID"] = 222455,
},
[434281] = {
["source"] = "低泣之影",
["event"] = "SPELL_CAST_START",
["npcID"] = 217268,
},
[392013] = {
["source"] = "达拉然的碎片",
["event"] = "SPELL_CAST_START",
["npcID"] = 223799,
},
[388310] = {
["source"] = "神秘结界",
["event"] = "SPELL_CAST_START",
["npcID"] = 210398,
},
[468569] = {
["source"] = "弗诺斯·达克维尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 232269,
},
[61353] = {
["source"] = "达格娜·火石",
["event"] = "SPELL_CAST_START",
["npcID"] = 96779,
},
[447076] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[445541] = {
["encounterName"] = "机械大师",
["source"] = "代言人布洛克",
["encounterID"] = 2888,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213217,
},
[448100] = {
["event"] = "SPELL_CAST_START",
["source"] = "黑血收割者",
["npcID"] = 222455,
},
[433040] = {
["source"] = "蜃鱼人欺诈者",
["event"] = "SPELL_CAST_START",
["npcID"] = 214343,
},
[433411] = {
["source"] = "蛛魔暗法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[157331] = {
["source"] = "强力风暴元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 77936,
},
[462430] = {
["encounterName"] = "斯卡瓦尔德和达尔隆",
["source"] = "控制者达尔隆",
["encounterID"] = 2024,
["event"] = "SPELL_CAST_START",
["npcID"] = 24201,
},
[272571] = {
["source"] = "水鼠帮唤风者",
["event"] = "SPELL_CAST_START",
["npcID"] = 129367,
},
[320771] = {
["encounterName"] = "缚霜者纳尔佐",
["source"] = "缚霜者纳尔佐",
["npcID"] = 162693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2390,
},
[453733] = {
["event"] = "SPELL_CAST_START",
["source"] = "修拉伊",
["npcID"] = 221224,
},
[30853] = {
["event"] = "SPELL_CAST_START",
["source"] = "影月召唤者",
["npcID"] = 17395,
},
[384648] = {
["event"] = "SPELL_CAST_START",
["source"] = "埃隆巴克保护者",
["npcID"] = 11459,
},
[468575] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "弗诺斯·达克维尔",
["npcID"] = 232269,
},
[463459] = {
["encounterName"] = "流丝之庭",
["source"] = "纺束者塔卡兹基",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[320336] = {
["encounterName"] = "收割者阿玛厄斯",
["source"] = "复生的法师",
["npcID"] = 164414,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[440506] = {
["source"] = "冒泡的弹涂鱼",
["event"] = "SPELL_CAST_START",
["npcID"] = 214960,
},
[8362] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗血治疗者",
["npcID"] = 17730,
},
[213625] = {
["source"] = "捕魂者麦芙拉",
["event"] = "SPELL_CAST_START",
["npcID"] = 106984,
},
[414844] = {
["encounterName"] = "无头骑士",
["source"] = "无头骑士",
["npcID"] = 207438,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2725,
},
[434803] = {
["encounterName"] = "噬灭者乌格拉克斯",
["source"] = "噬灭者乌格拉克斯",
["npcID"] = 215657,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2902,
},
[468579] = {
["source"] = "凿刻的战争傀儡",
["event"] = "SPELL_CAST_START",
["npcID"] = 232268,
},
[441452] = {
["encounterName"] = "噬灭者乌格拉克斯",
["source"] = "噬灭者乌格拉克斯",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[448105] = {
["encounterName"] = "达加·燃影者",
["source"] = "瓦里昂娜",
["encounterID"] = 1048,
["event"] = "SPELL_CAST_START",
["npcID"] = 40320,
},
[63802] = {
["encounterName"] = "尤格-萨隆",
["source"] = "萨拉",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[412283] = {
["source"] = "神秘结界",
["event"] = "SPELL_CAST_START",
["npcID"] = 210398,
},
[443500] = {
["source"] = "皇家虫群卫士",
["event"] = "SPELL_CAST_START",
["npcID"] = 220197,
},
[450153] = {
["event"] = "SPELL_CAST_START",
["source"] = "毒根",
["npcID"] = 214783,
},
[389255] = {
["event"] = "SPELL_CAST_START",
["source"] = "其拉角斗士",
["npcID"] = 226503,
},
[449130] = {
["source"] = "熔炉装货工",
["event"] = "SPELL_CAST_START",
["npcID"] = 213343,
},
[423538] = {
["encounterName"] = "斯卡莫拉克",
["source"] = "斯卡莫拉克",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[3589] = {
["event"] = "SPELL_CAST_START",
["source"] = "尖叫的女妖",
["npcID"] = 10463,
},
[448619] = {
["source"] = "粗心的酒花大地精",
["event"] = "SPELL_CAST_START",
["npcID"] = 223423,
},
[17228] = {
["source"] = "瑟雷姆·刺蹄",
["event"] = "SPELL_CAST_START",
["npcID"] = 11490,
},
[324776] = {
["source"] = "纱雾塑形者",
["event"] = "SPELL_CAST_START",
["npcID"] = 166275,
},
[372369] = {
["source"] = "蕨皮黑羽",
["event"] = "SPELL_CAST_START",
["npcID"] = 230680,
},
[22478] = {
["source"] = "瑟雷姆·刺蹄",
["event"] = "SPELL_CAST_START",
["npcID"] = 11490,
},
[320171] = {
["encounterName"] = "收割者阿玛厄斯",
["source"] = "阿玛厄斯",
["npcID"] = 163157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[36807] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗血神谕者",
["npcID"] = 17771,
},
[333477] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎淤",
["npcID"] = 163621,
},
[379023] = {
["source"] = "山峦觅食者",
["event"] = "SPELL_CAST_START",
["npcID"] = 191240,
},
[440504] = {
["encounterName"] = "流丝之庭",
["source"] = "阿努巴拉什",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[396423] = {
["source"] = "厄炉魔匠",
["event"] = "SPELL_CAST_START",
["npcID"] = 232458,
},
[386700] = {
["source"] = "冰雹使劫掠者",
["event"] = "SPELL_CAST_START",
["npcID"] = 189228,
},
[325802] = {
["source"] = "锐眼弓手",
["event"] = "SPELL_CAST_START",
["npcID"] = 166936,
},
[455275] = {
["event"] = "SPELL_CAST_START",
["source"] = "修拉伊",
["npcID"] = 221224,
},
[445207] = {
["source"] = "虚缚嚎叫者",
["event"] = "SPELL_CAST_START",
["npcID"] = 221979,
},
[333479] = {
["event"] = "SPELL_CAST_START",
["source"] = "烂吐",
["npcID"] = 163620,
},
[272581] = {
["source"] = "水鼠帮唤风者",
["event"] = "SPELL_CAST_START",
["npcID"] = 129367,
},
[449135] = {
["source"] = "郁齿揍虫者",
["event"] = "SPELL_CAST_START",
["npcID"] = 222176,
},
[256616] = {
["source"] = "雕骨切割者",
["event"] = "SPELL_CAST_START",
["npcID"] = 133990,
},
[452205] = {
["source"] = "惊魂聚合体",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[3256] = {
["source"] = "圣甲虫",
["event"] = "SPELL_CAST_START",
["npcID"] = 7269,
},
[442995] = {
["source"] = "风险投资公司蜂蜜收割者",
["event"] = "SPELL_CAST_START",
["npcID"] = 220946,
},
[463977] = {
["encounterName"] = "伊森迪奥斯",
["source"] = "伊森迪奥斯",
["npcID"] = 226304,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3043,
},
[464367] = {
["encounterName"] = "黑铁七贤",
["source"] = "火元素",
["npcID"] = 231410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3048,
},
[448691] = {
["event"] = "SPELL_CAST_START",
["source"] = "暴怒的深岩剥石者",
["npcID"] = 218657,
},
[15241] = {
["event"] = "SPELL_CAST_START",
["source"] = "复生的魔术师",
["npcID"] = 10419,
},
[414851] = {
["encounterName"] = "无头骑士",
["source"] = "无头骑士",
["npcID"] = 207438,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2725,
},
[38557] = {
["source"] = "斯通纳德战鼓手",
["event"] = "SPELL_CAST_START",
["npcID"] = 46749,
},
[433448] = {
["isChanneled"] = true,
["source"] = "宝石囤积者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220148,
},
[431493] = {
["source"] = "夜幕咒刃",
["event"] = "SPELL_CAST_START",
["npcID"] = 213894,
},
[257641] = {
["source"] = "铁潮火枪手",
["event"] = "SPELL_CAST_START",
["npcID"] = 137521,
},
[462317] = {
["encounterName"] = "洛考尔",
["source"] = "洛考尔",
["encounterID"] = 3042,
["event"] = "SPELL_CAST_START",
["npcID"] = 226315,
},
[317792] = {
["source"] = "亡者魔导师",
["event"] = "SPELL_CAST_START",
["npcID"] = 163366,
},
[326319] = {
["event"] = "SPELL_CAST_START",
["source"] = "德鲁斯特收割者",
["npcID"] = 164921,
},
[443510] = {
["source"] = "夜幕行刑者",
["event"] = "SPELL_CAST_START",
["npcID"] = 217516,
},
[31717] = {
["encounterName"] = "黑色阔步者",
["source"] = "黑色阔步者",
["npcID"] = 17882,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1948,
},
[69633] = {
["source"] = "幽灵守卫",
["event"] = "SPELL_CAST_START",
["npcID"] = 36666,
},
[450677] = {
["event"] = "SPELL_CAST_START",
["source"] = "欧尔塔",
["npcID"] = 221067,
},
[159847] = {
["source"] = "铁军步兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 76556,
},
[468587] = {
["event"] = "SPELL_CAST_START",
["source"] = "势不可挡的憎恶",
["npcID"] = 230684,
},
[16429] = {
["event"] = "SPELL_CAST_START",
["source"] = "图萨丁暗影法师",
["npcID"] = 10398,
},
[379033] = {
["source"] = "山崖獒犬",
["event"] = "SPELL_CAST_START",
["npcID"] = 194786,
},
[451702] = {
["event"] = "SPELL_CAST_START",
["source"] = "欧尔塔",
["npcID"] = 221067,
},
[21067] = {
["source"] = "活体污染物",
["event"] = "SPELL_CAST_START",
["npcID"] = 43089,
},
[272588] = {
["source"] = "水鼠帮杀手",
["event"] = "SPELL_CAST_START",
["npcID"] = 137511,
},
[443001] = {
["event"] = "SPELL_CAST_START",
["source"] = "纺卷执法者",
["npcID"] = 223362,
},
[441772] = {
["encounterName"] = "流丝之庭",
["source"] = "纺束者塔卡兹基",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[15495] = {
["source"] = "雷矛巡山人",
["event"] = "SPELL_CAST_START",
["npcID"] = 12047,
},
[64059] = {
["encounterName"] = "尤格-萨隆",
["source"] = "尤格-萨隆的大脑",
["npcID"] = 33890,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[463472] = {
["encounterName"] = "伊森迪奥斯",
["source"] = "烈焰喷涌",
["npcID"] = 230079,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3043,
},
[453749] = {
["source"] = "藻泽",
["event"] = "SPELL_CAST_START",
["npcID"] = 220287,
},
[333488] = {
["encounterName"] = "收割者阿玛厄斯",
["source"] = "阿玛厄斯",
["npcID"] = 163157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[443507] = {
["source"] = "皇家虫群卫士",
["event"] = "SPELL_CAST_START",
["npcID"] = 220197,
},
[338606] = {
["event"] = "SPELL_CAST_START",
["source"] = "分离助理",
["npcID"] = 167731,
},
[188046] = {
["source"] = "梦境住民",
["event"] = "SPELL_CAST_START",
["npcID"] = 198489,
},
[178067] = {
["source"] = "深海巨人",
["event"] = "SPELL_CAST_START",
["npcID"] = 88094,
},
[30846] = {
["event"] = "SPELL_CAST_START",
["source"] = "影月技师",
["npcID"] = 17414,
},
[15655] = {
["event"] = "SPELL_CAST_START",
["source"] = "复生的防御者",
["npcID"] = 10421,
},
[320696] = {
["event"] = "SPELL_CAST_START",
["source"] = "缝合先锋",
["npcID"] = 163121,
},
[451605] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[448634] = {
["encounterName"] = "深地尊将维克迪斯",
["source"] = "深地尊将维克迪斯",
["encounterID"] = 2989,
["event"] = "SPELL_CAST_START",
["npcID"] = 220158,
},
[445052] = {
["encounterName"] = "噬灭者乌格拉克斯",
["source"] = "噬灭者乌格拉克斯",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[80750] = {
["event"] = "SPELL_CAST_START",
["source"] = "巴纳扎尔",
["npcID"] = 10813,
},
[17165] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "复生的审查者",
["npcID"] = 10426,
},
[429091] = {
["source"] = "高阶牧师艾姆雅",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[377502] = {
["event"] = "SPELL_CAST_START",
["source"] = "榭台踏泥者",
["npcID"] = 216072,
},
[470592] = {
["source"] = "夜幕幽卫",
["event"] = "SPELL_CAST_START",
["npcID"] = 217519,
},
[17293] = {
["source"] = "档案管理员加尔福特",
["event"] = "SPELL_CAST_START",
["npcID"] = 10811,
},
[284414] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "审判官德莱雷丝",
["npcID"] = 144567,
},
[457336] = {
["source"] = "觉醒的机械师",
["event"] = "SPELL_CAST_START",
["npcID"] = 227273,
},
[458670] = {
["source"] = "岩石看守者阿尔卡冯",
["event"] = "SPELL_CAST_START",
["npcID"] = 227257,
},
[426964] = {
["source"] = "阿拉希步兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 206705,
},
[445038] = {
["source"] = "蜃鱼人欺诈者",
["event"] = "SPELL_CAST_START",
["npcID"] = 214343,
},
[417683] = {
["source"] = "恩佐斯之怒",
["event"] = "SPELL_CAST_START",
["npcID"] = 205307,
},
[426734] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[211845] = {
["source"] = "鲜血魔狼",
["event"] = "SPELL_CAST_START",
["npcID"] = 92600,
},
[427469] = {
["source"] = "狂热的咒术师",
["event"] = "SPELL_CAST_START",
["npcID"] = 206698,
},
[461904] = {
["event"] = "SPELL_CAST_START",
["source"] = "扬升宝珠",
["npcID"] = 229296,
},
[423051] = {
["encounterName"] = "布朗派克男爵",
["source"] = "布朗派克男爵",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[462969] = {
["encounterName"] = "贝尔加",
["source"] = "贝尔加",
["npcID"] = 226303,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3044,
},
[458874] = {
["source"] = "代言人杉文兹",
["event"] = "SPELL_CAST_START",
["npcID"] = 220130,
},
[375459] = {
["source"] = "雷霆蜥蜴",
["event"] = "SPELL_CAST_START",
["npcID"] = 191827,
},
[317791] = {
["source"] = "亡者魔导师",
["event"] = "SPELL_CAST_START",
["npcID"] = 163366,
},
[320772] = {
["encounterName"] = "缚霜者纳尔佐",
["source"] = "缚霜者纳尔佐",
["npcID"] = 162693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2390,
},
[444546] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[188818] = {
["source"] = "黯歌夺魂者",
["event"] = "SPELL_CAST_START",
["npcID"] = 116823,
},
[458879] = {
["encounterName"] = "代言人杉文兹",
["source"] = "代言人杉文兹",
["encounterID"] = 2947,
["event"] = "SPELL_CAST_START",
["npcID"] = 220119,
},
[450176] = {
["source"] = "蛛魔斩击者",
["event"] = "SPELL_CAST_START",
["npcID"] = 208243,
},
[22887] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗血矛兵",
["npcID"] = 17729,
},
[465529] = {
["source"] = "腐臭橡树",
["event"] = "SPELL_CAST_START",
["npcID"] = 231083,
},
[267997] = {
["event"] = "SPELL_CAST_START",
["source"] = "灼焦恶犬",
["npcID"] = 226269,
},
[237692] = {
["event"] = "SPELL_CAST_START",
["source"] = "克索诺斯教徒",
["npcID"] = 119053,
},
[442501] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉铁纹士",
["npcID"] = 220551,
},
[449154] = {
["source"] = "熔炉装货工",
["event"] = "SPELL_CAST_START",
["npcID"] = 213343,
},
[434829] = {
["encounterName"] = "演说者基克斯威兹克",
["source"] = "演说者基克斯威兹克",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[157348] = {
["source"] = "强力风暴元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 77936,
},
[462972] = {
["encounterName"] = "贝尔加",
["source"] = "贝尔加",
["npcID"] = 226303,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3044,
},
[130265] = {
["event"] = "SPELL_CAST_START",
["source"] = "雷霆要塞士兵",
["npcID"] = 66291,
},
[68982] = {
["encounterName"] = "噬魂者",
["source"] = "噬魂者",
["encounterID"] = 2007,
["event"] = "SPELL_CAST_START",
["npcID"] = 36502,
},
[470649] = {
["encounterName"] = "达格兰·索瑞森大帝",
["source"] = "拉格纳罗斯的影像",
["npcID"] = 231006,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[448644] = {
["encounterName"] = "深地尊将维克迪斯",
["source"] = "深地尊将维克迪斯",
["encounterID"] = 2989,
["event"] = "SPELL_CAST_START",
["npcID"] = 220158,
},
[372397] = {
["source"] = "蕨皮吞噬者",
["event"] = "SPELL_CAST_START",
["npcID"] = 230687,
},
[40904] = {
["encounterName"] = "伊利丹·怒风",
["source"] = "伊利丹·怒风",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[446086] = {
["source"] = "苏雷吉反自然者",
["event"] = "SPELL_CAST_START",
["npcID"] = 216339,
},
[41032] = {
["encounterName"] = "伊利丹·怒风",
["source"] = "伊利丹·怒风",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[463486] = {
["encounterName"] = "伊森迪奥斯",
["source"] = "伊森迪奥斯",
["npcID"] = 226304,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3043,
},
[256627] = {
["source"] = "雕骨执行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 129374,
},
[5159] = {
["event"] = "SPELL_CAST_START",
["source"] = "地精工匠",
["npcID"] = 1731,
},
[10966] = {
["event"] = "SPELL_CAST_START",
["source"] = "恶魔卫士蛮兵",
["npcID"] = 18894,
},
[469628] = {
["encounterName"] = "黑铁七贤",
["source"] = "多普雷尔",
["encounterID"] = 3048,
["event"] = "SPELL_CAST_START",
["npcID"] = 226309,
},
[322756] = {
["event"] = "SPELL_CAST_START",
["source"] = "佐尔拉姆斯守门人",
["npcID"] = 165137,
},
[450182] = {
["event"] = "SPELL_CAST_START",
["source"] = "被惊扰的泥裔",
["npcID"] = 219897,
},
[456835] = {
["source"] = "邃渊饥渴者",
["event"] = "SPELL_CAST_START",
["npcID"] = 221199,
},
[57984] = {
["source"] = "巨型火元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 95061,
},
[441483] = {
["source"] = "亡瓣之花",
["event"] = "SPELL_CAST_START",
["npcID"] = 206184,
},
[195474] = {
["source"] = "莫尔金",
["event"] = "SPELL_CAST_START",
["npcID"] = 102852,
},
[20801] = {
["source"] = "小鬼爪牙",
["event"] = "SPELL_CAST_START",
["npcID"] = 12922,
},
[324293] = {
["event"] = "SPELL_CAST_START",
["source"] = "骷髅劫掠者",
["npcID"] = 165919,
},
[398497] = {
["source"] = "雷巅岩喉蝠",
["event"] = "SPELL_CAST_START",
["npcID"] = 212364,
},
[464513] = {
["event"] = "SPELL_CAST_START",
["source"] = "克尔苏加德",
["npcID"] = 228841,
},
[383452] = {
["event"] = "SPELL_CAST_START",
["source"] = "野蛮的巨型血犬",
["npcID"] = 233328,
},
[320200] = {
["encounterName"] = "外科医生缝肉",
["source"] = "外科医生缝肉",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[423062] = {
["encounterName"] = "布朗派克男爵",
["source"] = "布朗派克男爵",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[340160] = {
["source"] = "纱雾龙母",
["event"] = "SPELL_CAST_START",
["npcID"] = 173655,
},
[448640] = {
["source"] = "咒炉荣誉卫兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 214264,
},
[435165] = {
["source"] = "布朗派克爵士",
["event"] = "SPELL_CAST_START",
["npcID"] = 217658,
},
[455815] = {
["event"] = "SPELL_CAST_START",
["source"] = "癫狂的卷心菜拍击者",
["npcID"] = 206514,
},
[338653] = {
["event"] = "SPELL_CAST_START",
["source"] = "缝合助理",
["npcID"] = 173044,
},
[63038] = {
["encounterName"] = "尤格-萨隆",
["source"] = "尤格-萨隆的卫士",
["npcID"] = 33136,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[130266] = {
["event"] = "SPELL_CAST_START",
["source"] = "雷霆要塞士兵",
["npcID"] = 66200,
},
[463890] = {
["encounterName"] = "贝尔加",
["source"] = "贝尔加",
["npcID"] = 226303,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3044,
},
[321226] = {
["encounterName"] = "收割者阿玛厄斯",
["source"] = "阿玛厄斯",
["npcID"] = 163157,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2388,
},
[17141] = {
["event"] = "SPELL_CAST_START",
["source"] = "复生的牧师",
["npcID"] = 10423,
},
[453258] = {
["event"] = "SPELL_CAST_START",
["source"] = "席克兰",
["npcID"] = 214503,
},
[456751] = {
["encounterName"] = "达加·燃影者",
["source"] = "瓦里昂娜",
["encounterID"] = 1048,
["event"] = "SPELL_CAST_START",
["npcID"] = 40320,
},
[450188] = {
["event"] = "SPELL_CAST_START",
["source"] = "流离失所的鼹鼠",
["npcID"] = 215846,
},
[447143] = {
["encounterName"] = "研究员文凯克斯",
["source"] = "研究员文凯克斯",
["encounterID"] = 2991,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219856,
},
[269029] = {
["encounterName"] = "恐怖船长洛克伍德",
["source"] = "恐怖船长洛克伍德",
["encounterID"] = 2109,
["event"] = "SPELL_CAST_START",
["npcID"] = 129208,
},
[440188] = {
["source"] = "几丁质骑士",
["event"] = "SPELL_CAST_START",
["npcID"] = 219725,
},
[182172] = {
["source"] = "暗火魔",
["event"] = "SPELL_CAST_START",
["npcID"] = 120629,
},
[462983] = {
["source"] = "自动踏铁者",
["event"] = "SPELL_CAST_START",
["npcID"] = 229778,
},
[463495] = {
["encounterName"] = "伊森迪奥斯",
["source"] = "伊森迪奥斯",
["npcID"] = 226304,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3043,
},
[371383] = {
["event"] = "SPELL_CAST_START",
["source"] = "克尔苏加德",
["npcID"] = 228841,
},
[41481] = {
["encounterName"] = "伊利达雷议会",
["source"] = "高阶灵术师塞勒沃尔",
["npcID"] = 22950,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[375988] = {
["source"] = "雪裘狐龙",
["event"] = "SPELL_CAST_START",
["npcID"] = 193438,
},
[449167] = {
["encounterName"] = "机械大师",
["source"] = "代言人多利塔",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213216,
},
[180392] = {
["source"] = "艾瑞达裂隙制造者",
["event"] = "SPELL_CAST_START",
["npcID"] = 92450,
},
[450191] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[440468] = {
["encounterName"] = "女王之牙",
["source"] = "维克斯",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[443027] = {
["source"] = "高耸虚居决斗者",
["event"] = "SPELL_CAST_START",
["npcID"] = 225148,
},
[218763] = {
["event"] = "SPELL_CAST_START",
["source"] = "活性邪焰元素",
["npcID"] = 120933,
},
[396742] = {
["event"] = "SPELL_CAST_START",
["source"] = "其拉角斗士",
["npcID"] = 226503,
},
[320170] = {
["encounterName"] = "收割者阿玛厄斯",
["source"] = "阿玛厄斯",
["npcID"] = 162692,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[320208] = {
["encounterName"] = "外科医生缝肉",
["source"] = "缝肉的造物",
["npcID"] = 164578,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[322767] = {
["source"] = "德鲁斯特收割者",
["event"] = "SPELL_CAST_START",
["npcID"] = 164921,
},
[322274] = {
["encounterName"] = "缚霜者纳尔佐",
["source"] = "佐尔拉姆斯虹吸者",
["npcID"] = 164815,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2390,
},
[327664] = {
["encounterName"] = "外科医生缝肉",
["source"] = "外科医生缝肉",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[447921] = {
["source"] = "飞瀑守卫",
["event"] = "SPELL_CAST_START",
["npcID"] = 214594,
},
[196255] = {
["event"] = "SPELL_CAST_START",
["source"] = "山地座狼",
["npcID"] = 91423,
},
[448147] = {
["encounterName"] = "安苏雷克女王",
["source"] = "内室卫士",
["npcID"] = 223204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[469636] = {
["encounterName"] = "黑铁七贤",
["source"] = "黑特雷尔",
["npcID"] = 226311,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3048,
},
[449687] = {
["encounterName"] = "铸炉之主索朗格斯",
["source"] = "铸炉之主索朗格斯",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[456851] = {
["event"] = "SPELL_CAST_START",
["source"] = "灰翅岩翼蝠",
["npcID"] = 215794,
},
[304361] = {
["source"] = "巨型穹天鳐",
["event"] = "SPELL_CAST_START",
["npcID"] = 150467,
},
[448660] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[455313] = {
["event"] = "SPELL_CAST_START",
["source"] = "亡孢鞭笞菇",
["npcID"] = 221424,
},
[470154] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "巨型血犬",
["npcID"] = 232902,
},
[444055] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛛形讨取者",
["npcID"] = 218725,
},
[430238] = {
["source"] = "腐化的塑法者",
["event"] = "SPELL_CAST_START",
["npcID"] = 219302,
},
[428703] = {
["source"] = "击石者",
["event"] = "SPELL_CAST_START",
["npcID"] = 213954,
},
[446328] = {
["source"] = "邃渊饥渴者",
["event"] = "SPELL_CAST_START",
["npcID"] = 221199,
},
[450197] = {
["source"] = "敏捷的聚生虫",
["event"] = "SPELL_CAST_START",
["npcID"] = 208245,
},
[446615] = {
["source"] = "夜幕筑暗师",
["event"] = "SPELL_CAST_START",
["npcID"] = 213885,
},
[463503] = {
["encounterName"] = "伊森迪奥斯",
["source"] = "伊森迪奥斯",
["npcID"] = 226304,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3043,
},
[18670] = {
["event"] = "SPELL_CAST_START",
["source"] = "埃隆巴克保护者",
["npcID"] = 11459,
},
[464527] = {
["event"] = "SPELL_CAST_START",
["source"] = "克尔苏加德",
["npcID"] = 228841,
},
[448663] = {
["encounterName"] = "深地尊将维克迪斯",
["source"] = "深地尊将维克迪斯",
["encounterID"] = 2989,
["event"] = "SPELL_CAST_START",
["npcID"] = 220158,
},
[451222] = {
["source"] = "高耸虚居居民",
["event"] = "SPELL_CAST_START",
["npcID"] = 219983,
},
[466063] = {
["source"] = "幽灵血牙",
["event"] = "SPELL_CAST_START",
["npcID"] = 231061,
},
[22924] = {
["event"] = "SPELL_CAST_START",
["source"] = "特迪斯·扭木",
["npcID"] = 11489,
},
[462974] = {
["encounterName"] = "贝尔加",
["source"] = "贝尔加",
["npcID"] = 226303,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3044,
},
[284402] = {
["event"] = "SPELL_CAST_START",
["source"] = "审判官德莱雷丝",
["npcID"] = 144567,
},
[459923] = {
["source"] = "尊贵牧师",
["event"] = "SPELL_CAST_START",
["npcID"] = 222368,
},
[341709] = {
["encounterName"] = "唤雾者",
["source"] = "唤雾者",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[424614] = {
["event"] = "SPELL_CAST_START",
["source"] = "真菌戳刺者",
["npcID"] = 207450,
},
[451224] = {
["event"] = "SPELL_CAST_START",
["source"] = "暮光术士",
["npcID"] = 224271,
},
[41472] = {
["encounterName"] = "伊利达雷议会",
["source"] = "女公爵玛兰德",
["npcID"] = 22951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[458836] = {
["isChanneled"] = true,
["source"] = "代言人杉文兹",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220130,
},
[442525] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "酿造大师阿德里尔",
["encounterID"] = 2900,
["event"] = "SPELL_CAST_START",
["npcID"] = 210271,
},
[400050] = {
["source"] = "废土剥石者",
["event"] = "SPELL_CAST_START",
["npcID"] = 220363,
},
[449690] = {
["event"] = "SPELL_CAST_START",
["source"] = "女王亲卫雷扎",
["npcID"] = 223822,
},
[424888] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["encounterID"] = 2854,
["event"] = "SPELL_CAST_START",
["npcID"] = 210108,
},
[450714] = {
["source"] = "蛛魔领主",
["event"] = "SPELL_CAST_START",
["npcID"] = 218103,
},
[13737] = {
["event"] = "SPELL_CAST_START",
["source"] = "复生的豪侠",
["npcID"] = 10424,
},
[68988] = {
["encounterName"] = "布隆亚姆",
["source"] = "布隆亚姆",
["encounterID"] = 2006,
["event"] = "SPELL_CAST_START",
["npcID"] = 36497,
},
[57091] = {
["encounterName"] = "克莉斯塔萨",
["source"] = "克莉斯塔萨",
["encounterID"] = 2011,
["event"] = "SPELL_CAST_START",
["npcID"] = 26723,
},
[442536] = {
["source"] = "隐秘网士",
["event"] = "SPELL_CAST_START",
["npcID"] = 223844,
},
[457881] = {
["source"] = "泽克维尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 227471,
},
[457880] = {
["event"] = "SPELL_CAST_START",
["source"] = "深水钳蟹",
["npcID"] = 214550,
},
[428202] = {
["encounterName"] = "机械大师",
["source"] = "代言人布洛克",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213217,
},
[438218] = {
["encounterName"] = "流丝之庭",
["source"] = "阿努巴拉什",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[428711] = {
["encounterName"] = "机械大师",
["source"] = "代言人多利塔",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213216,
},
[449693] = {
["event"] = "SPELL_CAST_START",
["source"] = "女王亲卫雷扎",
["npcID"] = 223822,
},
[331479] = {
["event"] = "SPELL_CAST_START",
["source"] = "活化粘液",
["npcID"] = 218519,
},
[450718] = {
["event"] = "SPELL_CAST_START",
["source"] = "莫斯艾兹克",
["npcID"] = 206203,
},
[238984] = {
["source"] = "传送门守护者维萨尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 117647,
},
[470164] = {
["event"] = "SPELL_CAST_START",
["source"] = "烈焰行者",
["npcID"] = 233203,
},
[41483] = {
["encounterName"] = "伊利达雷议会",
["source"] = "高阶灵术师塞勒沃尔",
["npcID"] = 22950,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[442530] = {
["encounterName"] = "血缚恐魔",
["source"] = "血缚恐魔",
["npcID"] = 214502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[11898] = {
["source"] = "沙怒饮血者",
["event"] = "SPELL_CAST_START",
["npcID"] = 5649,
},
[11962] = {
["event"] = "SPELL_CAST_START",
["source"] = "复生的战斗法师",
["npcID"] = 10425,
},
[415406] = {
["encounterName"] = "旋菇",
["source"] = "旋菇",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[454813] = {
["event"] = "SPELL_CAST_START",
["source"] = "腐蚀剃天者",
["npcID"] = 225817,
},
[256639] = {
["source"] = "黑油投弹者",
["event"] = "SPELL_CAST_START",
["npcID"] = 129372,
},
[449696] = {
["event"] = "SPELL_CAST_START",
["source"] = "女王亲卫杰扎",
["npcID"] = 223839,
},
[321247] = {
["encounterName"] = "收割者阿玛厄斯",
["source"] = "阿玛厄斯",
["npcID"] = 163157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[37965] = {
["event"] = "SPELL_CAST_START",
["source"] = "幽暗沼泽蹒跚者",
["npcID"] = 17871,
},
[116] = {
["npcID"] = 188027,
},
[396475] = {
["source"] = "厄炉魔匠",
["event"] = "SPELL_CAST_START",
["npcID"] = 232458,
},
[448162] = {
["event"] = "SPELL_CAST_START",
["source"] = "巨大的缠藻者",
["npcID"] = 221061,
},
[16866] = {
["event"] = "SPELL_CAST_START",
["source"] = "泼毒者",
["npcID"] = 10417,
},
[453271] = {
["source"] = "惊魂聚合体",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[441510] = {
["source"] = "致命幼苗",
["event"] = "SPELL_CAST_START",
["npcID"] = 220316,
},
[424419] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "戴尔克莱上尉",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[465051] = {
["source"] = "萨拉塔斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 230937,
},
[338636] = {
["event"] = "SPELL_CAST_START",
["source"] = "分离助理",
["npcID"] = 167731,
},
[437417] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[450196] = {
["event"] = "SPELL_CAST_START",
["source"] = "暴怒的抽鼻者",
["npcID"] = 229814,
},
[30633] = {
["source"] = "晶化保卫者",
["event"] = "SPELL_CAST_START",
["npcID"] = 26792,
},
[447141] = {
["source"] = "改造的载货机器人",
["event"] = "SPELL_CAST_START",
["npcID"] = 222923,
},
[385383] = {
["event"] = "SPELL_CAST_START",
["source"] = "铁怒狱卒",
["npcID"] = 232893,
},
[59395] = {
["source"] = "稻草人守卫者",
["event"] = "SPELL_CAST_START",
["npcID"] = 15195,
},
[53318] = {
["source"] = "阿努巴尔碾压者",
["event"] = "SPELL_CAST_START",
["npcID"] = 28922,
},
[197880] = {
["source"] = "骨语符文斧兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 93066,
},
[441513] = {
["source"] = "亡瓣之花",
["event"] = "SPELL_CAST_START",
["npcID"] = 206184,
},
[327393] = {
["event"] = "SPELL_CAST_START",
["source"] = "佐尔拉姆斯通灵师",
["npcID"] = 163618,
},
[471573] = {
["event"] = "SPELL_CAST_START",
["source"] = "驯犬者格雷布玛尔",
["npcID"] = 232258,
},
[324323] = {
["event"] = "SPELL_CAST_START",
["source"] = "骷髅劫掠者",
["npcID"] = 165919,
},
[439467] = {
["source"] = "好好先生",
["event"] = "SPELL_CAST_START",
["npcID"] = 219588,
},
[239500] = {
["source"] = "暗焰小鬼",
["event"] = "SPELL_CAST_START",
["npcID"] = 117019,
},
[270590] = {
["encounterName"] = "维克戈斯",
["source"] = "攻城恐魔",
["encounterID"] = 2100,
["event"] = "SPELL_CAST_START",
["npcID"] = 137625,
},
[8364] = {
["event"] = "SPELL_CAST_START",
["source"] = "骷髅守护者",
["npcID"] = 10390,
},
[466079] = {
["source"] = "幽灵血牙",
["event"] = "SPELL_CAST_START",
["npcID"] = 231061,
},
[418292] = {
["event"] = "SPELL_CAST_START",
["source"] = "宝藏怨灵",
["npcID"] = 208728,
},
[340189] = {
["source"] = "纱雾龙母",
["event"] = "SPELL_CAST_START",
["npcID"] = 173655,
},
[436910] = {
["source"] = "皇家纺织者",
["event"] = "SPELL_CAST_START",
["npcID"] = 222881,
},
[239927] = {
["source"] = "佐塔顿",
["event"] = "SPELL_CAST_START",
["npcID"] = 117648,
},
[284409] = {
["event"] = "SPELL_CAST_START",
["source"] = "审判官德莱雷丝",
["npcID"] = 144567,
},
[455812] = {
["event"] = "SPELL_CAST_START",
["source"] = "癫狂的卷心菜拍击者",
["npcID"] = 206514,
},
[447146] = {
["encounterName"] = "凝结聚合体",
["source"] = "凝结聚合体",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[41372] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊利达雷执政官",
["npcID"] = 23400,
},
[32908] = {
["source"] = "掠龙裂心者",
["event"] = "SPELL_CAST_START",
["npcID"] = 24071,
},
[185512] = {
["event"] = "SPELL_CAST_START",
["source"] = "陷惧末日领主",
["npcID"] = 231130,
},
[451241] = {
["source"] = "暮光烈焰粉碎者",
["event"] = "SPELL_CAST_START",
["npcID"] = 224240,
},
[441518] = {
["source"] = "失败批次",
["event"] = "SPELL_CAST_START",
["npcID"] = 220368,
},
[458406] = {
["event"] = "SPELL_CAST_START",
["source"] = "德罗格汉",
["npcID"] = 221316,
},
[445577] = {
["event"] = "SPELL_CAST_START",
["source"] = "喧翼猎人恩基拉赫",
["npcID"] = 222038,
},
[401148] = {
["event"] = "SPELL_CAST_START",
["source"] = "亚什蜂群",
["npcID"] = 226487,
},
[461989] = {
["encounterName"] = "凝结聚合体",
["source"] = "凝结聚合体",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[201830] = {
["source"] = "黑暗骑士",
["event"] = "SPELL_CAST_START",
["npcID"] = 99875,
},
[448458] = {
["encounterName"] = "安苏雷克女王",
["source"] = "虔诚的敬奉者",
["npcID"] = 223318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[404409] = {
["event"] = "SPELL_CAST_START",
["source"] = "阿努比萨斯征服者",
["npcID"] = 226757,
},
[469099] = {
["event"] = "SPELL_CAST_START",
["source"] = "审讯官格斯塔恩",
["npcID"] = 232243,
},
[464417] = {
["encounterName"] = "怒炉将军",
["source"] = "暗炉持火者",
["encounterID"] = 3045,
["event"] = "SPELL_CAST_START",
["npcID"] = 231554,
},
[465368] = {
["source"] = "无疤者奥斯里安",
["event"] = "SPELL_CAST_START",
["npcID"] = 231158,
},
[408509] = {
["event"] = "SPELL_CAST_START",
["source"] = "烈焰行者",
["npcID"] = 233203,
},
[449709] = {
["event"] = "SPELL_CAST_START",
["source"] = "鳄鱼人唤泉者",
["npcID"] = 218650,
},
[41229] = {
["event"] = "SPELL_CAST_START",
["source"] = "噬骨血先知",
["npcID"] = 23237,
},
[82797] = {
["source"] = "疯狂的疱爪土狼",
["event"] = "SPELL_CAST_START",
["npcID"] = 5427,
},
[443929] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡赫提哨兵",
["npcID"] = 218315,
},
[466086] = {
["source"] = "铁怒医师",
["event"] = "SPELL_CAST_START",
["npcID"] = 232246,
},
[437700] = {
["encounterName"] = "大捻接师艾佐",
["source"] = "大捻接师艾佐",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[457334] = {
["event"] = "SPELL_CAST_START",
["source"] = "织魂者",
["npcID"] = 230685,
},
[81147] = {
["source"] = "堕落的峭壁巨人",
["event"] = "SPELL_CAST_START",
["npcID"] = 40972,
},
[451758] = {
["event"] = "SPELL_CAST_START",
["source"] = "蜃鱼人塑影者",
["npcID"] = 215653,
},
[463471] = {
["encounterName"] = "伊森迪奥斯",
["source"] = "烈焰喷涌",
["npcID"] = 230079,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3043,
},
[186553] = {
["source"] = "海拉加尔狂战士",
["event"] = "SPELL_CAST_START",
["npcID"] = 116888,
},
[453294] = {
["source"] = "惊魂聚合体",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[40508] = {
["encounterName"] = "古尔图格·血沸",
["source"] = "古尔图格·血沸",
["npcID"] = 22948,
["event"] = "SPELL_CAST_START",
["encounterID"] = 605,
},
[79868] = {
["source"] = "碧蓝缚鳞者",
["event"] = "SPELL_CAST_START",
["npcID"] = 26735,
},
[37967] = {
["event"] = "SPELL_CAST_START",
["source"] = "幽暗沼泽蹒跚者",
["npcID"] = 17871,
},
[6358] = {
["event"] = "SPELL_CAST_START",
["source"] = "阿丽厄丽莎",
["npcID"] = 1863,
},
[442998] = {
["source"] = "苏雷吉女牧师",
["event"] = "SPELL_CAST_START",
["npcID"] = 222688,
},
[424420] = {
["source"] = "泰纳·杜尔玛",
["event"] = "SPELL_CAST_START",
["npcID"] = 211289,
},
[454831] = {
["event"] = "SPELL_CAST_START",
["source"] = "腐蚀剃天者",
["npcID"] = 225817,
},
[406215] = {
["event"] = "SPELL_CAST_START",
["source"] = "亚什工蝎",
["npcID"] = 230419,
},
[41467] = {
["encounterName"] = "伊利达雷议会",
["source"] = "击碎者加西奥斯",
["npcID"] = 22949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[462508] = {
["event"] = "SPELL_CAST_START",
["source"] = "虚空大使",
["npcID"] = 229537,
},
[81020] = {
["source"] = "黑鳞强夺者",
["event"] = "SPELL_CAST_START",
["npcID"] = 45984,
},
[324447] = {
["source"] = "蜃鱼人矛渔夫",
["event"] = "SPELL_CAST_START",
["npcID"] = 214338,
},
[54983] = {
["source"] = "始祖幼龙训练者",
["event"] = "SPELL_CAST_START",
["npcID"] = 24082,
},
[427710] = {
["event"] = "SPELL_CAST_START",
["source"] = "孢点",
["npcID"] = 213434,
},
[270603] = {
["source"] = "纳基丝女士",
["event"] = "SPELL_CAST_START",
["npcID"] = 152966,
},
[46987] = {
["source"] = "巴琳达·斯通赫尔斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 11949,
},
[292029] = {
["event"] = "SPELL_CAST_START",
["source"] = "预言者塔兹托",
["npcID"] = 150739,
},
[59397] = {
["encounterName"] = "凯雷塞斯王子",
["source"] = "维库骷髅",
["encounterID"] = 2026,
["event"] = "SPELL_CAST_START",
["npcID"] = 23970,
},
[442994] = {
["encounterName"] = "流丝之庭",
["source"] = "阿努巴拉什",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[446483] = {
["event"] = "SPELL_CAST_START",
["source"] = "踏蟾者",
["npcID"] = 207803,
},
[468580] = {
["source"] = "凿刻的战争傀儡",
["event"] = "SPELL_CAST_START",
["npcID"] = 232268,
},
[142238] = {
["event"] = "SPELL_CAST_START",
["source"] = "大型幻影秘法师",
["npcID"] = 71069,
},
[321780] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "佐尔拉姆斯通灵师",
["npcID"] = 163618,
},
[438971] = {
["encounterName"] = "本克·鸣蜂",
["source"] = "贪婪的燧烬蜂",
["encounterID"] = 2931,
["event"] = "SPELL_CAST_START",
["npcID"] = 218016,
},
[12739] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥里克斯·瑞文戴尔领主",
["npcID"] = 45412,
},
[450100] = {
["encounterName"] = "埃鲁达克",
["source"] = "埃鲁达克",
["encounterID"] = 1049,
["event"] = "SPELL_CAST_START",
["npcID"] = 40484,
},
[257862] = {
["encounterName"] = "哈达尔·黑渊",
["source"] = "哈达尔·黑渊",
["encounterID"] = 2099,
["event"] = "SPELL_CAST_START",
["npcID"] = 128651,
},
[257882] = {
["encounterName"] = "哈达尔·黑渊",
["source"] = "哈达尔·黑渊",
["encounterID"] = 2099,
["event"] = "SPELL_CAST_START",
["npcID"] = 128651,
},
[186476] = {
["source"] = "海拉加尔狂战士",
["event"] = "SPELL_CAST_START",
["npcID"] = 111332,
},
[437620] = {
["encounterName"] = "节点女亲王凯威扎",
["source"] = "节点女亲王凯威扎",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[328687] = {
["event"] = "SPELL_CAST_START",
["source"] = "脆骨弩手",
["npcID"] = 166079,
},
[438973] = {
["event"] = "SPELL_CAST_START",
["source"] = "深渊领主",
["npcID"] = 228574,
},
[466096] = {
["source"] = "铁怒医师",
["event"] = "SPELL_CAST_START",
["npcID"] = 232246,
},
[445910] = {
["event"] = "SPELL_CAST_START",
["source"] = "孢点",
["npcID"] = 213434,
},
[462936] = {
["source"] = "医疗机器人",
["event"] = "SPELL_CAST_START",
["npcID"] = 229769,
},
[423536] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[9532] = {
["source"] = "雪盲唤风者",
["event"] = "SPELL_CAST_START",
["npcID"] = 11675,
},
[80382] = {
["event"] = "SPELL_CAST_START",
["source"] = "神圣遗物学会挖掘者",
["npcID"] = 38997,
},
[448698] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "暴怒的深岩剥石者",
["npcID"] = 218657,
},
[389247] = {
["source"] = "黑爪复仇者",
["event"] = "SPELL_CAST_START",
["npcID"] = 187187,
},
[331274] = {
["event"] = "SPELL_CAST_START",
["source"] = "活化粘液",
["npcID"] = 218519,
},
[464563] = {
["event"] = "SPELL_CAST_START",
["source"] = "克尔苏加德",
["npcID"] = 228841,
},
[299268] = {
["event"] = "SPELL_CAST_START",
["source"] = "审判官德莱雷丝",
["npcID"] = 144567,
},
[438976] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[459850] = {
["source"] = "尊贵牧师",
["event"] = "SPELL_CAST_START",
["npcID"] = 222368,
},
[458423] = {
["source"] = "考尔达克",
["event"] = "SPELL_CAST_START",
["npcID"] = 221084,
},
[59386] = {
["encounterName"] = "凯雷塞斯王子",
["source"] = "维库骷髅",
["encounterID"] = 2026,
["event"] = "SPELL_CAST_START",
["npcID"] = 23970,
},
[46988] = {
["source"] = "巴琳达·斯通赫尔斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 11949,
},
[447950] = {
["encounterName"] = "安苏雷克女王",
["source"] = "扬升虚空语者",
["npcID"] = 223150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[449522] = {
["event"] = "SPELL_CAST_START",
["source"] = "聚生尖啸者",
["npcID"] = 220087,
},
[391385] = {
["event"] = "SPELL_CAST_START",
["source"] = "吞噬烈焰",
["npcID"] = 207413,
},
[461880] = {
["encounterName"] = "凝结聚合体",
["source"] = "凝结聚合体",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[439814] = {
["encounterName"] = "安苏雷克女王",
["source"] = "安苏雷克女王",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[423626] = {
["encounterName"] = "无头骑士",
["source"] = "无头骑士",
["npcID"] = 207438,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2725,
},
[444608] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[451261] = {
["source"] = "暮光唤地者",
["event"] = "SPELL_CAST_START",
["npcID"] = 224219,
},
[431303] = {
["source"] = "夜幕影法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 213892,
},
[437956] = {
["source"] = "风险投资公司纵火狂",
["event"] = "SPELL_CAST_START",
["npcID"] = 218671,
},
[444609] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[456788] = {
["isChanneled"] = true,
["source"] = "漾水王",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220275,
},
[466103] = {
["source"] = "铁怒龙骑士",
["event"] = "SPELL_CAST_START",
["npcID"] = 232245,
},
[401361] = {
["source"] = "神秘结界",
["event"] = "SPELL_CAST_START",
["npcID"] = 210398,
},
[272662] = {
["source"] = "铁潮袭击者",
["event"] = "SPELL_CAST_START",
["npcID"] = 129369,
},
[16587] = {
["event"] = "SPELL_CAST_START",
["source"] = "邪恶导师",
["npcID"] = 8548,
},
[423200] = {
["encounterName"] = "斯卡莫拉克",
["source"] = "斯卡莫拉克",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[442052] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉铁纹士",
["npcID"] = 220551,
},
[334476] = {
["encounterName"] = "外科医生缝肉",
["source"] = "外科医生缝肉",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[445123] = {
["encounterName"] = "噬灭者乌格拉克斯",
["source"] = "噬灭者乌格拉克斯",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[22127] = {
["source"] = "诺达希尔德鲁伊",
["event"] = "SPELL_CAST_START",
["npcID"] = 38952,
},
[424891] = {
["event"] = "SPELL_CAST_START",
["source"] = "真菌护矛者",
["npcID"] = 207456,
},
[257169] = {
["source"] = "水鼠帮歼灭者",
["event"] = "SPELL_CAST_START",
["npcID"] = 135245,
},
[75068] = {
["source"] = "黑鳞奴隶猎人",
["event"] = "SPELL_CAST_START",
["npcID"] = 42043,
},
[435401] = {
["encounterName"] = "苏雷吉队长席克兰",
["source"] = "席克兰",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[458430] = {
["event"] = "SPELL_CAST_START",
["source"] = "德罗格汉",
["npcID"] = 221316,
},
[404757] = {
["source"] = "黑曜石毁灭者",
["event"] = "SPELL_CAST_START",
["npcID"] = 226505,
},
[431612] = {
["event"] = "SPELL_CAST_START",
["source"] = "萨兹凯尔",
["npcID"] = 221166,
},
[451778] = {
["event"] = "SPELL_CAST_START",
["source"] = "死板的机语者",
["npcID"] = 212878,
},
[22415] = {
["source"] = "荒野变形者奥兹恩",
["event"] = "SPELL_CAST_START",
["npcID"] = 11492,
},
[257170] = {
["source"] = "铁潮袭击者",
["event"] = "SPELL_CAST_START",
["npcID"] = 129369,
},
[432520] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕暗法师",
["npcID"] = 213893,
},
[435403] = {
["encounterName"] = "苏雷吉队长席克兰",
["source"] = "席克兰",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[290296] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "赛拉锐恩·银刃",
["npcID"] = 144541,
},
[450756] = {
["source"] = "夜幕司令官",
["event"] = "SPELL_CAST_START",
["npcID"] = 214762,
},
[469030] = {
["event"] = "SPELL_CAST_START",
["source"] = "审讯官格斯塔恩",
["npcID"] = 232243,
},
[470203] = {
["encounterName"] = "弗莱拉斯大使",
["source"] = "弗莱拉斯大使",
["npcID"] = 226302,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3047,
},
["358320"] = {
["npcID"] = 180162,
},
[465086] = {
["encounterName"] = "达格兰·索瑞森大帝",
["source"] = "茉艾拉·铜须",
["npcID"] = 226314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[41360] = {
["event"] = "SPELL_CAST_START",
["source"] = "巡逻的奥术斥候",
["npcID"] = 23394,
},
[449734] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[441289] = {
["encounterName"] = "凝结聚合体",
["source"] = "凝结聚合体",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[470587] = {
["source"] = "蜃鱼人枯败者",
["event"] = "SPELL_CAST_START",
["npcID"] = 214251,
},
[5208] = {
["event"] = "SPELL_CAST_START",
["source"] = "绿皮船长",
["npcID"] = 647,
},
[394466] = {
["source"] = "始生冰雹",
["event"] = "SPELL_CAST_START",
["npcID"] = 189039,
},
[440218] = {
["encounterName"] = "女王之牙",
["source"] = "维克斯",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[456900] = {
["encounterName"] = "铸炉之主索朗格斯",
["source"] = "铸炉之主索朗格斯",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[469694] = {
["source"] = "恐怖的奴隶主",
["event"] = "SPELL_CAST_START",
["npcID"] = 232444,
},
[465212] = {
["source"] = "提克迪奥斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 231059,
},
[243789] = {
["source"] = "艾索雷苟斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 121820,
},
[465089] = {
["event"] = "SPELL_CAST_START",
["source"] = "黑铁皇家守卫",
["npcID"] = 232465,
},
[326405] = {
["isChanneled"] = true,
["source"] = "末日行者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167749,
},
[440372] = {
["source"] = "幽暗爬行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 214962,
},
[343470] = {
["event"] = "SPELL_CAST_START",
["source"] = "骷髅劫掠者",
["npcID"] = 165919,
},
[456902] = {
["encounterName"] = "铸炉之主索朗格斯",
["source"] = "铸炉之主索朗格斯",
["encounterID"] = 1050,
["event"] = "SPELL_CAST_START",
["npcID"] = 40177,
},
[257288] = {
["encounterName"] = "“屠夫”血钩",
["source"] = "铁潮斩杀者",
["encounterID"] = 2098,
["event"] = "SPELL_CAST_START",
["npcID"] = 129879,
},
[451119] = {
["event"] = "SPELL_CAST_START",
["source"] = "坚不可摧的伊克斯雷腾",
["npcID"] = 211262,
},
[180327] = {
["source"] = "炽焰魔",
["event"] = "SPELL_CAST_START",
["npcID"] = 109021,
},
[465091] = {
["event"] = "SPELL_CAST_START",
["source"] = "暮光之锤特使",
["npcID"] = 232463,
},
[205231] = {
["source"] = "黑眼",
["event"] = "SPELL_CAST_START",
["npcID"] = 103673,
},
[443598] = {
["encounterName"] = "流丝之庭",
["source"] = "阿努巴拉什",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[69128] = {
["isChanneled"] = true,
["source"] = "护魂复生者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36516,
},
[447271] = {
["source"] = "魁梧的战甲尉",
["event"] = "SPELL_CAST_START",
["npcID"] = 221103,
},
[441381] = {
["encounterName"] = "女王之牙",
["source"] = "恩克斯",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216648,
},
[185854] = {
["event"] = "SPELL_CAST_START",
["source"] = "梦魇骑士",
["npcID"] = 92792,
},
[381535] = {
["event"] = "SPELL_CAST_START",
["source"] = "暴怒的元素",
["npcID"] = 215232,
},
[456905] = {
["event"] = "SPELL_CAST_START",
["source"] = "被惊扰的吞壤者",
["npcID"] = 218393,
},
[185409] = {
["event"] = "SPELL_CAST_START",
["source"] = "峭壁山羊",
["npcID"] = 91824,
},
[41169] = {
["source"] = "伊利达雷觅心者",
["event"] = "SPELL_CAST_START",
["npcID"] = 23339,
},
[463408] = {
["encounterName"] = "研究员文凯克斯",
["source"] = "研究员文凯克斯",
["encounterID"] = 2991,
["event"] = "SPELL_CAST_START",
["npcID"] = 219856,
},
[336499] = {
["encounterName"] = "唤雾者",
["source"] = "唤雾者",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[469700] = {
["source"] = "恐怖的奴隶主",
["event"] = "SPELL_CAST_START",
["npcID"] = 232444,
},
[418119] = {
["event"] = "SPELL_CAST_START",
["source"] = "其拉角斗士",
["npcID"] = 226503,
},
[388844] = {
["source"] = "腐臭橡树",
["event"] = "SPELL_CAST_START",
["npcID"] = 231083,
},
[64152] = {
["encounterName"] = "尤格-萨隆",
["source"] = "腐蚀触须",
["npcID"] = 33985,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[448030] = {
["source"] = "敏捷的追击者",
["event"] = "SPELL_CAST_START",
["npcID"] = 223181,
},
[414944] = {
["event"] = "SPELL_CAST_START",
["source"] = "真菌护矛者",
["npcID"] = 207456,
},
[201651] = {
["source"] = "被诅咒的守卫",
["event"] = "SPELL_CAST_START",
["npcID"] = 103477,
},
[448057] = {
["encounterName"] = "埃鲁达克",
["source"] = "埃鲁达克",
["encounterID"] = 1049,
["event"] = "SPELL_CAST_START",
["npcID"] = 40484,
},
[414433] = {
["event"] = "SPELL_CAST_START",
["source"] = "陷惧末日领主",
["npcID"] = 231130,
},
[414945] = {
["event"] = "SPELL_CAST_START",
["source"] = "真菌人掷孢者",
["npcID"] = 218667,
},
[453683] = {
["source"] = "节点女亲王凯威扎",
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[217260] = {
["source"] = "积怨唤雷者",
["event"] = "SPELL_CAST_START",
["npcID"] = 88087,
},
[465609] = {
["source"] = "蕨皮食腐者",
["event"] = "SPELL_CAST_START",
["npcID"] = 230672,
},
[290411] = {
["event"] = "SPELL_CAST_START",
["source"] = "吉鲁玛·血裘",
["npcID"] = 144537,
},
[404207] = {
["event"] = "SPELL_CAST_START",
["source"] = "控火师罗格雷恩",
["npcID"] = 232571,
},
[9053] = {
["event"] = "SPELL_CAST_START",
["source"] = "迪菲亚巫师",
["npcID"] = 4418,
},
[447187] = {
["encounterName"] = "研究员文凯克斯",
["source"] = "研究员文凯克斯",
["encounterID"] = 2991,
["event"] = "SPELL_CAST_START",
["npcID"] = 219856,
},
[202420] = {
["source"] = "艾瑞达缚邪者",
["event"] = "SPELL_CAST_START",
["npcID"] = 116909,
},
[63789] = {
["source"] = "暮光炎术师",
["event"] = "SPELL_CAST_START",
["npcID"] = 33820,
},
[463052] = {
["source"] = "觉醒的方阵兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 229782,
},
[456748] = {
["source"] = "猩红织亡者",
["event"] = "SPELL_CAST_START",
["npcID"] = 222692,
},
[42740] = {
["encounterName"] = "凯雷塞斯王子",
["source"] = "掠龙符文法师",
["encounterID"] = 2026,
["event"] = "SPELL_CAST_START",
["npcID"] = 23960,
},
[290395] = {
["event"] = "SPELL_CAST_START",
["source"] = "吉鲁玛·血裘",
["npcID"] = 144537,
},
[465100] = {
["encounterName"] = "达格兰·索瑞森大帝",
["source"] = "拉格纳罗斯的影像",
["npcID"] = 231006,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3049,
},
[63722] = {
["source"] = "无面恐魔",
["event"] = "SPELL_CAST_START",
["npcID"] = 33772,
},
[394479] = {
["source"] = "始生冰雹",
["event"] = "SPELL_CAST_START",
["npcID"] = 189039,
},
[448213] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[284217] = {
["event"] = "SPELL_CAST_START",
["source"] = "雄鹿克星巴扎",
["npcID"] = 144565,
},
[53520] = {
["encounterName"] = "阿努巴拉克",
["source"] = "阿努巴拉克",
["encounterID"] = 1973,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29120,
},
[320788] = {
["encounterName"] = "缚霜者纳尔佐",
["source"] = "缚霜者纳尔佐",
["npcID"] = 162693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2390,
},
[323347] = {
["event"] = "SPELL_CAST_START",
["source"] = "佐尔拉姆斯守门人",
["npcID"] = 165137,
},
[452928] = {
["event"] = "SPELL_CAST_START",
["source"] = "巴纳扎尔",
["npcID"] = 10813,
},
[169414] = {
["source"] = "铁军战争法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 78670,
},
[41426] = {
["encounterName"] = "灵魂之匣",
["source"] = "欲望精华",
["encounterID"] = 606,
["event"] = "SPELL_CAST_START",
["npcID"] = 23419,
},
[15498] = {
["source"] = "勇猛的冰冷矿洞测量者",
["event"] = "SPELL_CAST_START",
["npcID"] = 13539,
},
[95826] = {
["source"] = "落锤卫士",
["event"] = "SPELL_CAST_START",
["npcID"] = 2621,
},
[324372] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "骸骨巨怪",
["npcID"] = 165197,
},
[395834] = {
["event"] = "SPELL_CAST_START",
["source"] = "铁怒狱卒",
["npcID"] = 232893,
},
[69131] = {
["source"] = "护魂复生者",
["event"] = "SPELL_CAST_START",
["npcID"] = 36516,
},
[284968] = {
["event"] = "SPELL_CAST_START",
["source"] = "冰淞使者卡兹莱克",
["npcID"] = 150747,
},
[462264] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "汲血者",
["npcID"] = 229399,
},
[192188] = {
["source"] = "岩肤守门者",
["event"] = "SPELL_CAST_START",
["npcID"] = 97320,
},
[285232] = {
["event"] = "SPELL_CAST_START",
["source"] = "玛丽丝·邪触",
["npcID"] = 154040,
},
[64145] = {
["encounterName"] = "尤格-萨隆",
["source"] = "重压触须",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33966,
},
[451288] = {
["encounterName"] = "血缚恐魔",
["source"] = "失落的观察者",
["npcID"] = 221667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[54290] = {
["encounterName"] = "哈多诺克斯",
["source"] = "阿努巴尔织网者",
["encounterID"] = 1972,
["event"] = "SPELL_CAST_START",
["npcID"] = 29335,
},
[52493] = {
["encounterName"] = "看门者克里克希尔",
["source"] = "看守者希尔希克",
["encounterID"] = 1971,
["event"] = "SPELL_CAST_START",
["npcID"] = 28731,
},
[442589] = {
["source"] = "风险投资公司蜂蜜收割者",
["event"] = "SPELL_CAST_START",
["npcID"] = 220946,
},
[295291] = {
["event"] = "SPELL_CAST_START",
["source"] = "埃兰迪雅·奥箭",
["npcID"] = 154034,
},
[455895] = {
["event"] = "SPELL_CAST_START",
["source"] = "吞咽者拉姆斯登",
["npcID"] = 10439,
},
[9613] = {
["event"] = "SPELL_CAST_START",
["source"] = "骷髅守护者",
["npcID"] = 10390,
},
[238648] = {
["source"] = "灾火地狱火",
["event"] = "SPELL_CAST_START",
["npcID"] = 121045,
},
[17235] = {
["event"] = "SPELL_CAST_START",
["source"] = "奈鲁布恩坎",
["npcID"] = 10437,
},
[64163] = {
["encounterName"] = "尤格-萨隆",
["source"] = "尤格-萨隆",
["npcID"] = 33288,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1143,
},
[59146] = {
["event"] = "SPELL_CAST_START",
["source"] = "希望破坏者威利",
["npcID"] = 10997,
},
[325163] = {
["source"] = "纱雾防御者",
["event"] = "SPELL_CAST_START",
["npcID"] = 171772,
},
[295282] = {
["event"] = "SPELL_CAST_START",
["source"] = "埃兰迪雅·奥箭",
["npcID"] = 154034,
},
[431333] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕暗法师",
["npcID"] = 213893,
},
[468691] = {
["source"] = "厄炉机械师",
["event"] = "SPELL_CAST_START",
["npcID"] = 232266,
},
[42730] = {
["encounterName"] = "掠夺者因格瓦尔",
["source"] = "掠夺者因格瓦尔",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[437019] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡赫提先锋",
["npcID"] = 218316,
},
[327240] = {
["event"] = "SPELL_CAST_START",
["source"] = "忠诚的造物",
["npcID"] = 165911,
},
[417517] = {
["event"] = "SPELL_CAST_START",
["source"] = "驯犬者格雷布玛尔",
["npcID"] = 232258,
},
[33111] = {
["event"] = "SPELL_CAST_START",
["source"] = "影月术士",
["npcID"] = 17371,
},
[25807] = {
["encounterName"] = "安其拉三宝",
["source"] = "亚尔基公主",
["npcID"] = 15543,
["event"] = "SPELL_CAST_START",
["encounterID"] = 710,
},
[39674] = {
["source"] = "伊利达雷玷污者",
["event"] = "SPELL_CAST_START",
["npcID"] = 22853,
},
[445949] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉丝弓手",
["npcID"] = 222273,
},
[47696] = {
["source"] = "狂乱的法力涌动者",
["event"] = "SPELL_CAST_START",
["npcID"] = 26737,
},
[441627] = {
["source"] = "风味科学家",
["event"] = "SPELL_CAST_START",
["npcID"] = 214673,
},
[388349] = {
["event"] = "SPELL_CAST_START",
["source"] = "深水鳗",
["npcID"] = 215680,
},
[463248] = {
["source"] = "纱雾防御者",
["event"] = "SPELL_CAST_START",
["npcID"] = 171772,
},
[17843] = {
["source"] = "沙怒巫医",
["event"] = "SPELL_CAST_START",
["npcID"] = 5650,
},
[451295] = {
["isChanneled"] = true,
["source"] = "高耸虚居居民",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219983,
},
[463217] = {
["source"] = "纱雾守护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 166276,
},
[446844] = {
["event"] = "SPELL_CAST_START",
["source"] = "寄生蠕虫",
["npcID"] = 222786,
},
[440549] = {
["source"] = "蜃鱼人嚼骨者",
["event"] = "SPELL_CAST_START",
["npcID"] = 215040,
},
[235947] = {
["source"] = "蔑魔步兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 118807,
},
[166605] = {
["source"] = "怨叶刺客",
["event"] = "SPELL_CAST_START",
["npcID"] = 84656,
},
[446255] = {
["event"] = "SPELL_CAST_START",
["source"] = "凝结物质",
["npcID"] = 222459,
},
[445174] = {
["encounterName"] = "血缚恐魔",
["source"] = "被遗忘的末日使者",
["npcID"] = 221945,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[322450] = {
["encounterName"] = "特雷德奥瓦",
["source"] = "特雷德奥瓦",
["encounterID"] = 2393,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[401382] = {
["source"] = "过去的自己",
["event"] = "SPELL_CAST_START",
["npcID"] = 185800,
},
[452099] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "活化暗影",
["npcID"] = 224616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[440551] = {
["source"] = "蜃鱼人嚼骨者",
["event"] = "SPELL_CAST_START",
["npcID"] = 215040,
},
[453345] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗影具象",
["npcID"] = 211341,
},
[290097] = {
["event"] = "SPELL_CAST_START",
["source"] = "接骨者班迪",
["npcID"] = 150729,
},
[69069] = {
["source"] = "护魂骨法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 36564,
},
},
["performance_units"] = {
[191714] = 0,
[214441] = true,
[189707] = 0,
[220626] = true,
[176920] = 0,
[96247] = 0,
[196679] = 0,
[100529] = 0,
[208994] = 0,
[87329] = false,
[198594] = false,
[210231] = 0,
[84401] = 0,
[189363] = 0,
[196642] = 0,
[194999] = 0,
[219746] = 0,
[189706] = 0,
[197398] = 0,
[167999] = true,
[211306] = 0,
},
["InterruptableSpells"] = {
[272571] = true,
[451261] = true,
[324293] = true,
[220543] = true,
[429545] = true,
[116705] = true,
[428086] = true,
[450756] = true,
[47528] = true,
[449455] = true,
[454440] = true,
[429422] = true,
[320171] = true,
[434122] = true,
[147362] = true,
[57994] = true,
[6552] = true,
[447966] = true,
[420090] = true,
[10887] = true,
[31935] = true,
[132409] = true,
[91807] = true,
[426283] = true,
[334748] = true,
[445207] = true,
[429110] = true,
[76369] = true,
[320462] = true,
[443430] = true,
[327130] = true,
[321828] = true,
[452162] = true,
[452099] = true,
[431303] = true,
[322274] = true,
[76711] = true,
[97547] = true,
[429812] = true,
[443433] = true,
[32747] = true,
[183752] = true,
[15615] = true,
[257063] = true,
[328406] = true,
[324914] = true,
[451114] = true,
[431309] = true,
[326046] = true,
[323057] = true,
[187707] = true,
[96231] = true,
[59734] = true,
[257732] = true,
[324776] = true,
[40823] = true,
[322938] = true,
[461904] = true,
[93985] = true,
[8092] = true,
[272581] = true,
[41197] = true,
[275826] = true,
[263165] = true,
[436679] = true,
[432520] = true,
[335143] = true,
[442536] = true,
[446086] = true,
[443427] = true,
[328667] = true,
[386071] = true,
[468940] = true,
[420330] = true,
[11972] = true,
[256957] = true,
[351338] = true,
[333602] = true,
[326319] = true,
[338353] = true,
[340544] = true,
[429109] = true,
[347008] = true,
[451871] = true,
[76583] = true,
[19647] = true,
[2139] = true,
[449734] = true,
[430097] = true,
[431333] = true,
[451113] = true,
[426240] = true,
[322767] = true,
[1766] = true,
[420320] = true,
},
["profiles"] = {
["Default"] = {
["use_ui_parent"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Execute Range"] = 1,
["Cast Bar Icon Config"] = 2,
["Attacking Specific Unit"] = 2,
["Hide Neutral Units"] = 1,
["Combo Points"] = 6,
["Target Color"] = 3,
["Aura Reorder"] = 3,
["Extra Border"] = 2,
},
["expansion_triggerwipe"] = {
[10] = true,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important by Color [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
398151,
377738,
378149,
},
["PlaterCore"] = 1,
["Name"] = "Aura - Buff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = false,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["NpcNames"] = {
},
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Effect After Cast [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = false,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["NpcNames"] = {
},
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
389446,
},
["PlaterCore"] = 1,
["Name"] = "Explosion Affix M+ [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Debuff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shining Green [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = false,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
388923,
376934,
384899,
373960,
374724,
385551,
259732,
373424,
373084,
87618,
255041,
428926,
76634,
200050,
197546,
198079,
199193,
266181,
253544,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ultra Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
"214840",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Health Markers [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
350554,
348513,
351779,
328180,
319898,
281420,
274383,
259092,
367521,
374544,
385039,
382474,
369823,
377500,
260879,
186269,
378818,
371875,
372225,
200658,
266036,
265407,
164965,
429176,
428526,
418200,
407124,
200630,
415437,
264050,
267824,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Small Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
["npcColor"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1729785312,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Revision"] = 574,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "nameplateSizeOffset",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Key"] = "skullScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["Enabled"] = true,
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
190381,
92538,
192464,
131009,
127315,
133361,
136330,
214117,
212483,
101008,
194745,
190426,
},
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Add - Important [P]",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Key"] = "timeleftToBlink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Timeleft to Blink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "blinkSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Key"] = "blinkMaxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Key"] = "timeLeftWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Key"] = "timeLeftCritical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Tag Number [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["NpcNames"] = {
},
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Special Ability [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["NpcNames"] = {
},
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heroic Leap [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["NpcNames"] = {
},
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Spark Color [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "sparkWithScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Spark Width Scale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkHeightScale",
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["NpcNames"] = {
},
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Stun [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = false,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
258672,
258777,
257756,
257784,
256405,
256589,
393793,
388046,
375079,
390290,
369811,
369703,
226287,
410999,
372561,
256882,
172578,
412063,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Circle AoE [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "rotationDuration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animStartDuration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = false,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["NpcNames"] = {
},
["SpellIds"] = {
392640,
397888,
209033,
385029,
374563,
377341,
369675,
369365,
369411,
278961,
202108,
88186,
255824,
252781,
250096,
200248,
197797,
264520,
418202,
201839,
412012,
411958,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Quick Flash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important Target [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetNameSize",
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetFrameWidth",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Name"] = "Frame Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1154,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Alert + Timer [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = false,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
376644,
386781,
384823,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
384353,
265376,
193941,
411002,
169445,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = false,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
350687,
392488,
257732,
256060,
257899,
384633,
374339,
395694,
391634,
372701,
369328,
265487,
413044,
183526,
88194,
87762,
413385,
411001,
378282,
384161,
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
253517,
377488,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Very Important [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["NpcNames"] = {
},
["SpellIds"] = {
373688,
391050,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shield Interrupt [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
},
["PlaterCore"] = 1,
["Name"] = "Cast - AoE Hit All [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
388886,
209676,
377912,
},
["PlaterCore"] = 1,
["Name"] = "Cast - On Going Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Key"] = "speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Key"] = "minAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1729785319,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = 610472,
["url"] = "",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["Revision"] = 84,
["Options"] = {
},
["NpcNames"] = {
},
["Enabled"] = true,
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
343470,
423228,
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Aura is Shield [P]",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Debuff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["NpcNames"] = {
},
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Simple Interrupt [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1729785313,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["Icon"] = 236209,
["url"] = "",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["Revision"] = 19,
["Options"] = {
},
["NpcNames"] = {
},
["Enabled"] = true,
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
372743,
372749,
384933,
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Aura While Casting [P]",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = false,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
350421,
352158,
349985,
329239,
328400,
384194,
392451,
392924,
397889,
209413,
207980,
257397,
257736,
382787,
374699,
377402,
369602,
369465,
369400,
381593,
265091,
265433,
382791,
376780,
225573,
278444,
164887,
168082,
76813,
227913,
265368,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Big Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ongoing Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Min Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "maxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1729785328,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["Icon"] = 135945,
["url"] = "",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["Revision"] = 187,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["NpcNames"] = {
"174773",
},
["Enabled"] = true,
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "M+ Spiteful",
["Desc"] = "Time to die Spiteful affix",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Cut [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["NpcNames"] = {
"164406",
"164407",
"162100",
"162099",
"162329",
"164558",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Unit - Show Energy [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Key"] = "fontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["NpcNames"] = {
"163520",
"163618",
"164506",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Auto Set Skull",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["NpcNames"] = {
"165560",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Fixate [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1729785308,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["Icon"] = "interface/addons/plater/media/duck_64",
["url"] = "",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["Revision"] = 112,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Scale",
},
},
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
["Enabled"] = true,
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Add - Non Elite Trash [P]",
["Desc"] = "",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["NpcNames"] = {
},
["SpellIds"] = {
377004,
381516,
196543,
199726,
200291,
268202,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Stop Casting [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end --compatibility\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        --[225976] = {secondCastBar = true, altCastId = \"Uber Strike\",  debuffTimer = 167385, name = GetSpellInfo(167385), spellIcon = 167385}, --tank dummy        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        config.text = npcInfo.name\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend",
["Time"] = 1729585139,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 234,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Countdown",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = true,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["NpcNames"] = {
},
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Voidzone [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
},
["PlaterCore"] = 1,
["Name"] = "Cast - AoE With Range [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
352833,
330403,
209495,
257426,
255952,
257870,
413147,
383107,
377559,
388060,
376170,
384524,
375351,
390111,
369791,
369573,
369563,
369335,
369061,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
382708,
375251,
375439,
372311,
373742,
372201,
374533,
377204,
201226,
204667,
198379,
200768,
253239,
250258,
255567,
194956,
427510,
426645,
412505,
412129,
419351,
401482,
404916,
200345,
200261,
198641,
265372,
271174,
264694,
264923,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
189299,
131402,
135052,
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Explode on Die [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
129758,
186696,
101075,
100818,
98081,
52019,
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Warning [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1729785312,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["url"] = "",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["Revision"] = 28,
["Options"] = {
},
["NpcNames"] = {
},
["Enabled"] = true,
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["SpellIds"] = {
438494,
335141,
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Aura - Is Cast Bar [P]",
["Desc"] = "Show a castbar for the aura duration.",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["NpcNames"] = {
},
["SpellIds"] = {
426662,
426663,
},
["PlaterCore"] = 1,
["Name"] = "Fixate by Unit Buff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --compat\n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        --[167385] = \"Uber Strike\", --tank dummy\n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    local auras = Plater.GetUnitAuras(unitFrame)\n    for id, aura in pairs(auras) do\n        local name, caster = aura.name, aura.sourceUnit\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n            break\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1729585422,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 279,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["NpcNames"] = {
"Illusionary Vulpin",
},
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Name"] = "Fixate On You [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
},
["aura2_x_offset"] = 0,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["Time"] = 1547392935,
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Color Automation [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["HooksTemp"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1729785337,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Enabled"] = false,
["Revision"] = 349,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Name"] = "Icon Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconSizeOffset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Key"] = "iconPadding",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Name"] = "Texture Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureWidth",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Key"] = "textureHeightMod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Texture Position",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "texturePosition",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Prio"] = 99,
["Name"] = "Cast Bar Icon Settings [P]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1729785339,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Enabled"] = false,
["Revision"] = 74,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["semver"] = "",
["HooksTemp"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Name"] = "Hide Neutral Units [Plater]",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1729785338,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Enabled"] = false,
["Revision"] = 85,
["Options"] = {
},
["Author"] = "Ahwa-Azralon",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["semver"] = "",
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["Name"] = "Execute Range [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1729785341,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 94,
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Prio"] = 99,
["Name"] = "Reorder Nameplate [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
},
["Time"] = 1729785338,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 60,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["semver"] = "",
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["Name"] = "Don't Have Aura [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1729785336,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Enabled"] = false,
["Revision"] = 364,
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Prio"] = 99,
["Name"] = "Attacking Specific Unit [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Time"] = 1729785338,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Enabled"] = false,
["Revision"] = 177,
["Options"] = {
},
["Author"] = "Tecno-Azralon",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["semver"] = "",
["HooksTemp"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Name"] = "Extra Border [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1729785337,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 285,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Prio"] = 99,
["Name"] = "Combo Points [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1729785336,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = false,
["Revision"] = 357,
["Options"] = {
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["Name"] = "Aura Reorder [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Time"] = 1729785340,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Enabled"] = false,
["Revision"] = 183,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Show how many raid members are targeting the unit",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["semver"] = "",
["HooksTemp"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Name"] = "Players Targeting a Target [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Time"] = 1552354619,
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Name"] = "Current Target Color [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["HooksTemp"] = {
},
},
},
["aura_x_offset"] = 0,
["saved_cvars_last_change"] = {
["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5334",
["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5351",
["nameplateShowSelf"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5370",
},
["resources_settings"] = {
["chr"] = {
["Player-840-038D4763"] = "ArcaneCharges",
["Player-840-05B9A20E"] = "Chi",
["Player-840-054724E3"] = "Runes",
["Player-840-0297816F"] = "ComboPoints",
["Player-840-0297167F"] = "SoulShards",
["Player-840-059BACB7"] = "Chi",
["Player-707-0682942A"] = "Essence",
["Player-707-0693663F"] = "Runes",
["Player-840-05B9A2BC"] = "Chi",
["Player-707-0681D240"] = "HolyPower",
["Player-840-059CE3A2"] = "ComboPoints",
},
},
["range_check_alpha_friendlies"] = 0.6499999761581421,
["npc_cache"] = {
[11490] = {
"瑟雷姆·刺蹄",
"厄运之槌",
"zhCN",
},
[639] = {
"艾德温·范克里夫",
"死亡矿井",
"zhCN",
},
[647] = {
"绿皮船长",
"死亡矿井",
"zhCN",
},
[1731] = {
"地精工匠",
"死亡矿井",
"zhCN",
},
[13022] = {
"抽笞者",
"厄运之槌",
"zhCN",
},
[1763] = {
"基尔尼格",
"死亡矿井",
"zhCN",
},
[13280] = {
"海多斯博恩",
"厄运之槌",
"zhCN",
},
[10997] = {
"希望破坏者威利",
"斯坦索姆",
"zhCN",
},
[13285] = {
"死亡鞭笞者",
"厄运之槌",
"zhCN",
},
[3450] = {
"迪菲亚鹦鹉",
"死亡矿井",
"zhCN",
},
[224070] = {
"未知目标",
"死亡矿井",
"zhCN",
},
[11142] = {
"亡灵邮差",
"斯坦索姆",
"zhCN",
},
[10381] = {
"被毁坏的死尸",
"斯坦索姆",
"zhCN",
},
[10382] = {
"被撕裂的死尸",
"斯坦索姆",
"zhCN",
},
[10383] = {
"破碎的死尸",
"斯坦索姆",
"zhCN",
},
[10384] = {
"鬼魂市民",
"斯坦索姆",
"zhCN",
},
[10385] = {
"幽灵市民",
"斯坦索姆",
"zhCN",
},
[10390] = {
"骷髅守护者",
"斯坦索姆",
"zhCN",
},
[10391] = {
"骷髅狂战士",
"斯坦索姆",
"zhCN",
},
[208198] = {
"女巫的工具人",
"血色修道院",
"zhCN",
},
[634] = {
"迪菲亚监工",
"死亡矿井",
"zhCN",
},
[11032] = {
"指挥官玛洛尔",
"斯坦索姆",
"zhCN",
},
[13197] = {
"魔鞭抽笞者",
"厄运之槌",
"zhCN",
},
[230799] = {
"燃烧之魂",
"黑石深渊",
"zhCN",
},
[230798] = {
"烈焰行者",
"黑石深渊",
"zhCN",
},
[11043] = {
"复生的僧侣",
"斯坦索姆",
"zhCN",
},
[33134] = {
"萨拉",
"奥杜尔",
"zhCN",
},
[233203] = {
"烈焰行者",
"黑石深渊",
"zhCN",
},
[207438] = {
"无头骑士",
"血色修道院",
"zhCN",
},
[643] = {
"斯尼德",
"死亡矿井",
"zhCN",
},
[14350] = {
"未知目标",
"厄运之槌",
"zhCN",
},
[10414] = {
"缝补憎恶",
"斯坦索姆",
"zhCN",
},
[13276] = {
"荒野小鬼",
"厄运之槌",
"zhCN",
},
[222866] = {
"迪菲亚哨兵",
"死亡矿井",
"zhCN",
},
[11054] = {
"复生的火枪手",
"斯坦索姆",
"zhCN",
},
[10418] = {
"复生的卫兵",
"斯坦索姆",
"zhCN",
},
[230807] = {
"传送锚点",
"黑石深渊",
"zhCN",
},
[10420] = {
"复生的新兵",
"斯坦索姆",
"zhCN",
},
[10421] = {
"复生的防御者",
"斯坦索姆",
"zhCN",
},
[10422] = {
"复生的法术师",
"斯坦索姆",
"zhCN",
},
[10423] = {
"复生的牧师",
"斯坦索姆",
"zhCN",
},
[10424] = {
"复生的豪侠",
"斯坦索姆",
"zhCN",
},
[10425] = {
"复生的战斗法师",
"斯坦索姆",
"zhCN",
},
[10426] = {
"复生的审查者",
"斯坦索姆",
"zhCN",
},
[10808] = {
"悲惨的提米",
"斯坦索姆",
"zhCN",
},
[636] = {
"迪菲亚恶棍",
"死亡矿井",
"zhCN",
},
[644] = {
"拉克佐",
"死亡矿井",
"zhCN",
},
[10811] = {
"档案管理员加尔福特",
"斯坦索姆",
"zhCN",
},
[10558] = {
"弗雷斯特恩",
"斯坦索姆",
"zhCN",
},
[10813] = {
"巴纳扎尔",
"斯坦索姆",
"zhCN",
},
[646] = {
"重拳先生",
"死亡矿井",
"zhCN",
},
[33985] = {
"腐蚀触须",
"奥杜尔",
"zhCN",
},
[1732] = {
"迪菲亚塑风师",
"死亡矿井",
"zhCN",
},
[11452] = {
"荒野游荡者",
"厄运之槌",
"zhCN",
},
[11453] = {
"荒野欺诈者",
"厄运之槌",
"zhCN",
},
[4418] = {
"迪菲亚巫师",
"死亡矿井",
"zhCN",
},
[208521] = {
"南瓜士兵",
"血色修道院",
"zhCN",
},
[11456] = {
"荒野暗影行者",
"厄运之槌",
"zhCN",
},
[11457] = {
"荒野唤魔者",
"厄运之槌",
"zhCN",
},
[11460] = {
"奥兹恩的爪牙",
"厄运之槌",
"zhCN",
},
[883] = {
"鹿",
"厄运之槌",
"zhCN",
},
[33136] = {
"尤格-萨隆的卫士",
"奥杜尔",
"zhCN",
},
[645] = {
"曲奇",
"死亡矿井",
"zhCN",
},
[11082] = {
"斯坦索姆信使",
"斯坦索姆",
"zhCN",
},
[226302] = {
"弗莱拉斯大使",
"黑石深渊",
"zhCN",
},
[657] = {
"迪菲亚海盗",
"死亡矿井",
"zhCN",
},
[11465] = {
"扭木践踏者",
"厄运之槌",
"zhCN",
},
[11461] = {
"扭木守护者",
"厄运之槌",
"zhCN",
},
[4417] = {
"迪菲亚工头",
"死亡矿井",
"zhCN",
},
[641] = {
"地精木匠",
"死亡矿井",
"zhCN",
},
[3947] = {
"地精造船师",
"死亡矿井",
"zhCN",
},
[4416] = {
"迪菲亚赤膊矿工",
"死亡矿井",
"zhCN",
},
[598] = {
"迪菲亚矿工",
"死亡矿井",
"zhCN",
},
[10411] = {
"纳克萨玛斯之眼",
"斯坦索姆",
"zhCN",
},
[10955] = {
"被召唤的水元素",
"斯坦索姆",
"zhCN",
},
[622] = {
"地精工程师",
"死亡矿井",
"zhCN",
},
[42975] = {
"疾病食尸鬼",
"斯坦索姆",
"zhCN",
},
[2520] = {
"遥控傀儡",
"死亡矿井",
"zhCN",
},
[33966] = {
"重压触须",
"奥杜尔",
"zhCN",
},
[10419] = {
"复生的魔术师",
"斯坦索姆",
"zhCN",
},
[11492] = {
"荒野变形者奥兹恩",
"厄运之槌",
"zhCN",
},
[642] = {
"斯尼德的伐木机",
"死亡矿井",
"zhCN",
},
[1729] = {
"迪菲亚招魂师",
"死亡矿井",
"zhCN",
},
[33288] = {
"尤格-萨隆",
"奥杜尔",
"zhCN",
},
[33983] = {
"缠绕触须",
"奥杜尔",
"zhCN",
},
[33988] = {
"不朽守护者",
"奥杜尔",
"zhCN",
},
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.350000023841858,
},
},
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Shining Green [P]"] = 3,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Heroic Leap [P]"] = 3,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Unit - Show Energy"] = 11,
["Explosion Affix M+"] = 14,
["Cast - Important Target [P]"] = 2,
["Cast - Very Important"] = 15,
["Cast - Alert + Timer [P]"] = 4,
["Fixate"] = 11,
["Cast - Shield Interrupt"] = 2,
["Cast - AoE Hit All [P]"] = 3,
["Cast - Debuff [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Aura is Shield [P]"] = 5,
["Add - Warning [P]"] = 5,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - On Going Cast [P]"] = 2,
["Cast - Heal Cut [P]"] = 3,
["Spiteful Affix"] = 3,
["Auto Set Skull"] = 11,
["Cast - Quick Flash"] = 2,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Stop Casting"] = 4,
["Countdown"] = 12,
["Cast - Voidzone [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Add - Explode on Die [P]"] = 1,
["Cast - Glowing [P]"] = 10,
["Cast - Castbar is Timer [P]"] = 2,
["Aura - Is Cast Bar [P]"] = 1,
["Fixate On You"] = 12,
},
["ui_parent_scale_tune"] = 1,
["patch_version"] = 38,
["ghost_auras"] = {
["auras"] = {
["WARRIOR"] = {
[5] = {
},
},
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
[5] = {
},
},
},
},
["saved_cvars"] = {
["nameplateShowFriends"] = "0",
["nameplateShowOnlyNames"] = "0",
["nameplateShowSelf"] = "0",
},
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["aura2_y_offset"] = 5,
["login_counter"] = 186,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["Name"] = "Cast - Alert + Timer [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["__TrashAt"] = 1729784303,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end --compatibility\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        --[225976] = {secondCastBar = true, altCastId = \"Uber Strike\",  debuffTimer = 167385, name = GetSpellInfo(167385), spellIcon = 167385}, --tank dummy        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        config.text = npcInfo.name\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend",
["Time"] = 1729585139,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 234,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
["Name"] = "Countdown",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend",
["__TrashAt"] = 1733070731,
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --compat\n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        --[167385] = \"Uber Strike\", --tank dummy\n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    local auras = Plater.GetUnitAuras(unitFrame)\n    for id, aura in pairs(auras) do\n        local name, caster = aura.name, aura.sourceUnit\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n            break\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1729585422,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 279,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["NpcNames"] = {
"Illusionary Vulpin",
},
["Name"] = "Fixate On You [Plater]",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["__TrashAt"] = 1733070731,
},
},
["number_region"] = "eastasia",
["first_run3"] = true,
["plate_config"] = {
["global_health_width"] = 112,
["global_health_height"] = 12,
},
["number_region_first_run"] = true,
["aura_y_offset"] = 5,
},
["Jundies Plater"] = {
["target_highlight"] = false,
["aura_breakline_space"] = 1,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    local color = \"gray\"\n    \n    function envTable.updateNameplateColor(unitFrame)\n        if not InCombatLockdown() then\n            return\n        end\n\n        -- Hardened Carapace stacks on Shattereshell Scarab\n        if unitFrame.namePlateNpcId == 218884 then\n            local auraInfo = C_UnitAuras.GetAuraDataBySpellName(unitId, C_Spell.GetSpellName(438706))\n            \n            if auraInfo and auraInfo.applications and auraInfo.applications <= 5 then\n                Plater.SetNameplateColor(unitFrame) -- omitting a color should reset it\n                return\n            end\n        end\n        \n        Plater.SetNameplateColor(unitFrame, color)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable) end",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable) end",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateNameplateColor(unitFrame)\nend",
["Time"] = 1729569602,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    local color = \"gray\"\n    \n    function envTable.updateNameplateColor(unitFrame)\n        if not InCombatLockdown() then\n            return\n        end\n\n        -- Hardened Carapace stacks on Shattereshell Scarab\n        if unitFrame.namePlateNpcId == 218884 then\n            local auraInfo = C_UnitAuras.GetAuraDataBySpellName(unitId, C_Spell.GetSpellName(438706))\n            \n            if auraInfo and auraInfo.applications and auraInfo.applications <= 5 then\n                Plater.SetNameplateColor(unitFrame) -- omitting a color should reset it\n                return\n            end\n        end\n        \n        Plater.SetNameplateColor(unitFrame, color)\n    end\nend",
["Icon"] = "524354",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable) end",
["Enabled"] = true,
["Revision"] = 580,
["semver"] = "",
["Temp_Initialization"] = "function (self, unitId, unitFrame, envTable) end",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateNameplateColor(unitFrame)\nend",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (self, unitId, unitFrame, envTable) end",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable) end",
["SpellIds"] = {
261265,
261266,
271590,
350857,
352016,
235308,
235089,
367573,
362020,
232156,
374779,
113309,
117665,
379256,
396734,
406730,
403049,
410631,
410654,
403284,
421013,
425794,
260923,
264027,
75683,
336499,
335141,
256957,
440177,
438706,
451026,
325697,
442611,
458199,
457877,
},
["Prio"] = 99,
["Name"] = "Invalidate Unit - Jundies",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n--The War Within\n\n--\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
["fontColor"] = {
1,
1,
1,
1,
},
["fontSize"] = 12,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["Time"] = 1729409412,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n--The War Within\n\n--\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
["Icon"] = 136048,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 587,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Show Energy - Jundies",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Show the energy amount above the nameplate.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["NpcNames"] = {
"171557",
"162060",
"168318",
"184140",
"182169",
"196482",
"186120",
"186116",
"189901",
"197025",
"190496",
"189813",
"190245",
"184972",
"184986",
"164558",
"186737",
"186616",
"186615",
"131383",
"133007",
"202375",
"201320",
"201579",
"189340",
"131817",
"209333",
"122967",
"206172",
"200927",
"208367",
"208363",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1726353056,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["Icon"] = 413591,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["Enabled"] = true,
["Revision"] = 365,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Author"] = "Viash-Thrall",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["SpellIds"] = {
292711,
278946,
212463,
284402,
284401,
2818,
703,
1943,
295425,
283668,
316220,
258179,
207690,
315341,
1822,
1079,
106830,
202347,
204213,
391191,
980,
172,
445468,
445465,
316099,
383346,
},
["Prio"] = 99,
["Name"] = "Pandemic Glow - Jundies",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Adds a configurable pixel border glow to the buff/debuff if the remaining duration is less than 30% of its total duration.",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
["useCastbarColor"] = false,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1729409351,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["Enabled"] = true,
["Revision"] = 1227,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
3636,
376171,
350687,
372735,
373017,
392488,
268030,
257784,
337943,
320822,
333292,
341840,
324987,
333478,
178072,
330438,
329423,
350287,
334928,
348428,
330532,
358980,
351073,
358026,
351603,
356023,
330513,
334076,
237946,
237952,
312262,
242733,
362628,
316443,
356031,
356011,
356001,
355642,
355644,
355782,
355057,
356133,
357260,
357284,
347015,
355139,
336451,
364240,
364241,
361923,
368063,
356407,
363024,
355584,
334664,
340300,
366288,
232120,
228554,
228009,
228025,
228019,
227977,
228278,
228280,
228567,
29339,
169341,
162415,
340037,
373513,
373618,
167232,
227646,
375606,
386549,
385568,
385393,
388211,
211464,
215433,
371983,
373405,
391599,
387627,
375653,
388392,
387862,
392457,
396812,
383823,
371624,
393309,
393296,
391268,
393429,
374623,
390548,
391019,
387615,
152818,
225100,
210261,
212784,
392486,
397889,
395859,
385331,
388804,
156718,
398206,
106856,
106864,
397394,
367500,
377488,
377612,
385574,
215204,
212773,
397382,
257426,
265540,
265542,
278961,
403978,
403671,
257397,
278755,
413044,
265511,
183528,
193803,
193585,
410870,
87779,
374045,
374699,
385029,
373897,
378282,
384161,
369675,
369465,
369365,
411302,
274400,
400296,
405433,
408805,
411994,
413607,
412922,
417481,
418200,
411300,
412378,
412233,
407124,
415304,
412012,
421029,
421031,
420525,
425816,
265368,
264390,
264407,
263959,
253583,
252781,
255041,
256849,
200630,
204243,
201399,
168082,
427459,
164965,
164887,
169839,
200345,
76813,
429176,
76820,
200248,
225562,
436841,
334748,
324293,
434802,
322938,
256957,
275826,
446700,
257169,
272571,
449455,
429109,
443430,
451871,
76711,
338353,
432967,
433841,
452162,
431309,
450756,
451097,
462508,
429428,
407120,
386024,
444743,
427609,
432959,
424420,
440687,
448248,
429545,
447950,
447411,
445021,
333623,
257732,
460092,
},
["Prio"] = 99,
["Name"] = "Important Casts - Jundies",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function()\nend",
["OnHideCode"] = "function()\nend",
["OptionsValues"] = {
["debuffed"] = 0.79999995231628,
["casting"] = 1.1999999284744,
["hide"] = true,
},
["Temp_OnShowCode"] = "function()\nend\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Time"] = 1726864248,
["url"] = "https://wago.io/8_ULM1VxI/7",
["Temp_ConstructorCode"] = "function()\nend",
["Icon"] = 298642,
["Temp_OnHideCode"] = "function()\nend",
["Enabled"] = false,
["Revision"] = 257,
["semver"] = "1.0.6",
["Temp_Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["Temp_UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Author"] = "Ququlcoatl-Blackmoore",
["Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["OnShowCode"] = "function()\nend\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Incorporeal - Jundies",
["PlaterCore"] = 1,
["version"] = 7,
["Desc"] = "conditionally scales the nameplate of Incorporeal Beings when not ccd",
["Options"] = {
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while debuffed",
["Min"] = 0,
["Key"] = "debuffed",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Debuffed Scale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while casting",
["Min"] = 0,
["Key"] = "casting",
["Value"] = 1.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Casting Scale",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "hide",
["Value"] = false,
["Name"] = "Hide Nameplate when ccd",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["NpcNames"] = {
"204560",
},
},
{
["ConstructorCode"] = "function (_, _, _, envTable, scriptTable)\n    \n    \n    --TWW Dungeons\n    \n    local araKara = {\n        [214840] = { 30 }, --Engorged Crawler\n    }\n    \n    local cityOfThreads = {\n        [219984] = { 50 }, --Xeph'itik\n    }\n    \n    local dawnbreaker = {\n        [211087] = { 50 }, --Speaker Shadowcrown\n        [213937] = { 60 }, --Rasha'nan\n    }\n    \n    local prioryOfTheSacredFlame = {\n        [207940] = { 50 }, --Prioress Murrpray\n    }\n    \n    local darkflameCleft = {\n        [210797] = { 44.5 }, --The Darkness\n    }\n    \n    --DF Dungeons\n    \n    local dawnOfTheInfinite = {\n        [207638] = { 80 }, -- Blight of Galakrond\n        [207639] = { 80 }, -- Blight of Galakrond\n        [198997] = { 80 }, -- Blight of Galakrond\n        [201792] = { 50 }, -- Ahnzon\n        [199000] = { 20 }, -- Deios\n        [198933] = { 90, 85 }, -- Iridikron\n    }\n    \n    local rubyLifePools = {\n        [190485] = { 50 }, -- Stormvein\n        [190484] = { 50 }, -- Kyrakka\n        [193435] = { 50 }, -- Kyrakka\n        [188252] = { 75, 45 }, -- Melidrussa Chillworn\n        [197697] = { 50 }, -- Flamegullet\n    }\n    \n    local azureVault = {\n        [186738] = { 75, 50, 25 }, -- Umbrelskul\n    }\n    \n    local brackenhideHollow = {\n        [186125] = { 15 }, -- Tricktotem\n        [186122] = { 15 }, -- Rira Hackclaw\n        [186124] = { 15 }, -- Gashtooth\n        [185534] = { 15 }, -- Bonebolt Hunter\n        [186206] = { 15 }, -- Cruel Bonecrusher\n        [185508] = { 15 }, -- Claw Fighter\n        [185528] = { 15 }, -- Trickclaw Mystic\n        [186121] = { 4 }, -- Decatriarch Wratheye\n        [186227] = { 20 }, -- Monstrous Decay\n    }\n    \n    local neltharus = {\n        [194816] = { 10 }, -- Forgewrought Monstrosity\n    }\n    \n    local hallsOfInfusion = {\n        [189719] = { 15 }, -- Watcher Irideus\n        [190407] = { 20 }, -- Aqua Rager\n        [189729] = { 60 }, -- Primal Tsunami\n    }\n    \n    local nokhudOffensive = {\n        [186151] = { 60 }, --Balakar Khan\n    }\n    \n    local uldaman = {\n        [184020] = { 40 }, -- Hulking Berserker\n        [184580] = { 10 }, -- Olaf\n        [184581] = { 10 }, -- Baelog\n        [184582] = { 10 }, -- Eric \"The Swift\"\n        [184125] = { 1 }, -- Chrono-Lord Deios\n    }\n    \n    --SL Dungeons\n    \n    local theaterOfPain = {\n        [164451] = { 40 }, -- Dessia the Decapitator\n        [164463] = { 40 }, -- Paceran the Virulent\n        [164461] = { 40 }, -- Sathel the Accursed\n        [165946] = { 50 }, -- Mordretha\n    }\n    \n    local mistsOfTirnaScithe = {\n        [164501] = { 70, 40, 10 }, -- Mistcaller\n        [164926] = { 50 }, --Drust Boughbreaker\n        [164804] = { 20 }, -- Droman Oulfarran\n        [164517] = { 70, 40 }, --Tred'ova\n    }\n    \n    local plaguefall = {\n        [164267] = { 66, 33 }, -- Magrave Stradama\n        [164967] = { 66, 33 }, -- Doctor ickus\n        [169861] = { 66, 33 }, -- Ickor Bileflesh\n    }\n    \n    local hallsOfAtonement = {\n        [164218] = { 70, 40 }, --Lord Chamberlain\n    }\n    \n    local sanguineDepths = {\n        [162099] = { 50 }, -- General Kaal Boss fight\n    }\n    \n    local spiresOfAscension = {\n        [162061] = { 70, 30 }, --Devos\n    }\n    \n    local necroticWake = {\n        [163121] = { 70 }, -- Stitched Vanguard\n    }\n    \n    local deOtherSide = {\n        [164558] = { 80, 60, 40, 20 }, -- Hakkar the Soulflayer\n    }\n    \n    local tazaveshGambit = {\n        [177269] = { 40 }, -- So'leah\n    }\n    \n    local tazaveshStreets = {\n        [175806] = { 66, 33 }, -- So'azmi\n    }\n    \n    --BFA Dungeons\n    \n    local freehold = {\n        [126983] = { 60, 30 }, -- Harlan Sweete - Freehold\n        [126832] = { 75 }, -- Skycap'n Kragg - Freehold\n        [129699] = { 90, 70, 50, 30 }, -- Ludwig von Tortollan - Freehold\n    }\n    \n    local waycrest = {\n        [131527] = { 30 }, -- Lord Waycrest\n    }\n    \n    local siegeOfBoralus = {\n        [129208] = { 66, 33 }, -- Dread Captain Lockwood\n    }\n    \n    local motherlode = {\n        [133345] = { 20 }, -- Feckless Assistant\n    }\n    \n    local junkyard = {\n        [150276] = { 50 }, -- Heavy Scrapbot\n        [152009] = { 30 }, -- Malfunctioning Scrapbots\n        [144298] = { 30 }, -- Defense Bot Mk III (Workshop)\n    }\n    \n    local workshop = {\n        [144298] = { 30 }, -- Defense Bot Mk III (casts a shield)\n    }\n    \n    --Legion Dungeons\n    \n    local karazhanUpper = {\n        [114790] = { 66, 33 }, -- Viz'aduum\n    }\n    \n    local karazhanLower = {\n        [114261] = { 50 }, -- Toe Knee\n        [114260] = { 50 }, -- Mrrgria\n        [114265] = { 50 }, -- Gang Ruffian\n        [114783] = { 50 }, -- Reformed Maiden\n        [114312] = { 60 }, -- Moroes\n    }\n    \n    local hallsOfValor = {\n        [96574] = { 30 }, -- Stormforged Sentinel\n        [95674] = { 60.5 }, -- Fenryr P1\n        [94960] = { 10.5 }, -- Hymdall\n        [95676] = { 80, 5 }, -- Odyn\n    }\n    \n    local courtOfStars = {\n        [104215] = { 25 }, -- Patrol Captain Gerdo\n    }\n    \n    local neltharionsLair = {\n        [91005] = { 20 }, -- Naraxas\n    }\n    \n    local blackRookHold = {\n        [98542] = { 50 }, -- Amalgam of Souls\n        [98965] = { 20 }, -- Kur'talos Ravencrest\n    }\n    \n    local darkheartThicket = {\n        [99192] = { 50 }, -- Shade of Xavius\n    }\n    \n    --WoD Dungeons\n    \n    local grimrailDepot = {\n        [81236] = { 50 }, -- Grimrail Technician\n        [79545] = { 60 }, -- Nitrogg Thundertower\n        [77803] = { 20 }, -- Railmaster Rocketspark\n    }\n    \n    local ironDocks = {\n        [81297] = { 50 }, -- Dreadfang -> Fleshrender Nok'gar\n    }\n    \n    local shadowmoonBurialGrounds = {\n        [76057] = { 20.5 }, -- Carrion Worm\n    }\n    \n    --MoP Dungeons\n    \n    local templeOfTheJadeSerpent = {\n        [59544] = { 50 }, --The Nodding Tiger\n        [56732] = { 70, 30 }, -- Liu Flameheart\n    }\n    \n    --Cata Dungeons\n    \n    local throneOfTheTides = {\n        [40586] = { 60, 30 }, -- Lady Naz'jar\n        [40825] = { 25 }, -- Erunak Stonespeaker\n    }\n    \n    local grimBatol = {\n        [224249] = { 50 }, --Twilight Lavabender\n        [40320] = { 50 }, --Valiona\n    }\n    \n    \n    --Raids \n    \n    local amirdrassil = {\n        [208445] = { 35 }, -- Larodar\n        [204931] = { 70 }, -- Fyrakk\n    }\n    \n    local aberrus = {\n        [201261] = { 80, 60, 40 }, -- Kazzara\n        [201773] = { 50 }, -- Moltannia (Eternal Blaze)\n        [201774] = { 50 }, -- Krozgoth (Essence of Shadow)\n        [201668] = { 60, 35 }, -- Neltharion\n        [200912] = { 50 }, -- Neldris, Experiment\n        [200913] = { 50 }, -- Thadrion, Experiment\n        [199659] = { 25 }, -- Warlord Kagni, Assault of the Zaqali\n        [201754] = { 65, 40 }, -- Sarkareth\n        [203230] = { 50 }, -- Dragonfire Golem, Zskarn\n    }\n    \n    local vault = {\n        [181378] = { 66, 33 }, -- Kurog Grimtotem\n        [194990] = { 50 }, -- Stormseeker Acolyte\n        [189492] = { 65 }, -- Raszageth\n    }\n    \n    local sepulcher = {\n        [181548] = { 40 }, -- Absolution: Prototype Pantheon\n        [181551] = { 40 }, -- Duty: Prototype Pantheon\n        [181546] = { 40 }, -- Renewal: Prototype Pantheon\n        [181549] = { 40 }, -- War: Prototype Pantheon\n        [183501] = { 75, 50 }, --Xymox\n        [180906] = { 78, 45 }, --Halondrus\n        [183671] = { 40 }, -- Monstrous Soul - Anduin\n        [185421] = { 15 }, -- The Jailer\n    }\n    \n    local sanctumOfDomination = {\n        [175730] = { 70, 40 }, -- Fatescribe Roh-Kalo\n        [176523] = { 70, 40 }, -- Painsmith\n        [175725] = { 66, 33 }, -- Eye of the Jailer\n        [176929] = { 60, 20 }, -- Remnant of Kel'Thuzad\n        [175732] = { 83, 50 }, -- Sylvanas Windrunner\n    }\n    \n    local nathria = {\n        [166969] = { 50 }, -- Council of Blood - Frieda\n        [166970] = { 50 }, -- Council of Blood - Stavros\n        [166971] = { 50 }, -- Council of Blood - Niklaus\n        [167406] = { 70.5, 37.5 }, -- Sire Denathrius\n        [173162] = { 66, 33 }, -- Lord Evershade\n    }\n    \n    local openWorld = {\n        [180013] = { 20 }, -- Escaped Wilderling, Shadowlands - Korthia\n        [179931] = { 80, 60 }, -- Relic Breaker krelva, Shadowlands - Korthia\n        [193532] = { 40 }, -- Bazual, The Dreaded Flame, Dragonflight\n    }\n    \n    local mageTower = {\n        [116410] = { 33 }, -- Karam Magespear\n    }\n    \n    envTable.lifePercent = {}\n    \n    local zones = {\n        araKara,\n        darkflameCleft,\n        prioryOfTheSacredFlame,\n        cityOfThreads,\n        dawnbreaker,\n        rubyLifePools,\n        azureVault,\n        brackenhideHollow,\n        neltharus,\n        hallsOfInfusion,\n        nokhudOffensive,\n        uldaman,\n        theaterOfPain,\n        mistsOfTirnaScithe,\n        plaguefall,\n        hallsOfAtonement,\n        sanguineDepths,\n        spiresOfAscension,\n        necroticWake,\n        deOtherSide,\n        tazaveshGambit,\n        tazaveshStreets,\n        freehold,\n        waycrest,\n        siegeOfBoralus,\n        motherlode,\n        junkyard,\n        workshop,\n        karazhanUpper,\n        karazhanLower,\n        hallsOfValor,\n        courtOfStars,\n        neltharionsLair,\n        blackRookHold,\n        darkheartThicket,\n        grimrailDepot,\n        ironDocks,\n        shadowmoonBurialGrounds,\n        templeOfTheJadeSerpent,\n        throneOfTheTides,\n        grimBatol,\n        amirdrassil,\n        aberrus,\n        vault,\n        sepulcher,\n        sanctumOfDomination,\n        nathria,\n        openWorld,\n        mageTower,\n        dawnOfTheInfinite,\n    }\n    \n    for i = 1, #zones do\n        local zone = zones[i]\n        \n        for id, thresholds in pairs(zone) do\n            envTable.lifePercent[id] = thresholds\n        end\n    end\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        \n        if not markersTable then\n            return\n        end\n        \n        local unitLifePercent = envTable._HealthPercent / 100\n        \n        for _, percent in ipairs(markersTable) do\n            percent = percent / 100\n            if unitLifePercent > percent then\n                if not unitFrame.healthMarker then\n                    envTable.CreateMarker(unitFrame)\n                end\n                \n                unitFrame.healthMarker:Show()\n                local width = unitFrame.healthBar:GetWidth()\n                unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width * percent, 0)\n                \n                local overlaySize = width * (unitLifePercent - percent)\n                unitFrame.healthOverlay:SetWidth(overlaySize)\n                unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                \n                unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                \n                unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                \n                return\n            end\n        end\n        \n        if unitFrame.healthMarker and unitFrame.healthMarker:IsShown() then\n            unitFrame.healthMarker:Hide()\n            unitFrame.healthOverlay:Hide()\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
["indicatorAlpha"] = 0.75,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1729409343,
["url"] = "",
["Temp_ConstructorCode"] = "function (_, _, _, envTable, scriptTable)\n    \n    \n    --TWW Dungeons\n    \n    local araKara = {\n        [214840] = { 25 },\n    }\n    \n    local cityOfThreads = {\n        [219984] = { 50 }, --Xeph'itik\n    }\n    \n    local dawnbreaker = {\n        [211087] = { 50 }, --Speaker Shadowcrown\n        [213937] = { 59.5 }, --Rasha'nan\n    }\n    \n    local prioryOfTheSacredFlame = {\n        [207940] = { 50 }, --Prioress Murrpray\n    }\n    \n    local darkflameCleft = {\n        [210797] = { 44.5 }, --The Darkness\n    }\n    \n    --DF Dungeons\n    \n    local dawnOfTheInfinite = {\n        [207638] = { 80 }, -- Blight of Galakrond\n        [207639] = { 80 }, -- Blight of Galakrond\n        [198997] = { 80 }, -- Blight of Galakrond\n        [201792] = { 50 }, -- Ahnzon\n        [199000] = { 20 }, -- Deios\n        [198933] = { 90, 85 }, -- Iridikron\n    }\n    \n    local rubyLifePools = {\n        [190485] = { 50 }, -- Stormvein\n        [190484] = { 50 }, -- Kyrakka\n        [193435] = { 50 }, -- Kyrakka\n        [188252] = { 75, 45 }, -- Melidrussa Chillworn\n        [197697] = { 50 }, -- Flamegullet\n    }\n    \n    local azureVault = {\n        [186738] = { 75, 50, 25 }, -- Umbrelskul\n    }\n    \n    local brackenhideHollow = {\n        [186125] = { 15 }, -- Tricktotem\n        [186122] = { 15 }, -- Rira Hackclaw\n        [186124] = { 15 }, -- Gashtooth\n        [185534] = { 15 }, -- Bonebolt Hunter\n        [186206] = { 15 }, -- Cruel Bonecrusher\n        [185508] = { 15 }, -- Claw Fighter\n        [185528] = { 15 }, -- Trickclaw Mystic\n        [186121] = { 4 }, -- Decatriarch Wratheye\n        [186227] = { 20 }, -- Monstrous Decay\n    }\n    \n    local neltharus = {\n        [194816] = { 10 }, -- Forgewrought Monstrosity\n    }\n    \n    local hallsOfInfusion = {\n        [189719] = { 15 }, -- Watcher Irideus\n        [190407] = { 20 }, -- Aqua Rager\n        [189729] = { 60 }, -- Primal Tsunami\n    }\n    \n    local nokhudOffensive = {\n        [186151] = { 60 }, --Balakar Khan\n    }\n    \n    local uldaman = {\n        [184020] = { 40 }, -- Hulking Berserker\n        [184580] = { 10 }, -- Olaf\n        [184581] = { 10 }, -- Baelog\n        [184582] = { 10 }, -- Eric \"The Swift\"\n        [184125] = { 1 }, -- Chrono-Lord Deios\n    }\n    \n    --SL Dungeons\n    \n    local theaterOfPain = {\n        [164451] = { 40 }, -- Dessia the Decapitator\n        [164463] = { 40 }, -- Paceran the Virulent\n        [164461] = { 40 }, -- Sathel the Accursed\n        [165946] = { 50 }, -- Mordretha\n    }\n    \n    local mistsOfTirnaScithe = {\n        [164501] = { 70, 40, 10 }, -- Mistcaller\n        [164926] = { 50 }, --Drust Boughbreaker\n        [164804] = { 20 }, -- Droman Oulfarran\n        [164517] = { 70, 40 }, --Tred'ova\n    }\n    \n    local plaguefall = {\n        [164267] = { 66, 33 }, -- Magrave Stradama\n        [164967] = { 66, 33 }, -- Doctor ickus\n        [169861] = { 66, 33 }, -- Ickor Bileflesh\n    }\n    \n    local hallsOfAtonement = {\n        [164218] = { 70, 40 }, --Lord Chamberlain\n    }\n    \n    local sanguineDepths = {\n        [162099] = { 50 }, -- General Kaal Boss fight\n    }\n    \n    local spiresOfAscension = {\n        [162061] = { 70, 30 }, --Devos\n    }\n    \n    local necroticWake = {\n        [163121] = { 70 }, -- Stitched Vanguard\n    }\n    \n    local deOtherSide = {\n        [164558] = { 80, 60, 40, 20 }, -- Hakkar the Soulflayer\n    }\n    \n    local tazaveshGambit = {\n        [177269] = { 40 }, -- So'leah\n    }\n    \n    local tazaveshStreets = {\n        [175806] = { 66, 33 }, -- So'azmi\n    }\n    \n    --BFA Dungeons\n    \n    local freehold = {\n        [126983] = { 60, 30 }, -- Harlan Sweete - Freehold\n        [126832] = { 75 }, -- Skycap'n Kragg - Freehold\n        [129699] = { 90, 70, 50, 30 }, -- Ludwig von Tortollan - Freehold\n    }\n    \n    local waycrest = {\n        [131527] = { 30 }, -- Lord Waycrest\n    }\n    \n    local siegeOfBoralus = {\n        [129208] = { 66, 33 }, -- Dread Captain Lockwood\n    }\n    \n    local motherlode = {\n        [133345] = { 20 }, -- Feckless Assistant\n    }\n    \n    local junkyard = {\n        [150276] = { 50 }, -- Heavy Scrapbot\n        [152009] = { 30 }, -- Malfunctioning Scrapbots\n        [144298] = { 30 }, -- Defense Bot Mk III (Workshop)\n    }\n    \n    local workshop = {\n        [144298] = { 30 }, -- Defense Bot Mk III (casts a shield)\n    }\n    \n    --Legion Dungeons\n    \n    local karazhanUpper = {\n        [114790] = { 66, 33 }, -- Viz'aduum\n    }\n    \n    local karazhanLower = {\n        [114261] = { 50 }, -- Toe Knee\n        [114260] = { 50 }, -- Mrrgria\n        [114265] = { 50 }, -- Gang Ruffian\n        [114783] = { 50 }, -- Reformed Maiden\n        [114312] = { 60 }, -- Moroes\n    }\n    \n    local hallsOfValor = {\n        [96574] = { 30 }, -- Stormforged Sentinel\n        [95674] = { 60.5 }, -- Fenryr P1\n        [94960] = { 10.5 }, -- Hymdall\n        [95676] = { 80, 5 }, -- Odyn\n    }\n    \n    local courtOfStars = {\n        [104215] = { 25 }, -- Patrol Captain Gerdo\n    }\n    \n    local neltharionsLair = {\n        [91005] = { 20 }, -- Naraxas\n    }\n    \n    local blackRookHold = {\n        [98542] = { 50 }, -- Amalgam of Souls\n        [98965] = { 20 }, -- Kur'talos Ravencrest\n    }\n    \n    local darkheartThicket = {\n        [99192] = { 50 }, -- Shade of Xavius\n    }\n    \n    --WoD Dungeons\n    \n    local grimrailDepot = {\n        [81236] = { 50 }, -- Grimrail Technician\n        [79545] = { 60 }, -- Nitrogg Thundertower\n        [77803] = { 20 }, -- Railmaster Rocketspark\n    }\n    \n    local ironDocks = {\n        [81297] = { 50 }, -- Dreadfang -> Fleshrender Nok'gar\n    }\n    \n    local shadowmoonBurialGrounds = {\n        [76057] = { 20.5 }, -- Carrion Worm\n    }\n    \n    --MoP Dungeons\n    \n    local templeOfTheJadeSerpent = {\n        [59544] = { 50 }, --The Nodding Tiger\n        [56732] = { 70, 30 }, -- Liu Flameheart\n    }\n    \n    --Cata Dungeons\n    \n    local throneOfTheTides = {\n        [40586] = { 60, 30 }, -- Lady Naz'jar\n        [40825] = { 25 }, -- Erunak Stonespeaker\n    }\n    \n    local grimBatol = {\n        [224249] = { 50 }, --Twilight Lavabender\n        [40320] = { 50 }, --Valiona\n    }\n    \n    \n    --Raids \n    \n    local amirdrassil = {\n        [208445] = { 35 }, -- Larodar\n        [204931] = { 70 }, -- Fyrakk\n    }\n    \n    local aberrus = {\n        [201261] = { 80, 60, 40 }, -- Kazzara\n        [201773] = { 50 }, -- Moltannia (Eternal Blaze)\n        [201774] = { 50 }, -- Krozgoth (Essence of Shadow)\n        [201668] = { 60, 35 }, -- Neltharion\n        [200912] = { 50 }, -- Neldris, Experiment\n        [200913] = { 50 }, -- Thadrion, Experiment\n        [199659] = { 25 }, -- Warlord Kagni, Assault of the Zaqali\n        [201754] = { 65, 40 }, -- Sarkareth\n        [203230] = { 50 }, -- Dragonfire Golem, Zskarn\n    }\n    \n    local vault = {\n        [181378] = { 66, 33 }, -- Kurog Grimtotem\n        [194990] = { 50 }, -- Stormseeker Acolyte\n        [189492] = { 65 }, -- Raszageth\n    }\n    \n    local sepulcher = {\n        [181548] = { 40 }, -- Absolution: Prototype Pantheon\n        [181551] = { 40 }, -- Duty: Prototype Pantheon\n        [181546] = { 40 }, -- Renewal: Prototype Pantheon\n        [181549] = { 40 }, -- War: Prototype Pantheon\n        [183501] = { 75, 50 }, --Xymox\n        [180906] = { 78, 45 }, --Halondrus\n        [183671] = { 40 }, -- Monstrous Soul - Anduin\n        [185421] = { 15 }, -- The Jailer\n    }\n    \n    local sanctumOfDomination = {\n        [175730] = { 70, 40 }, -- Fatescribe Roh-Kalo\n        [176523] = { 70, 40 }, -- Painsmith\n        [175725] = { 66, 33 }, -- Eye of the Jailer\n        [176929] = { 60, 20 }, -- Remnant of Kel'Thuzad\n        [175732] = { 83, 50 }, -- Sylvanas Windrunner\n    }\n    \n    local nathria = {\n        [166969] = { 50 }, -- Council of Blood - Frieda\n        [166970] = { 50 }, -- Council of Blood - Stavros\n        [166971] = { 50 }, -- Council of Blood - Niklaus\n        [167406] = { 70.5, 37.5 }, -- Sire Denathrius\n        [173162] = { 66, 33 }, -- Lord Evershade\n    }\n    \n    local openWorld = {\n        [180013] = { 20 }, -- Escaped Wilderling, Shadowlands - Korthia\n        [179931] = { 80, 60 }, -- Relic Breaker krelva, Shadowlands - Korthia\n        [193532] = { 40 }, -- Bazual, The Dreaded Flame, Dragonflight\n    }\n    \n    local mageTower = {\n        [116410] = { 33 }, -- Karam Magespear\n    }\n    \n    envTable.lifePercent = {}\n    \n    local zones = {\n        araKara,\n        darkflameCleft,\n        prioryOfTheSacredFlame,\n        cityOfThreads,\n        dawnbreaker,\n        rubyLifePools,\n        azureVault,\n        brackenhideHollow,\n        neltharus,\n        hallsOfInfusion,\n        nokhudOffensive,\n        uldaman,\n        theaterOfPain,\n        mistsOfTirnaScithe,\n        plaguefall,\n        hallsOfAtonement,\n        sanguineDepths,\n        spiresOfAscension,\n        necroticWake,\n        deOtherSide,\n        tazaveshGambit,\n        tazaveshStreets,\n        freehold,\n        waycrest,\n        siegeOfBoralus,\n        motherlode,\n        junkyard,\n        workshop,\n        karazhanUpper,\n        karazhanLower,\n        hallsOfValor,\n        courtOfStars,\n        neltharionsLair,\n        blackRookHold,\n        darkheartThicket,\n        grimrailDepot,\n        ironDocks,\n        shadowmoonBurialGrounds,\n        templeOfTheJadeSerpent,\n        throneOfTheTides,\n        grimBatol,\n        amirdrassil,\n        aberrus,\n        vault,\n        sepulcher,\n        sanctumOfDomination,\n        nathria,\n        openWorld,\n        mageTower,\n        dawnOfTheInfinite,\n    }\n    \n    for i = 1, #zones do\n        local zone = zones[i]\n        \n        for id, thresholds in pairs(zone) do\n            envTable.lifePercent[id] = thresholds\n        end\n    end\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        \n        if not markersTable then\n            return\n        end\n        \n        local unitLifePercent = envTable._HealthPercent / 100\n        \n        for _, percent in ipairs(markersTable) do\n            percent = percent / 100\n            if unitLifePercent > percent then\n                if not unitFrame.healthMarker then\n                    envTable.CreateMarker(unitFrame)\n                end\n                \n                unitFrame.healthMarker:Show()\n                local width = unitFrame.healthBar:GetWidth()\n                unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width * percent, 0)\n                \n                local overlaySize = width * (unitLifePercent - percent)\n                unitFrame.healthOverlay:SetWidth(overlaySize)\n                unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                \n                unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                \n                unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                \n                return\n            end\n        end\n        \n        if unitFrame.healthMarker and unitFrame.healthMarker:IsShown() then\n            unitFrame.healthMarker:Hide()\n            unitFrame.healthOverlay:Hide()\n        end\n    end\nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Enabled"] = true,
["Revision"] = 771,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Author"] = "Duracell",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Health Markers - Jundies",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["NpcNames"] = {
"81236",
"77803",
"150276",
"152009",
"175806",
"114790",
"81297",
"79545",
"177269",
"133345",
"164926",
"114265",
"114261",
"114783",
"180013",
"179931",
"193532",
"116410",
"190485",
"193435",
"188252",
"186738",
"186125",
"186122",
"186124",
"184422",
"96574",
"114312",
"164804",
"164267",
"164967",
"169861",
"162061",
"144298",
"181548",
"181551",
"181546",
"181549",
"183501",
"180906",
"185421",
"163121",
"175730",
"176523",
"175725",
"176929",
"166969",
"166970",
"166971",
"167406",
"173162",
"175732",
"183671",
"114260",
"184581",
"184582",
"184580",
"185534",
"190407",
"194816",
"186151",
"59544",
"186121",
"197697",
"194990",
"76057",
"56732",
"95676",
"94960",
"104215",
"95674",
"189492",
"190484",
"97087",
"184020",
"201261",
"91005",
"113537",
"126983",
"185508",
"186206",
"185528",
"189719",
"129732",
"199659",
"201773",
"201774",
"164218",
"164501",
"162099",
"164451",
"164463",
"164461",
"165946",
"201754",
"203230",
"199000",
"201792",
"198997",
"207639",
"20763",
"129699",
"198933",
"98542",
"98965",
"99192",
"40586",
"40825",
"208445",
"207638",
"131527",
"201668",
"200912",
"200913",
"126832",
"204931",
"189729",
"164929",
"224249",
"219984",
"211087",
"129208",
"164517",
"40320",
"207940",
"213937",
"210797",
"214840",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"top\", unitFrame.HealthBar, -22, 15);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--MISC\n--174773 - Spiteful Shade\n\n--The War Within\n\n--220626 - Parasite\n\n--Ara Kara\n--218961 - Starved Crawler\n\n\n--Dragonflight\n\n--Brackenhide\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 - Curious Swoglet\n\n\n--Shadowlands\n\n--Halls of Atonement\n--165913 - Ghastly Parishioner\n--167898 - Manifestation of Envy\n\n--Necrotic Wake\n--164702 - Carrion Worm\n--167731 - Surgeons before 3rd boss\n\n\n--BFA\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Siege of Boredom\n--128649 - 1st boss\n\n\n--LEGION\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n\n--OLD SHIT\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Temple of the Jade Serpent\n--56792 - Figment of Doubt\n\n\n\n--87329 - test dummy \n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["OptionsValues"] = {
["dotsColor"] = {
0,
1,
0.0078431377187371,
1,
},
["outline"] = true,
["nameplateColor"] = {
0.8666667342186,
0.43529415130615,
0,
1,
},
["changeNameplateColor"] = true,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
["UID"] = "0x669cfe742d32773",
["UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1729409345,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"top\", unitFrame.HealthBar, -22, 15);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--MISC\n--174773 - Spiteful Shade\n\n--The War Within\n\n--220626 - Parasite\n\n--Ara Kara\n--218961 - Starved Crawler\n\n\n--Dragonflight\n\n--Brackenhide\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 - Curious Swoglet\n\n\n--Shadowlands\n\n--Halls of Atonement\n--165913 - Ghastly Parishioner\n--167898 - Manifestation of Envy\n\n--Necrotic Wake\n--164702 - Carrion Worm\n--167731 - Surgeons before 3rd boss\n\n\n--BFA\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Siege of Boredom\n--128649 - 1st boss\n\n\n--LEGION\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n\n--OLD SHIT\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Temple of the Jade Serpent\n--56792 - Figment of Doubt\n\n\n\n--87329 - test dummy \n\n\n",
["Icon"] = "4630415",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["Revision"] = 1102,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.8666667342186,
0.43529415130615,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Outline Test",
},
},
["Enabled"] = true,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
["Temp_UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Prio"] = 99,
["Name"] = "Fixate - Jundies",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["ScriptType"] = 3,
["Desc"] = "Changes nameplate color to Orange and adds glow to npcs that are fixated on you",
["NpcNames"] = {
"174773",
"164702",
"165913",
"167898",
"56792",
"194745",
"129529",
"133835",
"101476",
"190366",
"195399",
"212681",
"102781",
"Shattershell Scarab",
"220626",
"218961",
"165251",
"162689",
"167731",
"128649",
"144160",
"40357",
},
},
{
["ConstructorCode"] = "function()\nend",
["OnHideCode"] = "function()\nend",
["OptionsValues"] = {
["casting"] = 1.1999999284744,
},
["Temp_OnShowCode"] = "function()\nend\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Time"] = 1729409357,
["url"] = "",
["Temp_ConstructorCode"] = "function()\nend",
["Icon"] = 132397,
["Temp_OnHideCode"] = "function()\nend",
["Enabled"] = true,
["Revision"] = 316,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)        \nend",
["Temp_UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Author"] = "Ququlcoatl-Blackmoore",
["Initialization"] = "function (scriptTable)        \nend",
["OnShowCode"] = "function()\nend\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Must Die - Jundies",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "conditionally scales the nameplate of Incorporeal Beings when not ccd",
["Options"] = {
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Key"] = "casting",
["Value"] = 1.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Casting Scale",
},
},
["NpcNames"] = {
"214287",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Time"] = 1729416409,
["Temp_Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["url"] = "https://wago.io/Haq3jHDkU/2",
["Icon"] = 644389,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 172,
["Options"] = {
},
["Name"] = "Hide Nameplate - Jundies",
["Prio"] = 99,
["Author"] = "Briarbreed-Area 52",
["Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["skipWagoUpdate"] = 3,
["PlaterCore"] = 1,
["version"] = 2,
["Desc"] = "Hide nameplates based on the unit's NPC ID.",
["semver"] = "1.0.1",
["NpcNames"] = {
"167966",
"199220",
"199916",
"225601",
"39450",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end --compatibility\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        --[225976] = {secondCastBar = true, altCastId = \"Uber Strike\",  debuffTimer = 167385, name = GetSpellInfo(167385), spellIcon = 167385}, --tank dummy        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        config.text = npcInfo.name\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend",
["Time"] = 1729585139,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 234,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Countdown",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend",
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --compat\n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        --[167385] = \"Uber Strike\", --tank dummy\n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    local auras = Plater.GetUnitAuras(unitFrame)\n    for id, aura in pairs(auras) do\n        local name, caster = aura.name, aura.sourceUnit\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n            break\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1729585422,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 279,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["NpcNames"] = {
"Illusionary Vulpin",
},
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Name"] = "Fixate On You [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
},
["npcs_renamed"] = {
[173044] = "Stitcher",
[176394] = "Worker",
[212764] = "Speaker",
[192333] = "Alpha",
[191222] = "Frost Dragon",
[197985] = "Flame",
[190381] = "Rotburst",
[207796] = "Burning",
[98965] = "Kur'talos",
[176523] = "Painsmith",
[185683] = "Speed Relic",
[87329] = "Test Dummy",
[98521] = "Etheldrin",
[101839] = "Cat",
[199368] = "Big Crystal",
[164967] = "Dickus",
[179334] = "Zo'dahh",
[144298] = "Mk III",
[184319] = "Custodian",
[204560] = "Incorporeal",
[135234] = "Doggo",
[181224] = "Da Sausage",
[114627] = "Terror",
[216340] = "Sentry",
[189813] = "Dathea",
[167731] = "Separator",
[184130] = "Earthen",
[184908] = "Haste Boi",
[179733] = "Fish Stick",
[184972] = "Eggnog",
[131823] = "M'lady",
[163891] = "Bad Slime",
[201261] = "Kazzara",
[184910] = "Speed Boi",
[128551] = "Doggo",
[190340] = "Defender",
[184911] = "CDR Boi",
[180990] = "Jailer",
[185610] = "Simp",
[59555] = "Haunting",
[229537] = "Emissary",
[98538] = "Velandras",
[214012] = "Dark ",
[175806] = "Sa'lami",
[208445] = "Larodar",
[181548] = "Absolution",
[178141] = "Fish Sticker",
[227300] = "Big Spawn",
[164705] = "Haste Slime",
[99192] = "Xavius",
[168969] = "Green Slime",
[151649] = "Mk I",
[209090] = "T. Swift",
[181549] = "War",
[220401] = "Detector",
[98696] = "Illysanna",
[201155] = "Nascent Dragon",
[184582] = "Eric",
[151657] = "Bomb",
[197219] = "Big Lasher",
[182169] = "Lithium",
[197298] = "Nascent Dragon",
[214840] = "Engorged",
[114632] = "Attendant",
[164707] = "Purple Slime",
[185685] = "CDR Relic",
[70245] = "uh oh",
[102781] = "Bat",
[180773] = "Trash Can",
[181551] = "Duty",
[165946] = "Mordretha",
[216658] = "Izo",
[198998] = "Tyr",
[175646] = "S.U.C.C. Master",
[174773] = "Spiteful",
[165010] = "Purple Slime",
[190426] = "Decay Totem",
[181546] = "Renewal",
[197509] = "Cloud",
[214350] = "Turned",
[194897] = "Stormsurge Totem",
[185680] = "Haste Relic",
[175663] = "Hill Brad",
[214287] = "Bad Totem",
[198047] = "Tempest",
[174843] = "Maitre D",
},
["bossmod_support_bars_text_enabled"] = false,
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater.lua:1585",
["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater.lua:1585",
["SoftTargetIconGameObject"] = "Interface/AddOns/Plater/Plater.lua:1585",
["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplatePersonalHideDelaySeconds"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowFriendlyPets"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateOverlapH"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplatePersonalShowWithTarget"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateLargerScale"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowFriendlyMinions"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateSelfScale"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateTargetBehindMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1585",
["SoftTargetInteract"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowEnemies"] = "Interface/AddOns/Plater/Plater.lua:1585",
["NamePlateVerticalScale"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowSelf"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplatePersonalShowAlways"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateMotionSpeed"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateGlobalScale"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowEnemyPets"] = "Interface/AddOns/Plater/Plater.lua:8686",
["nameplateShowFriendlyNPCs"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplatePersonalShowInCombat"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowAll"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:8743",
["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateSelfAlpha"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateMinScale"] = "Interface/AddOns/Plater/Plater.lua:1585",
["SoftTargetNameplateInteract"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateOtherAtBase"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateSelfBottomInset"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowEnemyTotems"] = "Interface/AddOns/Plater/Plater.lua:8698",
["nameplateShowFriendlyGuardians"] = "Interface/AddOns/Plater/Plater.lua:1585",
["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowEnemyMinus"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateSelfTopInset"] = "Interface/AddOns/Plater/Plater.lua:1585",
},
["aura_cache_by_name"] = {
["mort'regar's echoes"] = {
333575,
},
["broodkeeper's blaze"] = {
394452,
394453,
},
["regrowth"] = {
8936,
16561,
20665,
22373,
22695,
27637,
28744,
34361,
39000,
39125,
66067,
69882,
72922,
72932,
84158,
97426,
98099,
102047,
165753,
173791,
176218,
187697,
188905,
224527,
265532,
283745,
292627,
292734,
311571,
326689,
338857,
},
["storm dominance"] = {
374918,
396076,
396077,
396111,
396113,
},
["crippling poison"] = {
3408,
3409,
25809,
30981,
44289,
115196,
132747,
132748,
169622,
169623,
283648,
283649,
},
["flame dominance"] = {
374881,
396056,
396062,
396105,
396106,
},
["blazing soul"] = {
111642,
235365,
389176,
411008,
422067,
423530,
426898,
},
["echoing void"] = {
307232,
307236,
317014,
317020,
317022,
317029,
318280,
318485,
318486,
373281,
373304,
373305,
},
["ice barrier"] = {
11426,
33245,
69787,
198094,
201565,
240074,
262251,
264458,
267504,
284882,
},
["sphere of suppression"] = {
294906,
294907,
294908,
294909,
294910,
294912,
294919,
294920,
294922,
298292,
298418,
298419,
298420,
300012,
300013,
},
["atrophic poison"] = {
83609,
381637,
392388,
},
["concentrated flame"] = {
295368,
295373,
295374,
295375,
295376,
295377,
295378,
295379,
295380,
295384,
299349,
299353,
302564,
},
["sanguine sphere"] = {
163689,
166591,
},
["enslaved"] = {
201089,
204831,
211680,
222424,
268192,
299156,
303622,
323961,
},
["bolster"] = {
209859,
280001,
},
["frost dominance"] = {
374916,
396072,
396074,
396108,
396109,
},
["chaos brand"] = {
1490,
255260,
281242,
},
["whip rage"] = {
29340,
233210,
},
["kevin's wrath"] = {
352520,
352528,
352533,
352534,
},
["sinful revelation"] = {
309623,
324260,
},
["predatory instincts"] = {
389808,
},
["iron wire"] = {
196861,
256148,
},
["earth shield"] = {
379,
974,
32734,
38590,
54479,
54480,
55599,
55600,
56451,
57802,
57803,
58981,
58982,
59471,
59472,
60013,
60014,
66063,
66064,
67530,
67537,
69568,
69569,
69925,
69926,
77905,
79927,
79928,
101649,
101650,
143475,
143479,
145559,
145560,
159981,
159982,
165773,
199355,
199356,
204288,
204290,
226078,
254417,
254425,
268709,
268710,
374066,
374067,
377874,
377875,
383648,
413008,
413010,
},
["power word: shield"] = {
17,
11647,
11835,
11974,
17139,
20697,
22187,
27607,
29408,
32595,
35944,
36052,
41373,
44175,
44291,
46193,
66099,
71548,
71780,
83842,
84039,
102409,
113734,
122808,
123258,
127399,
135313,
136100,
165718,
211558,
226076,
248441,
284471,
318158,
344426,
},
["strength of the pack"] = {
64369,
64381,
171114,
178149,
178150,
189715,
199184,
199186,
200922,
260057,
341222,
341223,
359768,
365338,
},
["numbing poison"] = {
5760,
5761,
158873,
158876,
311373,
342947,
359078,
},
["consecration"] = {
26573,
32773,
33559,
36946,
37553,
38385,
41541,
43429,
57798,
59998,
69930,
79966,
81297,
107100,
111365,
153441,
158416,
162642,
165711,
184047,
188370,
190010,
200667,
200678,
200679,
204242,
205228,
216217,
221645,
221730,
233390,
243597,
251151,
251152,
251549,
251550,
264082,
283579,
283582,
283583,
288807,
288808,
288809,
290496,
290497,
290498,
294346,
294347,
327980,
344172,
382484,
387881,
413267,
},
["lunar empowerment"] = {
211091,
292664,
},
["ancient flame"] = {
144691,
144695,
144699,
295365,
295367,
295369,
295372,
295381,
299348,
299350,
303380,
369990,
375583,
},
["nimble steps"] = {
352366,
354050,
354051,
354052,
},
["breath of eons"] = {
403631,
403755,
403758,
409632,
409990,
},
["tidebringer"] = {
236501,
236502,
},
["prey on the weak"] = {
131511,
255909,
389788,
389806,
},
["pistol shot"] = {
185763,
207820,
214779,
223933,
240073,
255966,
267241,
267452,
268229,
274253,
275000,
285167,
294934,
},
["liquefying ooze"] = {
345466,
},
["enveloping mist"] = {
124682,
209193,
212414,
227345,
231605,
274062,
317602,
344008,
344240,
},
["selfless healer"] = {
85804,
114250,
128863,
216777,
},
["butcher cut"] = {
279416,
279426,
},
["mutilated flesh"] = {
211672,
340431,
381672,
394021,
},
["shadowflame wreathe"] = {
405076,
405764,
405765,
405766,
406753,
406764,
406770,
},
["all-consuming spite"] = {
343553,
},
["scouring touch"] = {
356329,
},
["dream delver"] = {
352786,
353353,
353354,
},
["might of the upper reaches"] = {
333579,
},
["defensive countermeasure"] = {
297133,
299428,
300996,
303941,
},
["deadly poison"] = {
2818,
2823,
3583,
10022,
13582,
21787,
21788,
32970,
32971,
34616,
34655,
34657,
36872,
38519,
38520,
41191,
41192,
41485,
43580,
43581,
56145,
56149,
59479,
59482,
63755,
63756,
67710,
67711,
72329,
82632,
82633,
96648,
113780,
129410,
130980,
130981,
132745,
132746,
145419,
145420,
145421,
177918,
177919,
177920,
289078,
314113,
373774,
377030,
377036,
394324,
394325,
403952,
},
["filthy transfusion"] = {
273834,
273835,
273836,
},
["amplifying poison"] = {
381664,
383414,
394328,
},
["freezing ice stone"] = {
402940,
403391,
},
["mystic touch"] = {
8647,
113746,
331653,
},
["insidious chill"] = {
391566,
391568,
},
["blaze of glory"] = {
99252,
146038,
146039,
153926,
167629,
167630,
177354,
373972,
373973,
373974,
373975,
373976,
373977,
385528,
},
["power word: fortitude"] = {
13864,
21562,
23947,
23948,
36004,
58921,
74973,
94366,
133538,
160637,
165739,
183585,
206629,
211681,
266501,
267528,
284466,
286145,
},
["moonkin aura"] = {
209740,
209746,
},
["in the spotlight"] = {
227931,
312926,
},
["mind flay"] = {
15407,
16568,
17165,
22919,
23953,
26044,
26143,
28310,
29407,
29570,
32417,
35507,
37276,
37330,
37621,
38243,
40842,
42396,
43512,
46562,
52586,
54339,
54805,
57779,
57941,
59367,
59974,
60006,
60472,
65488,
78751,
79541,
79711,
89032,
91134,
103024,
129033,
144293,
149984,
150886,
150893,
154125,
164445,
172670,
183324,
189873,
193473,
193635,
196508,
196509,
201520,
202894,
203037,
203313,
203375,
208697,
216513,
218510,
222075,
234696,
241934,
254123,
260182,
260304,
263117,
264892,
271649,
274019,
274032,
277358,
277521,
278311,
284414,
290402,
292974,
299301,
303566,
306391,
308172,
308884,
308885,
310552,
310555,
312526,
312679,
314187,
314188,
314592,
315949,
316835,
317490,
319027,
321330,
394167,
406231,
},
["effusive anima accelerator"] = {
352188,
353248,
353349,
360277,
},
["blistering heat"] = {
105444,
105445,
417039,
420950,
420968,
},
["arcane intellect"] = {
1459,
13326,
36880,
45525,
129171,
266499,
367803,
},
["soulglow spectrometer"] = {
352186,
352938,
352939,
352940,
358379,
},
["earth dominance"] = {
374917,
396067,
396068,
396085,
396098,
},
["nothing personal"] = {
286573,
286579,
286581,
289467,
},
["thunder clap"] = {
6343,
57832,
60019,
69304,
85216,
145046,
147683,
183543,
236389,
237917,
262538,
267578,
283929,
316143,
316414,
316490,
382590,
386028,
396719,
},
["inspired"] = {
105710,
133461,
133928,
134116,
134454,
134885,
135077,
135414,
135435,
192943,
224693,
235727,
256539,
301972,
343503,
},
["shadow's grasp"] = {
206760,
263656,
263658,
306965,
},
},
["blizzard_nameplate_font_override_enabled"] = true,
["aura2_y_offset"] = 1.499995470046997,
["aura_timer_text_anchor"] = {
["x"] = 0.4999995529651642,
},
["buffs_on_aura2"] = true,
["health_selection_overlay"] = "PlaterFocus",
["expansion_triggerwipe"] = {
[8] = true,
[10] = true,
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.80000007152557,
0.30196079611778,
0.30196079611778,
1,
},
["npc_cache"] = {
[164815] = {
"佐尔拉姆斯虹吸者",
"通灵战潮",
"zhCN",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[10381] = {
"被毁坏的死尸",
"斯坦索姆",
"zhCN",
},
[10413] = {
"地穴兽",
"斯坦索姆",
"zhCN",
},
[22929] = {
"大型暗影魔",
"黑暗神殿",
"zhCN",
},
[10461] = {
"未知目标",
"斯坦索姆",
"zhCN",
},
[213434] = {
"孢点",
"真菌之愚",
"zhCN",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[220599] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[109820] = {
"伊格瑟格尔",
"青龙的试炼",
"zhCN",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[226485] = {
"亚什工蝎",
"卡利姆多",
"zhCN",
},
[212412] = {
"Sootsnout",
"Darkflame Cleft",
"enUS",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[4417] = {
"迪菲亚工头",
"死亡矿井",
"zhCN",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
},
[217531] = {
"Ixin",
"Ara-Kara, City of Echoes",
"enUS",
},
[23953] = {
"凯雷塞斯王子",
"乌特加德城堡",
"zhCN",
},
[226487] = {
"亚什蜂群",
"卡利姆多",
"zhCN",
},
[102785] = {
"卡萨纳提尔",
"紫罗兰监狱",
"zhCN",
},
[109438] = {
"愤怒卫士邪击者",
"青龙的试炼",
"zhCN",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
},
[217533] = {
"Atik",
"Ara-Kara, City of Echoes",
"enUS",
},
[164567] = {
"英格拉·马洛克",
"塞兹仙林的迷雾",
"zhCN",
},
[211904] = {
"Tainted Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[13276] = {
"荒野小鬼",
"厄运之槌",
"zhCN",
},
[227513] = {
"Tala",
"The Dread Pit",
"enUS",
},
[228537] = {
"夜幕影行者",
"破晨号",
"zhCN",
},
[94982] = {
"耐奥祖的回响",
"冰冠堡垒",
"zhCN",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[24849] = {
"始祖幼龙骑手",
"乌特加德城堡",
"zhCN",
},
[227514] = {
"Velo",
"The Dread Pit",
"enUS",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
"enUS",
},
[11469] = {
"艾德雷斯怨魂",
"厄运之槌",
"zhCN",
},
[214209] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[33818] = {
"暮光追随者",
"奥杜尔",
"zhCN",
},
[102787] = {
"虹吸裂隙",
"紫罗兰监狱",
"zhCN",
},
[213954] = {
"击石者",
"矶石宝库",
"zhCN",
},
[228539] = {
"夜幕暗法师",
"破晨号",
"zhCN",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[228540] = {
"夜幕影法师",
"破晨号",
"zhCN",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[1729] = {
"迪菲亚招魂师",
"死亡矿井",
"zhCN",
},
[1731] = {
"地精工匠",
"死亡矿井",
"zhCN",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
},
[218306] = {
"甲虫队长沃拉坎",
"尼鲁巴尔王宫",
"zhCN",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[17653] = {
"影月导魔者",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
"enUS",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[23954] = {
"掠夺者因格瓦尔",
"乌特加德城堡",
"zhCN",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[1763] = {
"基尔尼格",
"死亡矿井",
"zhCN",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[232893] = {
"铁怒狱卒",
"黑石深渊",
"zhCN",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
},
[217541] = {
"夜幕新兵",
"飞掠裂口",
"zhCN",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[232894] = {
"未知目标",
"黑石深渊",
"zhCN",
},
[224962] = {
"咒炉愈疗者",
"矶石宝库",
"zhCN",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[10382] = {
"被撕裂的死尸",
"斯坦索姆",
"zhCN",
},
[10398] = {
"图萨丁暗影法师",
"斯坦索姆",
"zhCN",
},
[10414] = {
"缝补憎恶",
"斯坦索姆",
"zhCN",
},
[71062] = {
"大型幻影杀戮者",
"试炼场",
"zhCN",
},
[222149] = {
"受伤的土灵",
"矶石宝库",
"zhCN",
},
[93963] = {
"阿尔萨斯·米奈希尔的回响",
"冰冠堡垒",
"zhCN",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
},
[120958] = {
"克索诺斯邪骑士",
"Dread Scar Rift - Warlock Mount Scenario",
"zhCN",
},
[229826] = {
"未知目标",
"黑石深渊",
"zhCN",
},
[10558] = {
"弗雷斯特恩",
"斯坦索姆",
"zhCN",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
},
[226757] = {
"阿努比萨斯征服者",
"卡利姆多",
"zhCN",
},
[231107] = {
"陷惧末日尖哮者",
"卡利姆多",
"zhCN",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
},
[226758] = {
"亚什雄蝎",
"卡利姆多",
"zhCN",
},
[39450] = {
"洞窟穴居人",
"格瑞姆巴托",
"zhCN",
},
[225479] = {
"苏雷吉网法师",
"破晨号",
"zhCN",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
"enUS",
},
[215756] = {
"Ascended Webwarden",
"Khaz Algar",
},
[226503] = {
"其拉角斗士",
"卡利姆多",
"zhCN",
},
[24083] = {
"被奴役的始祖幼龙",
"乌特加德城堡",
"zhCN",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[226505] = {
"黑曜石毁灭者",
"卡利姆多",
"zhCN",
},
[232902] = {
"巨型血犬",
"黑石深渊",
"zhCN",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
"enUS",
},
[5649] = {
"沙怒饮血者",
"祖尔法拉克",
"zhCN",
},
[84499] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[217039] = {
"Nerubian Hauler",
"Ara-Kara, City of Echoes",
"enUS",
},
[15516] = {
"沙尔图拉",
"安其拉神殿",
"zhCN",
},
[11470] = {
"艾德雷斯巫师",
"厄运之槌",
"zhCN",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
"enUS",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
"enUS",
},
[223181] = {
"未知目标",
"千丝之城",
"zhCN",
},
[118915] = {
"野蛮毁灭者",
"Legion Ship - Vertical - Stormheim",
"zhCN",
},
[218320] = {
"织网助祭",
"尼鲁巴尔王宫",
"zhCN",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[223182] = {
"未知目标",
"千丝之城",
"zhCN",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
"enUS",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[71067] = {
"大型幻影恶棍",
"试炼场",
"zhCN",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
"enUS",
},
[220368] = {
"未知目标",
"燧酿酒庄",
"zhCN",
},
[222927] = {
"圣焰酿酒师",
"圣焰隐修院",
"zhCN",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[202969] = {
"Empty Recollection",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216275] = {
"布莱恩的宝贝蛋",
"飞掠裂口",
"zhCN",
},
[39388] = {
"未知目标",
"格瑞姆巴托",
"zhCN",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[33567] = {
"感应触须",
"奥杜尔",
"zhCN",
},
[6017] = {
"熔岩喷射图腾",
"祖尔法拉克",
"zhCN",
},
[33823] = {
"暮光斩杀者",
"奥杜尔",
"zhCN",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
"enUS",
},
[8120] = {
"苏利萨斯憎恶",
"祖尔法拉克",
"zhCN",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
"enUS",
},
[71069] = {
"大型幻影秘法师",
"试炼场",
"zhCN",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[171500] = {
"蹒跚的死尸",
"通灵战潮",
"zhCN",
},
[42971] = {
"石翼石像鬼",
"斯坦索姆",
"zhCN",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[127106] = {
"Irontide Officer",
"Freehold",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[165872] = {
"血肉工匠",
"通灵战潮",
"zhCN",
},
[10399] = {
"图萨丁侍僧",
"斯坦索姆",
"zhCN",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[71070] = {
"未知目标",
"试炼场",
"zhCN",
},
[10463] = {
"尖叫的女妖",
"斯坦索姆",
"zhCN",
},
[22997] = {
"埃辛诺斯之焰",
"黑暗神殿",
"zhCN",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[33824] = {
"暮光影刃",
"奥杜尔",
"zhCN",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[220119] = {
"代言人杉文兹",
"飞掠裂口",
"zhCN",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
"enUS",
},
[222167] = {
"Brood Infuser",
"Nerub-ar Palace",
"enUS",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[165108] = {
"幻影克隆体",
"塞兹仙林的迷雾",
"zhCN",
},
[17624] = {
"嘲颅卫士",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[4418] = {
"迪菲亚巫师",
"死亡矿井",
"zhCN",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[71072] = {
"未知目标",
"试炼场",
"zhCN",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
"enUS",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[15229] = {
"维克尼士兵",
"安其拉神殿",
"zhCN",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[32593] = {
"敏捷的爬虫",
"艾卓-尼鲁布",
"zhCN",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[213216] = {
"代言人多利塔",
"矶石宝库",
"zhCN",
},
[224219] = {
"暮光唤地者",
"格瑞姆巴托",
"zhCN",
},
[224731] = {
"掠网者",
"千丝之城",
"zhCN",
},
[213217] = {
"代言人布洛克",
"矶石宝库",
"zhCN",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[71074] = {
"小型幻影煞魔",
"试炼场",
"zhCN",
},
[11471] = {
"艾德雷斯鬼怪",
"厄运之槌",
"zhCN",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[224732] = {
"隐秘网士",
"千丝之城",
"zhCN",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
},
[224221] = {
"暮光监督者",
"格瑞姆巴托",
"zhCN",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[231130] = {
"陷惧末日领主",
"卡利姆多",
"zhCN",
},
[71075] = {
"小型幻影女妖",
"试炼场",
"zhCN",
},
[17401] = {
"地狱魔法猎犬",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
"enUS",
},
[212453] = {
"阴森的虚空之魂",
"矶石宝库",
"zhCN",
},
[39392] = {
"无面腐蚀者",
"格瑞姆巴托",
"zhCN",
},
[223200] = {
"黑血收集者",
"尼鲁巴尔王宫",
"zhCN",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[71076] = {
"小型幻影秘法师",
"试炼场",
"zhCN",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
"enUS",
},
[216293] = {
"Trilling Attendant",
"Ara-Kara, City of Echoes",
"enUS",
},
[220643] = {
"深水龙虾人",
"无底沉穴",
"zhCN",
},
[231134] = {
"陷惧邪锤",
"卡利姆多",
"zhCN",
},
[634] = {
"迪菲亚监工",
"死亡矿井",
"zhCN",
},
[221667] = {
"失落的观察者",
"尼鲁巴尔王宫",
"zhCN",
},
[71077] = {
"小型幻影织珀者",
"试炼场",
"zhCN",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[639] = {
"艾德温·范克里夫",
"死亡矿井",
"zhCN",
},
[214503] = {
"席克兰",
"尼鲁巴尔王宫",
"zhCN",
},
[641] = {
"地精木匠",
"死亡矿井",
"zhCN",
},
[642] = {
"斯尼德的伐木机",
"死亡矿井",
"zhCN",
},
[643] = {
"斯尼德",
"死亡矿井",
"zhCN",
},
[644] = {
"拉克佐",
"死亡矿井",
"zhCN",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[646] = {
"重拳先生",
"死亡矿井",
"zhCN",
},
[647] = {
"绿皮船长",
"死亡矿井",
"zhCN",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[10384] = {
"鬼魂市民",
"斯坦索姆",
"zhCN",
},
[200943] = {
"Electrified Colossal Stormfiend",
"Vault of the Incarnates",
},
[10416] = {
"喷胆者",
"斯坦索姆",
"zhCN",
},
[71078] = {
"小型幻影恶棍",
"试炼场",
"zhCN",
},
[138254] = {
"铁潮火枪手",
"围攻伯拉勒斯",
"zhCN",
},
[10464] = {
"哀嚎的女妖",
"斯坦索姆",
"zhCN",
},
[214761] = {
"夜幕祭师",
"破晨号",
"zhCN",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
"enUS",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[138255] = {
"艾什凡观察员",
"围攻伯拉勒斯",
"zhCN",
},
[210156] = {
"斯卡莫拉克",
"矶石宝库",
"zhCN",
},
[214762] = {
"夜幕司令官",
"破晨号",
"zhCN",
},
[227300] = {
"Bile-Soaked Spawn",
"Nerub-ar Palace",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[214251] = {
"蜃鱼人枯败者",
"无底沉穴",
"zhCN",
},
[17370] = {
"嘲颅执行者",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[118800] = {
"蔑魔角斗士",
"Legion Ship - Vertical - Stormheim",
"zhCN",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[71080] = {
"小型幻影杀戮者",
"试炼场",
"zhCN",
},
[220138] = {
"反刍巨怪",
"尼鲁巴尔王宫",
"zhCN",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
"enUS",
},
[17882] = {
"黑色阔步者",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
"enUS",
},
[220139] = {
"蜿蜒喷吐",
"尼鲁巴尔王宫",
"zhCN",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[15230] = {
"维克尼战士",
"安其拉神殿",
"zhCN",
},
[15262] = {
"黑曜石清除者",
"安其拉神殿",
"zhCN",
},
[87329] = {
"Raider's Training Dummy",
"Draenor",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[220141] = {
"蜂王浆供应商",
"燧酿酒庄",
"zhCN",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[228841] = {
"克尔苏加德",
"卡利姆多",
"zhCN",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[11488] = {
"伊琳娜·暗木",
"厄运之槌",
"zhCN",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
"enUS",
},
[17371] = {
"影月术士",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[220401] = {
"苍白牧师",
"千丝之城",
"zhCN",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
"enUS",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
"enUS",
},
[224240] = {
"暮光烈焰粉碎者",
"格瑞姆巴托",
"zhCN",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
},
[205307] = {
"断裂因果",
"10.1.5 Time Rifts - Black Empire (Azq'roth)",
"zhCN",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[220148] = {
"宝石囤积者",
"恐惧陷坑",
"zhCN",
},
[14303] = {
"僵硬守护者",
"厄运之槌",
"zhCN",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[214264] = {
"咒炉荣誉卫兵",
"矶石宝库",
"zhCN",
},
[222964] = {
"风味科学家",
"燧酿酒庄",
"zhCN",
},
[10385] = {
"幽灵市民",
"斯坦索姆",
"zhCN",
},
[10417] = {
"泼毒者",
"斯坦索姆",
"zhCN",
},
[218103] = {
"蛛魔领主",
"恐惧陷坑",
"zhCN",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[98081] = {
"Bellowing Idol",
"Neltharion's Lair",
"enUS",
},
[118807] = {
"蔑魔步兵",
"Legion Ship - Vertical - Stormheim",
"zhCN",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[165138] = {
"凋零之袋",
"通灵战潮",
"zhCN",
},
[40357] = {
"被召唤的暗影烈焰之灵",
"格瑞姆巴托",
"zhCN",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[222455] = {
"黑血收割者",
"尼鲁巴尔王宫",
"zhCN",
},
[231411] = {
"恶魔卫士",
"黑石深渊",
"zhCN",
},
[227573] = {
"Anub'vir",
"Earthcrawl Mines",
"enUS",
},
[214012] = {
"Dark Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[233203] = {
"烈焰行者",
"黑石深渊",
"zhCN",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[221945] = {
"被遗忘的末日使者",
"尼鲁巴尔王宫",
"zhCN",
},
[232436] = {
"暗炉平民",
"黑石深渊",
"zhCN",
},
[136483] = {
"艾什凡水手",
"围攻伯拉勒斯",
"zhCN",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
"enUS",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[227575] = {
"Armored Shellguard",
"Earthcrawl Mines",
"enUS",
},
[40166] = {
"熔核巨人",
"格瑞姆巴托",
"zhCN",
},
[224249] = {
"暮光熔岩操纵使",
"格瑞姆巴托",
"zhCN",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
},
[15247] = {
"其拉洗脑者",
"安其拉神殿",
"zhCN",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
},
[223994] = {
"夜幕影法师",
"破晨号",
"zhCN",
},
[13280] = {
"海多斯博恩",
"厄运之槌",
"zhCN",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[165911] = {
"忠诚的造物",
"通灵战潮",
"zhCN",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[223995] = {
"夜幕咒刃",
"破晨号",
"zhCN",
},
[45412] = {
"奥里克斯·瑞文戴尔领主",
"斯坦索姆",
"zhCN",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[227578] = {
"Nerubian Webcaster",
"Earthcrawl Mines",
"enUS",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[220158] = {
"深地尊将维克迪斯",
"恐惧陷坑",
"zhCN",
},
[11489] = {
"特迪斯·扭木",
"厄运之槌",
"zhCN",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[137511] = {
"水鼠帮杀手",
"围攻伯拉勒斯",
"zhCN",
},
[40167] = {
"暮光欺诈者",
"格瑞姆巴托",
"zhCN",
},
[29335] = {
"阿努巴尔织网者",
"艾卓-尼鲁布",
"zhCN",
},
[212739] = {
"Radiating Voidstone",
"The Rookery",
"enUS",
},
[23418] = {
"苦痛精华",
"黑暗神殿",
"zhCN",
},
[3450] = {
"迪菲亚鹦鹉",
"死亡矿井",
"zhCN",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[227581] = {
"Nerubian Oracle",
"Earthcrawl Mines",
"enUS",
},
[226302] = {
"弗莱拉斯大使",
"黑石深渊",
"zhCN",
},
[218370] = {
"安苏雷克女王",
"尼鲁巴尔王宫",
"zhCN",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[17725] = {
"幽暗沼泽潜伏者",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[226303] = {
"贝尔加",
"黑石深渊",
"zhCN",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[883] = {
"鹿",
"厄运之槌",
"zhCN",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[168988] = {
"未知目标",
"塞兹仙林的迷雾",
"zhCN",
},
[216325] = {
"狂乱掠食者",
"塔克-雷桑深渊",
"zhCN",
},
[218884] = {
"碎壳甲虫",
"尼鲁巴尔王宫",
"zhCN",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[137516] = {
"艾什凡入侵者",
"围攻伯拉勒斯",
"zhCN",
},
[36522] = {
"幽魂恐魔",
"灵魂洪炉",
"zhCN",
},
[226305] = {
"达格兰·索瑞森大帝",
"黑石深渊",
"zhCN",
},
[216326] = {
"扬升新兵",
"千丝之城",
"zhCN",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[165919] = {
"骷髅劫掠者",
"通灵战潮",
"zhCN",
},
[137517] = {
"艾什凡破坏者",
"围攻伯拉勒斯",
"zhCN",
},
[14400] = {
"奥术回馈者",
"厄运之槌",
"zhCN",
},
[226306] = {
"傀儡统帅阿格曼奇",
"黑石深渊",
"zhCN",
},
[216583] = {
"啾鸣释惧蛛",
"恐惧陷坑",
"zhCN",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[10418] = {
"复生的卫兵",
"斯坦索姆",
"zhCN",
},
[226307] = {
"安格雷尔",
"黑石深渊",
"zhCN",
},
[216328] = {
"不稳定的测试对象",
"千丝之城",
"zhCN",
},
[216584] = {
"蛛魔队长",
"恐惧陷坑",
"zhCN",
},
[163618] = {
"佐尔拉姆斯通灵师",
"通灵战潮",
"zhCN",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[84400] = {
"Gnarled Ancient",
"The Everbloom",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[220423] = {
"退休的尊将瓦拉扎克",
"千丝之城",
"zhCN",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[163619] = {
"佐尔拉姆斯刻骨者",
"通灵战潮",
"zhCN",
},
[119839] = {
"克索诺斯愤怒战马",
"Dread Scar Rift - Warlock Mount Scenario",
"zhCN",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[226309] = {
"多普雷尔",
"黑石深渊",
"zhCN",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Halls of Infusion",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"UNKNOWN",
"enUS",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[163621] = {
"碎淤",
"通灵战潮",
"zhCN",
},
[119840] = {
"阿拉萨斯",
"Dread Scar Rift - Warlock Mount Scenario",
"zhCN",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
"enUS",
},
[226311] = {
"黑特雷尔",
"黑石深渊",
"zhCN",
},
[163622] = {
"碎淤残块",
"通灵战潮",
"zhCN",
},
[223497] = {
"工蜂",
"燧酿酒庄",
"zhCN",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[163623] = {
"烂吐残渣",
"通灵战潮",
"zhCN",
},
[15264] = {
"阿努比萨斯哨兵",
"安其拉神殿",
"zhCN",
},
[226313] = {
"格鲁雷尔",
"黑石深渊",
"zhCN",
},
[214287] = {
"爆地图腾",
"矶石宝库",
"zhCN",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[28729] = {
"看守者纳尔伊",
"艾卓-尼鲁布",
"zhCN",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[217870] = {
"噬光魔影",
"飞掠裂口",
"zhCN",
},
[226314] = {
"茉艾拉·铜须",
"黑石深渊",
"zhCN",
},
[33134] = {
"萨拉",
"奥杜尔",
"zhCN",
},
[101163] = {
"被诅咒的守卫",
"卡拉赞墓穴",
"zhCN",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
"enUS",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
"enUS",
},
[11458] = {
"僵化的树人",
"厄运之槌",
"zhCN",
},
[226315] = {
"洛考尔",
"黑石深渊",
"zhCN",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
"enUS",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[23420] = {
"愤怒精华",
"黑暗神殿",
"zhCN",
},
[232458] = {
"厄炉魔匠",
"黑石深渊",
"zhCN",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[224271] = {
"暮光术士",
"格瑞姆巴托",
"zhCN",
},
[216339] = {
"苏雷吉反自然者",
"千丝之城",
"zhCN",
},
[15984] = {
"沙尔图拉的皇家卫兵",
"安其拉神殿",
"zhCN",
},
[210966] = {
"苏雷吉网法师",
"破晨号",
"zhCN",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[216340] = {
"Sentry Stagshell",
"Ara-Kara, City of Echoes",
"enUS",
},
[220946] = {
"风险投资公司蜂蜜收割者",
"燧酿酒庄",
"zhCN",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[214550] = {
"深水钳蟹",
"无底沉穴",
"zhCN",
},
[28410] = {
"掠龙灵魂师",
"乌特加德城堡",
"zhCN",
},
[216342] = {
"掠行助理",
"千丝之城",
"zhCN",
},
[214551] = {
"游荡的开膛者",
"无底沉穴",
"zhCN",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[232463] = {
"暮光之锤特使",
"黑石深渊",
"zhCN",
},
[163121] = {
"缝合先锋",
"通灵战潮",
"zhCN",
},
[28922] = {
"阿努巴尔碾压者",
"艾卓-尼鲁布",
"zhCN",
},
[10419] = {
"复生的魔术师",
"斯坦索姆",
"zhCN",
},
[10435] = {
"巴瑟拉斯镇长",
"斯坦索姆",
"zhCN",
},
[232464] = {
"暗炉议员",
"黑石深渊",
"zhCN",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
"enUS",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[232465] = {
"黑铁皇家守卫",
"黑石深渊",
"zhCN",
},
[211228] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[118056] = {
"狡猾的恶棍",
"Legion Ship - Vertical - Stormheim",
"zhCN",
},
[230419] = {
"亚什工蝎",
"卡利姆多",
"zhCN",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[219588] = {
"好好先生",
"燧酿酒庄",
"zhCN",
},
[212764] = {
"引擎语者",
"矶石宝库",
"zhCN",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[223498] = {
"未知目标",
"燧酿酒庄",
"zhCN",
},
[223423] = {
"粗心的酒花大地精",
"燧酿酒庄",
"zhCN",
},
[230420] = {
"其拉战地卫士",
"卡利姆多",
"zhCN",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
"enUS",
},
[218865] = {
"小蜜蜂",
"燧酿酒庄",
"zhCN",
},
[212765] = {
"虚缚抢劫者",
"矶石宝库",
"zhCN",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[17728] = {
"暗血部族成员",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[11473] = {
"艾德雷斯妖灵",
"厄运之槌",
"zhCN",
},
[222461] = {
"凝固物质",
"尼鲁巴尔王宫",
"zhCN",
},
[230421] = {
"天灾复生者",
"卡利姆多",
"zhCN",
},
[163126] = {
"脆骨法师",
"通灵战潮",
"zhCN",
},
[230667] = {
"悲惨的土狼",
"卡利姆多",
"zhCN",
},
[8095] = {
"苏利萨斯沙行者",
"祖尔法拉克",
"zhCN",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[11043] = {
"复生的僧侣",
"斯坦索姆",
"zhCN",
},
[33890] = {
"尤格-萨隆的大脑",
"奥杜尔",
"zhCN",
},
[217268] = {
"低泣之影",
"飞掠裂口",
"zhCN",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
"enUS",
},
[29209] = {
"腐尸甲虫",
"艾卓-尼鲁布",
"zhCN",
},
[224970] = {
"腐蚀轰炸者",
"尼鲁巴尔王宫",
"zhCN",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
},
[229399] = {
"汲血者",
"尼鲁巴尔王宫",
"zhCN",
},
[223770] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[225817] = {
"腐蚀剃天者",
"尼鲁巴尔王宫",
"zhCN",
},
[221979] = {
"虚缚嚎叫者",
"矶石宝库",
"zhCN",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[163128] = {
"佐尔拉姆斯巫师",
"通灵战潮",
"zhCN",
},
[163058] = {
"纱雾防御者",
"塞兹仙林的迷雾",
"zhCN",
},
[165111] = {
"德鲁斯特恶爪者",
"塞兹仙林的迷雾",
"zhCN",
},
[230672] = {
"蕨皮食腐者",
"卡利姆多",
"zhCN",
},
[168246] = {
"未知目标",
"通灵战潮",
"zhCN",
},
[26716] = {
"碧蓝典狱官",
"魔枢",
"zhCN",
},
[230680] = {
"蕨皮黑羽",
"卡利姆多",
"zhCN",
},
[164920] = {
"德鲁斯特斩魂者",
"塞兹仙林的迷雾",
"zhCN",
},
[119466] = {
"恐惧典狱官",
"Legion Ship - Horizontal - Azsuna",
"zhCN",
},
[171772] = {
"纱雾防御者",
"塞兹仙林的迷雾",
"zhCN",
},
[11472] = {
"艾德雷斯鬼巫",
"厄运之槌",
"zhCN",
},
[135241] = {
"水鼠帮劫掠者",
"围攻伯拉勒斯",
"zhCN",
},
[222214] = {
"狂乱的跃行魔",
"尼鲁巴尔王宫",
"zhCN",
},
[223772] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[11459] = {
"埃隆巴克保护者",
"厄运之槌",
"zhCN",
},
[164921] = {
"德鲁斯特收割者",
"塞兹仙林的迷雾",
"zhCN",
},
[24084] = {
"挖掘隧道的食尸鬼",
"乌特加德城堡",
"zhCN",
},
[222459] = {
"凝结物质",
"尼鲁巴尔王宫",
"zhCN",
},
[29051] = {
"阿努巴尔地穴魔",
"艾卓-尼鲁布",
"zhCN",
},
[28921] = {
"哈多诺克斯",
"艾卓-尼鲁布",
"zhCN",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[223773] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
"enUS",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[230682] = {
"冰冻废土圣物",
"卡利姆多",
"zhCN",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[23956] = {
"掠龙战略家",
"乌特加德城堡",
"zhCN",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[231083] = {
"腐臭橡树",
"卡利姆多",
"zhCN",
},
[223774] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[218316] = {
"卡赫提先锋",
"尼鲁巴尔王宫",
"zhCN",
},
[17377] = {
"击碎者克里丹",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[226304] = {
"伊森迪奥斯",
"黑石深渊",
"zhCN",
},
[22962] = {
"悲伤女士",
"黑暗神殿",
"zhCN",
},
[223775] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[22869] = {
"伊利达雷切骨者",
"黑暗神殿",
"zhCN",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[33772] = {
"无面恐魔",
"奥杜尔",
"zhCN",
},
[223150] = {
"未知目标",
"尼鲁巴尔王宫",
"zhCN",
},
[17729] = {
"暗血矛兵",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[223776] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[137521] = {
"铁潮火枪手",
"围攻伯拉勒斯",
"zhCN",
},
[230685] = {
"织魂者",
"卡利姆多",
"zhCN",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
"enUS",
},
[218315] = {
"卡赫提哨兵",
"尼鲁巴尔王宫",
"zhCN",
},
[24082] = {
"始祖幼龙训练者",
"乌特加德城堡",
"zhCN",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
"enUS",
},
[223777] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[221986] = {
"鲜血恐魔",
"尼鲁巴尔王宫",
"zhCN",
},
[220195] = {
"苏雷吉缚丝者",
"千丝之城",
"zhCN",
},
[230686] = {
"蕨皮腐肉召唤者",
"卡利姆多",
"zhCN",
},
[23960] = {
"掠龙符文法师",
"乌特加德城堡",
"zhCN",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
"enUS",
},
[173016] = {
"尸体采集者",
"通灵战潮",
"zhCN",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
},
[220196] = {
"安苏雷克的传令官",
"千丝之城",
"zhCN",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[129928] = {
"铁潮火枪手",
"围攻伯拉勒斯",
"zhCN",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[28732] = {
"阿努巴尔战士",
"艾卓-尼鲁布",
"zhCN",
},
[230687] = {
"蕨皮吞噬者",
"卡利姆多",
"zhCN",
},
[138002] = {
"雕骨切割者",
"围攻伯拉勒斯",
"zhCN",
},
[220197] = {
"皇家虫群卫士",
"千丝之城",
"zhCN",
},
[213937] = {
"拉夏南",
"破晨号",
"zhCN",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[28924] = {
"阿努巴尔勇士",
"艾卓-尼鲁布",
"zhCN",
},
[33838] = {
"被奴役的火元素",
"奥杜尔",
"zhCN",
},
[218317] = {
"交织御纤士",
"尼鲁巴尔王宫",
"zhCN",
},
[10420] = {
"复生的新兵",
"斯坦索姆",
"zhCN",
},
[10436] = {
"安娜丝塔丽男爵夫人",
"斯坦索姆",
"zhCN",
},
[164929] = {
"仙木灵居民",
"塞兹仙林的迷雾",
"zhCN",
},
[26746] = {
"狂乱的法力怨灵",
"魔枢",
"zhCN",
},
[33716] = {
"感应触须",
"奥杜尔",
"zhCN",
},
[128651] = {
"哈达尔·黑渊",
"围攻伯拉勒斯",
"zhCN",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[28731] = {
"看守者希尔希克",
"艾卓-尼鲁布",
"zhCN",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[40177] = {
"铸炉之主索朗格斯",
"格瑞姆巴托",
"zhCN",
},
[220199] = {
"战斗圣甲虫",
"千丝之城",
"zhCN",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[128650] = {
"“屠夫”血钩",
"围攻伯拉勒斯",
"zhCN",
},
[27389] = {
"未知目标",
"乌特加德城堡",
"zhCN",
},
[109821] = {
"克里提斯领主",
"青龙的试炼",
"zhCN",
},
[216320] = {
"凝结聚合体",
"千丝之城",
"zhCN",
},
[138465] = {
"艾什凡炮手",
"围攻伯拉勒斯",
"zhCN",
},
[5648] = {
"沙怒暗影法师",
"祖尔法拉克",
"zhCN",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[230668] = {
"食腐鸟",
"卡利姆多",
"zhCN",
},
[17723] = {
"泥沼巨人",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[93950] = {
"防御者玛古洛斯",
"冰冠堡垒",
"zhCN",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
},
[232440] = {
"暮光使者",
"黑石深渊",
"zhCN",
},
[210478] = {
"被感染的野兽",
"真菌之愚",
"zhCN",
},
[216619] = {
"演说者基克斯威兹克",
"千丝之城",
"zhCN",
},
[33819] = {
"暮光冰法师",
"奥杜尔",
"zhCN",
},
[11487] = {
"卡雷迪斯镇长",
"厄运之槌",
"zhCN",
},
[17730] = {
"暗血治疗者",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[33717] = {
"碧蓝随从",
"奥杜尔",
"zhCN",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
"enUS",
},
[17826] = {
"沼地领主穆塞雷克",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
"enUS",
},
[210479] = {
"食肉鞭笞者",
"真菌之愚",
"zhCN",
},
[71064] = {
"大型幻影守卫",
"试炼场",
"zhCN",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
"enUS",
},
[222974] = {
"饥饿的圣甲虫",
"千丝之城",
"zhCN",
},
[230079] = {
"烈焰喷涌",
"黑石深渊",
"zhCN",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[223204] = {
"内室卫士",
"尼鲁巴尔王宫",
"zhCN",
},
[17398] = {
"初生的邪兽人",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[216621] = {
"蛛魔织网者",
"地匍矿洞",
"zhCN",
},
[33820] = {
"暮光炎术师",
"奥杜尔",
"zhCN",
},
[24079] = {
"掠龙铸造大师",
"乌特加德城堡",
"zhCN",
},
[214548] = {
"湿滑虹吸鳗",
"无底沉穴",
"zhCN",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[71068] = {
"未知目标",
"试炼场",
"zhCN",
},
[223674] = {
"腐蚀掠行者",
"尼鲁巴尔王宫",
"zhCN",
},
[24085] = {
"掠龙监工",
"乌特加德城堡",
"zhCN",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[36916] = {
"食尸鬼爪牙",
"灵魂洪炉",
"zhCN",
},
[28733] = {
"阿努巴尔暗影法师",
"艾卓-尼鲁布",
"zhCN",
},
[29117] = {
"阿努巴尔勇士",
"艾卓-尼鲁布",
"zhCN",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[26782] = {
"晶化守护者",
"魔枢",
"zhCN",
},
[17399] = {
"魅惑者",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[11456] = {
"荒野暗影行者",
"厄运之槌",
"zhCN",
},
[28925] = {
"阿努巴尔通灵师",
"艾卓-尼鲁布",
"zhCN",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[10876] = {
"亡灵甲虫",
"斯坦索姆",
"zhCN",
},
[232459] = {
"武器技师",
"黑石深渊",
"zhCN",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[11476] = {
"上层精灵骷髅",
"厄运之槌",
"zhCN",
},
[11492] = {
"荒野变形者奥兹恩",
"厄运之槌",
"zhCN",
},
[218671] = {
"风险投资公司纵火狂",
"燧酿酒庄",
"zhCN",
},
[220974] = {
"Bazaar Guard",
"Khaz Algar",
},
[29213] = {
"阿努巴尔突袭者",
"艾卓-尼鲁布",
"zhCN",
},
[101886] = {
"地狱卫士萨潘",
"永春台",
"zhCN",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
"enUS",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214066] = {
"咒炉塑石者",
"矶石宝库",
"zhCN",
},
[23232] = {
"变异军犬",
"黑暗神殿",
"zhCN",
},
[164804] = {
"宗主奥法兰",
"塞兹仙林的迷雾",
"zhCN",
},
[101282] = {
"瑞维尔·考斯特",
"卡拉赞墓穴",
"zhCN",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[231158] = {
"无疤者奥斯里安",
"卡利姆多",
"zhCN",
},
[164427] = {
"未知目标",
"通灵战潮",
"zhCN",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23419] = {
"欲望精华",
"黑暗神殿",
"zhCN",
},
[7275] = {
"暗影祭司塞瑟斯",
"祖尔法拉克",
"zhCN",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[227373] = {
"未知目标",
"螺旋织纹",
"zhCN",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[41139] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[93948] = {
"巴尔古·火须",
"冰冠堡垒",
"zhCN",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
"enUS",
},
[17731] = {
"沼泽鳐",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[17827] = {
"克劳恩",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[165197] = {
"骸骨巨怪",
"通灵战潮",
"zhCN",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[215755] = {
"Ascended Overseer",
"Khaz Algar",
},
[36499] = {
"护魂收割者",
"灵魂洪炉",
"zhCN",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
},
[128652] = {
"维克戈斯",
"围攻伯拉勒斯",
"zhCN",
},
[94913] = {
"鬼魂法师",
"冰冠堡垒",
"zhCN",
},
[222700] = {
"晦幽纺纱",
"千丝之城",
"zhCN",
},
[119733] = {
"克索诺斯祭师",
"Dread Scar Rift - Warlock Mount Scenario",
"zhCN",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
},
[227632] = {
"Venombite",
"The Dread Pit",
"enUS",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[110471] = {
"小鬼掠夺者",
"青龙的试炼",
"zhCN",
},
[8179] = {
"未知目标",
"祖尔法拉克",
"zhCN",
},
[227635] = {
"Kas'dru",
"The Dread Pit",
"enUS",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[118838] = {
"艾瑞达招魂者",
"Legion Ship - Vertical - Stormheim",
"zhCN",
},
[28734] = {
"阿努巴尔散兵",
"艾卓-尼鲁布",
"zhCN",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[135263] = {
"艾什凡观察员",
"围攻伯拉勒斯",
"zhCN",
},
[11460] = {
"未知目标",
"厄运之槌",
"zhCN",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[10389] = {
"狂怒的幻影",
"斯坦索姆",
"zhCN",
},
[10405] = {
"恶疫食尸鬼",
"斯坦索姆",
"zhCN",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[29118] = {
"阿努巴尔地穴魔",
"艾卓-尼鲁布",
"zhCN",
},
[33720] = {
"感应触须",
"奥杜尔",
"zhCN",
},
[226308] = {
"瓦勒雷尔",
"黑石深渊",
"zhCN",
},
[29214] = {
"阿努巴尔刺客",
"艾卓-尼鲁布",
"zhCN",
},
[223541] = {
"失窃的装货者",
"夜幕圣所",
"zhCN",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
"enUS",
},
[226100] = {
"卡赫提散兵",
"尼鲁巴尔王宫",
"zhCN",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[216634] = {
"俯冲散播者",
"地匍矿洞",
"zhCN",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[17380] = {
"布洛戈克",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[133990] = {
"雕骨切割者",
"围攻伯拉勒斯",
"zhCN",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[217658] = {
"布朗派克爵士",
"圣焰隐修院",
"zhCN",
},
[232243] = {
"审讯官格斯塔恩",
"黑石深渊",
"zhCN",
},
[22965] = {
"虔诚的管家",
"黑暗神殿",
"zhCN",
},
[163157] = {
"阿玛厄斯",
"通灵战潮",
"zhCN",
},
[7247] = {
"沙怒噬魂者",
"祖尔法拉克",
"zhCN",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[219046] = {
"Voracious Worm",
"Nerub-ar Palace",
"enUS",
},
[211262] = {
"坚不可摧的伊克斯雷腾",
"破晨号",
"zhCN",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[232244] = {
"铁怒炮手",
"黑石深渊",
"zhCN",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
},
[220730] = {
"皇家毒壳者",
"千丝之城",
"zhCN",
},
[220986] = {
"Hollows Sentry",
"Khaz Algar",
},
[97320] = {
"岩肤守门者",
"冰冠堡垒",
"zhCN",
},
[211263] = {
"死亡尖啸者艾肯塔克",
"破晨号",
"zhCN",
},
[7274] = {
"沙怒刽子手",
"祖尔法拉克",
"zhCN",
},
[232245] = {
"铁怒龙骑士",
"黑石深渊",
"zhCN",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
"enUS",
},
[23222] = {
"噬骨殴斗者",
"黑暗神殿",
"zhCN",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[85194] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[15299] = {
"维希度斯",
"安其拉神殿",
"zhCN",
},
[136549] = {
"未知目标",
"围攻伯拉勒斯",
"zhCN",
},
[226617] = {
"未知目标",
"夜幕圣所",
"zhCN",
},
[208450] = {
"Wandering Candle",
"Darkflame Cleft",
"enUS",
},
[220988] = {
"Skeins Sentry",
"Khaz Algar",
},
[219301] = {
"未知目标",
"燧酿酒庄",
"zhCN",
},
[11477] = {
"腐烂的上层精灵",
"厄运之槌",
"zhCN",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[232247] = {
"铁怒军官",
"黑石深渊",
"zhCN",
},
[207939] = {
"布朗派克男爵",
"圣焰隐修院",
"zhCN",
},
[115388] = {
"King",
"Return to Karazhan",
},
[14369] = {
"辛德拉狂热者",
"厄运之槌",
"zhCN",
},
[7785] = {
"祖穆拉恩结界",
"祖尔法拉克",
"zhCN",
},
[219198] = {
"贪婪的甲虫",
"千丝之城",
"zhCN",
},
[17381] = {
"制造者",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[232248] = {
"铁怒士兵",
"黑石深渊",
"zhCN",
},
[207940] = {
"隐修院长穆普雷",
"圣焰隐修院",
"zhCN",
},
[29119] = {
"阿努巴尔通灵师",
"艾卓-尼鲁布",
"zhCN",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[17477] = {
"地狱火小鬼",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[15233] = {
"维克尼守护者",
"安其拉神殿",
"zhCN",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[118840] = {
"总指挥官艾里克苏斯",
"Legion Ship - Vertical - Stormheim",
"zhCN",
},
[214338] = {
"蜃鱼人矛渔夫",
"无底沉穴",
"zhCN",
},
[7267] = {
"乌克兹·沙顶",
"祖尔法拉克",
"zhCN",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
},
[229691] = {
"群聚机器人",
"主机觉醒",
"zhCN",
},
[23394] = {
"巡逻的奥术斥候",
"黑暗神殿",
"zhCN",
},
[232250] = {
"铁怒执行者",
"黑石深渊",
"zhCN",
},
[10813] = {
"巴纳扎尔",
"斯坦索姆",
"zhCN",
},
[208198] = {
"丶諾諾丶",
"血色修道院",
"zhCN",
},
[173655] = {
"纱雾龙母",
"塞兹仙林的迷雾",
"zhCN",
},
[129208] = {
"恐怖船长洛克伍德",
"围攻伯拉勒斯",
"zhCN",
},
[1732] = {
"迪菲亚塑风师",
"死亡矿井",
"zhCN",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[225952] = {
"其拉战地卫士",
"卡利姆多",
"zhCN",
},
[207943] = {
"阿拉希新兵",
"圣焰隐修院",
"zhCN",
},
[18105] = {
"加兹安",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[229695] = {
"被腐蚀的机械师",
"主机觉醒",
"zhCN",
},
[24078] = {
"掠龙熔炼师",
"乌特加德城堡",
"zhCN",
},
[222881] = {
"皇家纺织者",
"尼鲁巴尔王宫",
"zhCN",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[222275] = {
"训练假人",
"尼鲁巴尔王宫",
"zhCN",
},
[232252] = {
"铁怒潜行者",
"黑石深渊",
"zhCN",
},
[23970] = {
"维库骷髅",
"乌特加德城堡",
"zhCN",
},
[226625] = {
"洞穴弹涂鱼",
"夜幕圣所",
"zhCN",
},
[208456] = {
"Shuffling Horror",
"Darkflame Cleft",
"enUS",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
"enUS",
},
[17724] = {
"幽暗蝠",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[164702] = {
"食腐蛆虫",
"通灵战潮",
"zhCN",
},
[222274] = {
"苏雷吉暗刃",
"尼鲁巴尔王宫",
"zhCN",
},
[10390] = {
"骷髅守护者",
"斯坦索姆",
"zhCN",
},
[222786] = {
"寄生蠕虫",
"尼鲁巴尔王宫",
"zhCN",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
"enUS",
},
[10406] = {
"食尸抢夺者",
"斯坦索姆",
"zhCN",
},
[225601] = {
"米雷达尔市民",
"破晨号",
"zhCN",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[18309] = {
"虚灵清道夫",
"外域",
"zhCN",
},
[207946] = {
"戴尔克莱上尉",
"圣焰隐修院",
"zhCN",
},
[214343] = {
"蜃鱼人欺诈者",
"无底沉穴",
"zhCN",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[128551] = {
"Irontide Mastiff",
"Freehold",
"enUS",
},
[28736] = {
"未知目标",
"艾卓-尼鲁布",
"zhCN",
},
[226462] = {
"鹿壳虫",
"螺旋织纹",
"zhCN",
},
[220065] = {
"晦幽纺纱",
"千丝之城",
"zhCN",
},
[229442] = {
"未知目标",
"黑石深渊",
"zhCN",
},
[232254] = {
"火焰驱逐者",
"黑石深渊",
"zhCN",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[218440] = {
"卡赫提战旗",
"尼鲁巴尔王宫",
"zhCN",
},
[229441] = {
"未知目标",
"黑石深渊",
"zhCN",
},
[95434] = {
"未知目标",
"冰冠堡垒",
"zhCN",
},
[10422] = {
"复生的法术师",
"斯坦索姆",
"zhCN",
},
[10438] = {
"苍白的玛勒基",
"斯坦索姆",
"zhCN",
},
[52019] = {
"Skyfall Nova",
"The Vortex Pinnacle",
"enUS",
},
[29120] = {
"阿努巴拉克",
"艾卓-尼鲁布",
"zhCN",
},
[220742] = {
"Guardian Tentacle",
"The Sinkhole",
"enUS",
},
[10421] = {
"复生的防御者",
"斯坦索姆",
"zhCN",
},
[29216] = {
"阿努巴尔守护者",
"艾卓-尼鲁布",
"zhCN",
},
[118975] = {
"瑟瑞塔斯",
"Legion Ship - Horizontal - Azsuna",
"zhCN",
},
[232258] = {
"未知目标",
"黑石深渊",
"zhCN",
},
[119467] = {
"大审判官",
"Legion Ship - Horizontal - Azsuna",
"zhCN",
},
[207949] = {
"热心的圣殿骑士",
"圣焰隐修院",
"zhCN",
},
[23235] = {
"噬骨剑武者",
"黑暗神殿",
"zhCN",
},
[216649] = {
"维克斯",
"千丝之城",
"zhCN",
},
[22947] = {
"莎赫拉丝主母",
"黑暗神殿",
"zhCN",
},
[229443] = {
"巨型黑曜石元素",
"黑石深渊",
"zhCN",
},
[225605] = {
"夜幕暗法师",
"破晨号",
"zhCN",
},
[207438] = {
"无头骑士",
"血色修道院",
"zhCN",
},
[224070] = {
"遥控傀儡",
"死亡矿井",
"zhCN",
},
[164926] = {
"德鲁斯特碎枝者",
"塞兹仙林的迷雾",
"zhCN",
},
[23375] = {
"影魔",
"黑暗神殿",
"zhCN",
},
[36497] = {
"布隆亚姆",
"灵魂洪炉",
"zhCN",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[229444] = {
"洛考尔之子",
"黑石深渊",
"zhCN",
},
[225606] = {
"夜幕影行者",
"破晨号",
"zhCN",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
},
[11486] = {
"托塞德林王子",
"厄运之槌",
"zhCN",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[214348] = {
"地渊之海憎恶",
"塔克-雷桑深渊",
"zhCN",
},
[141938] = {
"艾什凡狙击手",
"围攻伯拉勒斯",
"zhCN",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[17734] = {
"幽暗沼泽领主",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[223562] = {
"酒滴",
"燧酿酒庄",
"zhCN",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[11030] = {
"无脑的亡灵",
"斯坦索姆",
"zhCN",
},
[17990] = {
"未知目标",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[219723] = {
"皇家低语者",
"尼鲁巴尔王宫",
"zhCN",
},
[14398] = {
"艾德雷斯精龙",
"厄运之槌",
"zhCN",
},
[219725] = {
"几丁质骑士",
"尼鲁巴尔王宫",
"zhCN",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[5650] = {
"沙怒巫医",
"祖尔法拉克",
"zhCN",
},
[22939] = {
"神殿助祭",
"黑暗神殿",
"zhCN",
},
[14308] = {
"费拉",
"厄运之槌",
"zhCN",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
},
[15300] = {
"维克尼雄蜂",
"安其拉神殿",
"zhCN",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[13285] = {
"死亡鞭笞者",
"厄运之槌",
"zhCN",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[226459] = {
"未知目标",
"夜幕圣所",
"zhCN",
},
[226316] = {
"怒炉将军",
"黑石深渊",
"zhCN",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[26722] = {
"碧蓝大法师",
"魔枢",
"zhCN",
},
[230216] = {
"熔岩金刚Mk. II",
"黑石深渊",
"zhCN",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[109511] = {
"愤怒卫士邪击者",
"青龙的试炼",
"zhCN",
},
[94907] = {
"鬼灵骑士",
"冰冠堡垒",
"zhCN",
},
[95433] = {
"痛苦的灵魂",
"冰冠堡垒",
"zhCN",
},
[219984] = {
"谢非提克",
"千丝之城",
"zhCN",
},
[230217] = {
"剧毒金刚Mk. II",
"黑石深渊",
"zhCN",
},
[22948] = {
"古尔图格·血沸",
"黑暗神殿",
"zhCN",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[165560] = {
"未知目标",
"塞兹仙林的迷雾",
"zhCN",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[29217] = {
"阿努巴尔制毒师",
"艾卓-尼鲁布",
"zhCN",
},
[229706] = {
"爆破炸弹机器人",
"主机觉醒",
"zhCN",
},
[17726] = {
"怒鳞侍从",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[219983] = {
"女王之眼",
"千丝之城",
"zhCN",
},
[14350] = {
"未知目标",
"厄运之槌",
"zhCN",
},
[23236] = {
"噬骨持盾者",
"黑暗神殿",
"zhCN",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
"enUS",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[3947] = {
"地精造船师",
"死亡矿井",
"zhCN",
},
[223822] = {
"女王亲卫雷扎",
"尼鲁巴尔王宫",
"zhCN",
},
[232266] = {
"厄炉机械师",
"黑石深渊",
"zhCN",
},
[11462] = {
"扭木树人",
"厄运之槌",
"zhCN",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[218961] = {
"Starved Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[226310] = {
"杜姆雷尔",
"黑石深渊",
"zhCN",
},
[7796] = {
"耐克鲁姆",
"祖尔法拉克",
"zhCN",
},
[28619] = {
"未知目标",
"艾卓-尼鲁布",
"zhCN",
},
[13021] = {
"扭木摧毁者",
"厄运之槌",
"zhCN",
},
[17735] = {
"怒鳞战士",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[11490] = {
"瑟雷姆·刺蹄",
"厄运之槌",
"zhCN",
},
[218962] = {
"浮肿的害虫",
"幽暗要塞",
"zhCN",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[232268] = {
"凿刻的战争傀儡",
"黑石深渊",
"zhCN",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[11457] = {
"荒野唤魔者",
"厄运之槌",
"zhCN",
},
[164578] = {
"缝肉的造物",
"通灵战潮",
"zhCN",
},
[208728] = {
"宝藏怨灵",
"真菌之愚",
"zhCN",
},
[10439] = {
"未知目标",
"斯坦索姆",
"zhCN",
},
[23397] = {
"伊利达雷血领主",
"黑暗神殿",
"zhCN",
},
[33983] = {
"缠绕触须",
"奥杜尔",
"zhCN",
},
[232269] = {
"弗诺斯·达克维尔",
"黑石深渊",
"zhCN",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
},
[210264] = {
"驯蜂者",
"燧酿酒庄",
"zhCN",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
"enUS",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
},
[36478] = {
"护魂守卫",
"灵魂洪炉",
"zhCN",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[18311] = {
"虚灵盗墓者",
"外域",
"zhCN",
},
[22853] = {
"伊利达雷玷污者",
"黑暗神殿",
"zhCN",
},
[210265] = {
"工蜂",
"燧酿酒庄",
"zhCN",
},
[230991] = {
"火焰驱逐者",
"黑石深渊",
"zhCN",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[229782] = {
"觉醒的方阵兵",
"主机觉醒",
"zhCN",
},
[211289] = {
"泰纳·杜尔玛",
"圣焰隐修院",
"zhCN",
},
[26723] = {
"克莉斯塔萨",
"魔枢",
"zhCN",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[219035] = {
"深渊行者护卫",
"幽暗要塞",
"zhCN",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[230992] = {
"黑铁皇家守卫",
"黑石深渊",
"zhCN",
},
[42975] = {
"疾病食尸鬼",
"斯坦索姆",
"zhCN",
},
[10391] = {
"骷髅狂战士",
"斯坦索姆",
"zhCN",
},
[10407] = {
"鲜肉食尸鬼",
"斯坦索姆",
"zhCN",
},
[10423] = {
"复生的牧师",
"斯坦索姆",
"zhCN",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[22949] = {
"击碎者加西奥斯",
"黑暗神殿",
"zhCN",
},
[210267] = {
"艾帕",
"燧酿酒庄",
"zhCN",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[22917] = {
"伊利丹·怒风",
"黑暗神殿",
"zhCN",
},
[211291] = {
"歇尼麦尔中士",
"圣焰隐修院",
"zhCN",
},
[207453] = {
"真菌散腐者",
"真菌之愚",
"zhCN",
},
[222038] = {
"喧翼猎人恩基拉赫",
"尼鲁巴尔王宫",
"zhCN",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
},
[23237] = {
"噬骨血先知",
"黑暗神殿",
"zhCN",
},
[230994] = {
"幼焰",
"黑石深渊",
"zhCN",
},
[212827] = {
"高阶牧师艾姆雅",
"圣焰隐修院",
"zhCN",
},
[223318] = {
"虔诚的敬奉者",
"尼鲁巴尔王宫",
"zhCN",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[207454] = {
"真菌开膛者",
"真菌之愚",
"zhCN",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[224152] = {
"暮光蛮兵",
"格瑞姆巴托",
"zhCN",
},
[109933] = {
"审判庭仲裁者",
"青龙的试炼",
"zhCN",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[216155] = {
"掠行伏击者",
"恐惧陷坑",
"zhCN",
},
[210270] = {
"酒滴",
"燧酿酒庄",
"zhCN",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
"enUS",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
"enUS",
},
[7272] = {
"殉教者塞卡",
"祖尔法拉克",
"zhCN",
},
[207456] = {
"真菌护矛者",
"真菌之愚",
"zhCN",
},
[24069] = {
"掠龙碎骨者",
"乌特加德城堡",
"zhCN",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[210271] = {
"酿造大师阿德里尔",
"燧酿酒庄",
"zhCN",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
"enUS",
},
[28419] = {
"狂乱的恶鬼",
"乌特加德城堡",
"zhCN",
},
[119016] = {
"虫语工匠",
"Legion Ship - Vertical - Stormheim",
"zhCN",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[222042] = {
"喧翼",
"尼鲁巴尔王宫",
"zhCN",
},
[222368] = {
"尊贵牧师",
"尼鲁巴尔王宫",
"zhCN",
},
[212831] = {
"Forge Master Damian",
"Priory of the Sacred Flame",
"enUS",
},
[232443] = {
"暮光保镖",
"黑石深渊",
"zhCN",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[213343] = {
"熔炉装货工",
"矶石宝库",
"zhCN",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[228952] = {
"蛛魔潜伏者",
"恐惧陷坑",
"zhCN",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[207459] = {
"真菌腐法师",
"真菌之愚",
"zhCN",
},
[167731] = {
"分离助理",
"通灵战潮",
"zhCN",
},
[214625] = {
"蜃鱼人通灵师",
"无底沉穴",
"zhCN",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[228953] = {
"飞掠入侵者",
"恐惧陷坑",
"zhCN",
},
[129989] = {
"铁潮火枪手",
"围攻伯拉勒斯",
"zhCN",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
},
[166264] = {
"备用部件",
"通灵战潮",
"zhCN",
},
[15621] = {
"未知目标",
"安其拉神殿",
"zhCN",
},
[19016] = {
"地狱火劣魔",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[22950] = {
"高阶灵术师塞勒沃尔",
"黑暗神殿",
"zhCN",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[212835] = {
"复活的步兵",
"圣焰隐修院",
"zhCN",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
},
[40319] = {
"达加·燃影者",
"格瑞姆巴托",
"zhCN",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[206694] = {
"热诚的神射手",
"圣焰隐修院",
"zhCN",
},
[110416] = {
"小鬼掠夺者",
"青龙的试炼",
"zhCN",
},
[166266] = {
"备用部件",
"通灵战潮",
"zhCN",
},
[23398] = {
"愤怒灵魂碎块",
"黑暗神殿",
"zhCN",
},
[163122] = {
"脆骨战士",
"通灵战潮",
"zhCN",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[128967] = {
"艾什凡狙击手",
"围攻伯拉勒斯",
"zhCN",
},
[598] = {
"迪菲亚矿工",
"死亡矿井",
"zhCN",
},
[11475] = {
"艾德雷斯幻像",
"厄运之槌",
"zhCN",
},
[223839] = {
"女王亲卫杰扎",
"尼鲁巴尔王宫",
"zhCN",
},
[220001] = {
"黑血软泥",
"幽暗要塞",
"zhCN",
},
[29098] = {
"阿努巴尔通灵师",
"艾卓-尼鲁布",
"zhCN",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[212838] = {
"阿拉希新兵",
"圣焰隐修院",
"zhCN",
},
[206696] = {
"阿拉希骑士",
"圣焰隐修院",
"zhCN",
},
[131823] = {
"Sister Malady",
"UNKNOWN",
"enUS",
},
[230993] = {
"暮光之锤特使",
"黑石深渊",
"zhCN",
},
[219746] = {
"流丝之墓",
"尼鲁巴尔王宫",
"zhCN",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[40320] = {
"瓦里昂娜",
"格瑞姆巴托",
"zhCN",
},
[206697] = {
"虔诚的牧师",
"圣焰隐修院",
"zhCN",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[17993] = {
"血警卫保护者",
"风暴要塞：生态船",
"zhCN",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[10424] = {
"复生的豪侠",
"斯坦索姆",
"zhCN",
},
[2520] = {
"遥控傀儡",
"死亡矿井",
"zhCN",
},
[103125] = {
"监狱猎犬",
"永春台",
"zhCN",
},
[109394] = {
"审判庭拷问者",
"青龙的试炼",
"zhCN",
},
[206698] = {
"狂热的咒术师",
"圣焰隐修院",
"zhCN",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[211261] = {
"扬升者维斯可里亚",
"破晨号",
"zhCN",
},
[231010] = {
"骸骨蜘蛛",
"卡利姆多",
"zhCN",
},
[211816] = {
"Bazaar Sentry",
"Khaz Algar",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
"enUS",
},
[137405] = {
"攫握恐魔",
"围攻伯拉勒斯",
"zhCN",
},
[223844] = {
"未知目标",
"千丝之城",
"zhCN",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[7269] = {
"圣甲虫",
"祖尔法拉克",
"zhCN",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[230799] = {
"燃烧之魂",
"黑石深渊",
"zhCN",
},
[162689] = {
"外科医生缝肉",
"通灵战潮",
"zhCN",
},
[109396] = {
"审判官之眼",
"青龙的试炼",
"zhCN",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[109395] = {
"审判团夺灵者",
"青龙的试炼",
"zhCN",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[22855] = {
"伊利达雷夜魔领主",
"黑暗神殿",
"zhCN",
},
[207468] = {
"多瘤复生者",
"真菌之愚",
"zhCN",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
"enUS",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
"enUS",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[137103] = {
"Blood Visage",
"The Underrot",
"enUS",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[98521] = {
"Lord Etheldrin Ravencrest",
"Black Rook Hold",
"enUS",
},
[33988] = {
"不朽守护者",
"奥杜尔",
"zhCN",
},
[162691] = {
"凋骨",
"通灵战潮",
"zhCN",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23239] = {
"噬骨战士",
"黑暗神殿",
"zhCN",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
},
[231566] = {
"烈焰先驱者",
"黑石深渊",
"zhCN",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[23399] = {
"苦痛灵魂碎块",
"黑暗神殿",
"zhCN",
},
[220008] = {
"克拉格派",
"无底沉穴",
"zhCN",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[165251] = {
"未知目标",
"塞兹仙林的迷雾",
"zhCN",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
},
[166275] = {
"纱雾塑形者",
"塞兹仙林的迷雾",
"zhCN",
},
[10808] = {
"悲惨的提米",
"斯坦索姆",
"zhCN",
},
[162693] = {
"缚霜者纳尔佐",
"通灵战潮",
"zhCN",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[208239] = {
"飞掠之恐",
"恐惧陷坑",
"zhCN",
},
[109397] = {
"贝尔菲亚",
"青龙的试炼",
"zhCN",
},
[206704] = {
"热切的圣骑士",
"圣焰隐修院",
"zhCN",
},
[224609] = {
"暮光毁灭者",
"格瑞姆巴托",
"zhCN",
},
[166276] = {
"纱雾守护者",
"塞兹仙林的迷雾",
"zhCN",
},
[17770] = {
"霍加尔芬",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[22951] = {
"女公爵玛兰德",
"黑暗神殿",
"zhCN",
},
[224616] = {
"未知目标",
"破晨号",
"zhCN",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[206705] = {
"阿拉希步兵",
"圣焰隐修院",
"zhCN",
},
[11032] = {
"指挥官玛洛尔",
"斯坦索姆",
"zhCN",
},
[129996] = {
"未知目标",
"围攻伯拉勒斯",
"zhCN",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[227174] = {
"天灾缚魂者",
"卡利姆多",
"zhCN",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
"enUS",
},
[208241] = {
"啃踝者",
"恐惧陷坑",
"zhCN",
},
[119633] = {
"邪能小鬼",
"Legion Ship - Horizontal - Azsuna",
"zhCN",
},
[221035] = {
"皇家书记员",
"尼鲁巴尔王宫",
"zhCN",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[7797] = {
"卢兹鲁",
"祖尔法拉克",
"zhCN",
},
[17871] = {
"幽暗沼泽蹒跚者",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[232550] = {
"原型奥能金刚",
"黑石深渊",
"zhCN",
},
[208242] = {
"蛛魔暗法师",
"恐惧陷坑",
"zhCN",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
"enUS",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[11480] = {
"奥术畸兽",
"厄运之槌",
"zhCN",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[208244] = {
"蛛魔御纤士",
"恐惧陷坑",
"zhCN",
},
[232551] = {
"原型熔岩金刚",
"黑石深渊",
"zhCN",
},
[208243] = {
"蛛魔斩击者",
"恐惧陷坑",
"zhCN",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[227178] = {
"天灾复生者",
"卡利姆多",
"zhCN",
},
[15510] = {
"顽强的范克瑞斯",
"安其拉神殿",
"zhCN",
},
[217491] = {
"纺束者塔卡兹基",
"尼鲁巴尔王宫",
"zhCN",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
},
[11464] = {
"扭木纠缠者",
"厄运之槌",
"zhCN",
},
[22952] = {
"维尔莱斯·深影",
"黑暗神殿",
"zhCN",
},
[11496] = {
"伊莫塔尔",
"厄运之槌",
"zhCN",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[227179] = {
"天灾石像鬼",
"卡利姆多",
"zhCN",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[7789] = {
"沙怒智障者",
"祖尔法拉克",
"zhCN",
},
[232553] = {
"原型剧毒金刚",
"黑石深渊",
"zhCN",
},
[232552] = {
"原型电荷金刚",
"黑石深渊",
"zhCN",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[208245] = {
"敏捷的聚生虫",
"恐惧陷坑",
"zhCN",
},
[206710] = {
"光耀之子",
"圣焰隐修院",
"zhCN",
},
[227180] = {
"天灾领主",
"卡利姆多",
"zhCN",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[229739] = {
"失控的晶塔",
"主机觉醒",
"zhCN",
},
[23400] = {
"伊利达雷执政官",
"黑暗神殿",
"zhCN",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[10383] = {
"破碎的死尸",
"斯坦索姆",
"zhCN",
},
[214350] = {
"被转化的代言人",
"矶石宝库",
"zhCN",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
},
[224516] = {
"斯卡丁入侵者",
"矶石宝库",
"zhCN",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
},
[137625] = {
"未知目标",
"围攻伯拉勒斯",
"zhCN",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[199547] = {
"Frostforged Zealot",
"Vault of the Incarnates",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[10408] = {
"石翼石像鬼",
"斯坦索姆",
"zhCN",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
"enUS",
},
[137626] = {
"攻城恐魔",
"围攻伯拉勒斯",
"zhCN",
},
[17771] = {
"暗血神谕者",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[224368] = {
"未知目标",
"尼鲁巴尔王宫",
"zhCN",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[207481] = {
"旋菇",
"真菌之愚",
"zhCN",
},
[24200] = {
"建筑师斯卡瓦尔德",
"乌特加德城堡",
"zhCN",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
"enUS",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
},
[199549] = {
"Flamesworn Herald",
"Vault of the Incarnates",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[165137] = {
"佐尔拉姆斯守门人",
"通灵战潮",
"zhCN",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[165222] = {
"佐尔拉姆斯愈骨者",
"通灵战潮",
"zhCN",
},
[622] = {
"地精工程师",
"死亡矿井",
"zhCN",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
"enUS",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[29097] = {
"阿努巴尔地穴魔",
"艾卓-尼鲁布",
"zhCN",
},
[26727] = {
"法师猎手军官",
"魔枢",
"zhCN",
},
[26918] = {
"混乱裂隙",
"魔枢",
"zhCN",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
"enUS",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[33288] = {
"尤格-萨隆",
"奥杜尔",
"zhCN",
},
[10441] = {
"未知目标",
"斯坦索姆",
"zhCN",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[10425] = {
"复生的战斗法师",
"斯坦索姆",
"zhCN",
},
[29062] = {
"阿努巴尔勇士",
"艾卓-尼鲁布",
"zhCN",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
"enUS",
},
[222581] = {
"未知目标",
"尼鲁巴尔王宫",
"zhCN",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[233328] = {
"野蛮的巨型血犬",
"黑石深渊",
"zhCN",
},
[217208] = {
"泽克维尔",
"恐惧陷坑",
"zhCN",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
"enUS",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
},
[179334] = {
"Portalmancer Zo'dahh",
"Tazavesh, the Veiled Market",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[216441] = {
"未知目标",
"无底沉穴",
"zhCN",
},
[232327] = {
"烈焰先驱者",
"黑石深渊",
"zhCN",
},
[210812] = {
"Royal Wicklighter",
"Darkflame Cleft",
"enUS",
},
[23337] = {
"伊利达雷百夫长",
"黑暗神殿",
"zhCN",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[36551] = {
"怨恨的魂影",
"灵魂洪炉",
"zhCN",
},
[10697] = {
"绿汁软泥怪",
"斯坦索姆",
"zhCN",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
"enUS",
},
[214140] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[23401] = {
"饥饿灵魂碎块",
"黑暗神殿",
"zhCN",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
"enUS",
},
[128969] = {
"艾什凡指挥官",
"围攻伯拉勒斯",
"zhCN",
},
[220164] = {
"黑化躯壳",
"恐惧陷坑",
"zhCN",
},
[217485] = {
"夜幕哨兵",
"飞掠裂口",
"zhCN",
},
[164501] = {
"唤雾者",
"塞兹仙林的迷雾",
"zhCN",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[10409] = {
"石翼尖啸者",
"斯坦索姆",
"zhCN",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[28231] = {
"晶化看护者",
"魔枢",
"zhCN",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
"enUS",
},
[24201] = {
"控制者达尔隆",
"乌特加德城堡",
"zhCN",
},
[173714] = {
"纱雾夜花",
"塞兹仙林的迷雾",
"zhCN",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
"enUS",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
},
[213119] = {
"虚空代言人艾里克",
"矶石宝库",
"zhCN",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[230422] = {
"天灾缚魂者",
"卡利姆多",
"zhCN",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
},
[211087] = {
"代言人夏多克朗",
"破晨号",
"zhCN",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[4416] = {
"迪菲亚赤膊矿工",
"死亡矿井",
"zhCN",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[229296] = {
"扬升宝珠",
"通灵战潮",
"zhCN",
},
[26728] = {
"法师猎手新兵",
"魔枢",
"zhCN",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[26792] = {
"晶化保卫者",
"魔枢",
"zhCN",
},
[10400] = {
"图萨丁亡灵法师",
"斯坦索姆",
"zhCN",
},
[223357] = {
"苏雷吉役兵",
"千丝之城",
"zhCN",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[15511] = {
"克里勋爵",
"安其拉神殿",
"zhCN",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
},
[15543] = {
"亚尔基公主",
"安其拉神殿",
"zhCN",
},
[11465] = {
"扭木践踏者",
"厄运之槌",
"zhCN",
},
[119515] = {
"邪恶的恐怖使者",
"Legion Ship - Horizontal - Azsuna",
"zhCN",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[223613] = {
"未知目标",
"螺旋织纹",
"zhCN",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[232569] = {
"暗炉议员",
"黑石深渊",
"zhCN",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[42973] = {
"纳克萨玛斯之眼",
"斯坦索姆",
"zhCN",
},
[230219] = {
"奥能金刚Mk. II",
"黑石深渊",
"zhCN",
},
[129371] = {
"激流破浪者",
"围攻伯拉勒斯",
"zhCN",
},
[215435] = {
"预知者西克萨蒙",
"尼鲁巴尔王宫",
"zhCN",
},
[23402] = {
"伊利达雷战斗法师",
"黑暗神殿",
"zhCN",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
},
[7286] = {
"祖尔法拉克僵尸",
"祖尔法拉克",
"zhCN",
},
[23498] = {
"寄生暗影魔",
"黑暗神殿",
"zhCN",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
},
[216658] = {
"大捻接师艾佐",
"千丝之城",
"zhCN",
},
[29735] = {
"野蛮的座狼",
"乌特加德城堡",
"zhCN",
},
[166299] = {
"纱雾照看者",
"塞兹仙林的迷雾",
"zhCN",
},
[129367] = {
"水鼠帮唤风者",
"围攻伯拉勒斯",
"zhCN",
},
[213892] = {
"夜幕影法师",
"破晨号",
"zhCN",
},
[232571] = {
"控火师罗格雷恩",
"黑石深渊",
"zhCN",
},
[119516] = {
"狂乱的虔诚者",
"Legion Ship - Horizontal - Azsuna",
"zhCN",
},
[129879] = {
"铁潮斩杀者",
"围攻伯拉勒斯",
"zhCN",
},
[213894] = {
"夜幕咒刃",
"破晨号",
"zhCN",
},
[229501] = {
"骷髅爪牙",
"乌特加德城堡",
"zhCN",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[213893] = {
"夜幕暗法师",
"破晨号",
"zhCN",
},
[129366] = {
"水鼠帮海盗",
"围攻伯拉勒斯",
"zhCN",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[214661] = {
"戈尔迪·底爵",
"燧酿酒庄",
"zhCN",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[166301] = {
"纱雾追猎者",
"塞兹仙林的迷雾",
"zhCN",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
},
[231554] = {
"暗炉持火者",
"黑石深渊",
"zhCN",
},
[119517] = {
"狂乱的虔诚者",
"Legion Ship - Horizontal - Azsuna",
"zhCN",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[26729] = {
"管家",
"魔枢",
"zhCN",
},
[166302] = {
"尸体收割者",
"通灵战潮",
"zhCN",
},
[220551] = {
"苏雷吉铁纹士",
"尼鲁巴尔王宫",
"zhCN",
},
[209801] = {
"Quartermaster Koratite",
"The Rookery",
"enUS",
},
[207202] = {
"Void Fragment",
"The Rookery",
"enUS",
},
[7246] = {
"沙怒暗影猎手",
"祖尔法拉克",
"zhCN",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[129369] = {
"铁潮袭击者",
"围攻伯拉勒斯",
"zhCN",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
},
[26793] = {
"晶化魔花",
"魔枢",
"zhCN",
},
[22955] = {
"有魅力的客人",
"黑暗神殿",
"zhCN",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[214920] = {
"品酒间侍从",
"燧酿酒庄",
"zhCN",
},
[10394] = {
"黑衣守卫斥候",
"斯坦索姆",
"zhCN",
},
[166304] = {
"纱雾钉刺蛾",
"塞兹仙林的迷雾",
"zhCN",
},
[39625] = {
"乌比斯将军",
"格瑞姆巴托",
"zhCN",
},
[29064] = {
"阿努巴尔通灵师",
"艾卓-尼鲁布",
"zhCN",
},
[29096] = {
"阿努巴尔勇士",
"艾卓-尼鲁布",
"zhCN",
},
[71414] = {
"大型幻影掷蕉兵",
"试炼场",
"zhCN",
},
[221760] = {
"亡灵法师",
"圣焰隐修院",
"zhCN",
},
[10426] = {
"复生的审查者",
"斯坦索姆",
"zhCN",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[29128] = {
"阿努巴尔原始卫士",
"艾卓-尼鲁布",
"zhCN",
},
[129370] = {
"铁潮塑浪者",
"围攻伯拉勒斯",
"zhCN",
},
[223876] = {
"未知目标",
"尼鲁巴尔王宫",
"zhCN",
},
[213895] = {
"夜幕影行者",
"破晨号",
"zhCN",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[211341] = {
"暗影具象",
"破晨号",
"zhCN",
},
[173044] = {
"缝合助理",
"通灵战潮",
"zhCN",
},
[23339] = {
"伊利达雷觅心者",
"黑暗神殿",
"zhCN",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
},
[23403] = {
"伊利达雷刺客",
"黑暗神殿",
"zhCN",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[208521] = {
"南瓜士兵",
"血色修道院",
"zhCN",
},
[71415] = {
"未知目标",
"试炼场",
"zhCN",
},
[657] = {
"迪菲亚海盗",
"死亡矿井",
"zhCN",
},
[224853] = {
"变异幼崽",
"格瑞姆巴托",
"zhCN",
},
[231555] = {
"铁怒军官",
"黑石深渊",
"zhCN",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
"enUS",
},
[173720] = {
"Mistveil Gorgegullet",
"Mists of Tirna Scithe",
"enUS",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[214668] = {
"风险投资公司主顾",
"燧酿酒庄",
"zhCN",
},
[212826] = {
"守卫队长苏雷曼",
"圣焰隐修院",
"zhCN",
},
[231556] = {
"铁怒士兵",
"黑石深渊",
"zhCN",
},
[29063] = {
"阿努巴尔地穴魔",
"艾卓-尼鲁布",
"zhCN",
},
[164517] = {
"特雷德奥瓦",
"塞兹仙林的迷雾",
"zhCN",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[218324] = {
"Nakt",
"Ara-Kara, City of Echoes",
"enUS",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[636] = {
"迪菲亚恶棍",
"死亡矿井",
"zhCN",
},
[231557] = {
"铁怒工兵",
"黑石深渊",
"zhCN",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[129372] = {
"黑油投弹者",
"围攻伯拉勒斯",
"zhCN",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[216205] = {
"贪婪之裔",
"尼鲁巴尔王宫",
"zhCN",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
"enUS",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[213885] = {
"夜幕筑暗师",
"破晨号",
"zhCN",
},
[36620] = {
"护魂精兵",
"灵魂洪炉",
"zhCN",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[102404] = {
"Stoneclaw Grubmaster",
"Neltharion's Lair",
},
[210269] = {
"雇佣的打手",
"燧酿酒庄",
"zhCN",
},
[211089] = {
"阿努布伊卡基",
"破晨号",
"zhCN",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[162729] = {
"帕奇维克士兵",
"通灵战潮",
"zhCN",
},
[26794] = {
"塑树者奥莫洛克",
"魔枢",
"zhCN",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[219022] = {
"扬升的蛛网修士",
"幽暗要塞",
"zhCN",
},
[223372] = {
"至尊软泥怪",
"尼鲁巴尔王宫",
"zhCN",
},
[229769] = {
"医疗机器人",
"主机觉醒",
"zhCN",
},
[15544] = {
"维姆",
"安其拉神殿",
"zhCN",
},
[213905] = {
"活化黑暗",
"破晨号",
"zhCN",
},
[22956] = {
"苦痛祭司",
"黑暗神殿",
"zhCN",
},
[18894] = {
"恶魔卫士蛮兵",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[214673] = {
"风味科学家",
"燧酿酒庄",
"zhCN",
},
[33806] = {
"未知目标",
"奥杜尔",
"zhCN",
},
[231561] = {
"铁怒医师",
"黑石深渊",
"zhCN",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[129374] = {
"雕骨执行者",
"围攻伯拉勒斯",
"zhCN",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[645] = {
"曲奇",
"死亡矿井",
"zhCN",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[220815] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[212411] = {
"Torchsnarl",
"Darkflame Cleft",
"enUS",
},
[231562] = {
"铁怒龙骑士",
"黑石深渊",
"zhCN",
},
[217489] = {
"阿努巴拉什",
"尼鲁巴尔王宫",
"zhCN",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[23436] = {
"未知目标",
"黑暗神殿",
"zhCN",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[214419] = {
"Void Cursed Crusher",
"The Rookery",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[231563] = {
"铁怒潜行者",
"黑石深渊",
"zhCN",
},
[163620] = {
"烂吐",
"通灵战潮",
"zhCN",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[218002] = {
"本克·鸣蜂",
"燧酿酒庄",
"zhCN",
},
[220978] = {
"Skeins Guard",
"Khaz Algar",
},
[119524] = {
"尖啸地狱蝠",
"Legion Ship - Horizontal - Azsuna",
"zhCN",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
"enUS",
},
[10437] = {
"奈鲁布恩坎",
"斯坦索姆",
"zhCN",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
"enUS",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[15622] = {
"维克尼钻孔虫",
"安其拉神殿",
"zhCN",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
"enUS",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
},
[231565] = {
"铁怒炮手",
"黑石深渊",
"zhCN",
},
[214840] = {
"Engorged Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[217748] = {
"节点女亲王凯威扎",
"尼鲁巴尔王宫",
"zhCN",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[227177] = {
"天灾憎恶",
"卡利姆多",
"zhCN",
},
[230798] = {
"烈焰行者",
"黑石深渊",
"zhCN",
},
[222866] = {
"迪菲亚哨兵",
"死亡矿井",
"zhCN",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
"enUS",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[24071] = {
"掠龙裂心者",
"乌特加德城堡",
"zhCN",
},
[130400] = {
"Irontide Crusher",
"Freehold",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[229729] = {
"空值机器人",
"主机觉醒",
"zhCN",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[162692] = {
"阿玛厄斯",
"通灵战潮",
"zhCN",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[215657] = {
"噬灭者乌格拉克斯",
"尼鲁巴尔王宫",
"zhCN",
},
[210539] = {
"Corridor Creeper",
"Darkflame Cleft",
"enUS",
},
[137614] = {
"攻城恐魔",
"围攻伯拉勒斯",
"zhCN",
},
[213338] = {
"炉铸愈疗者",
"矶石宝库",
"zhCN",
},
[222564] = {
"开裂软泥",
"尼鲁巴尔王宫",
"zhCN",
},
[135245] = {
"水鼠帮歼灭者",
"围攻伯拉勒斯",
"zhCN",
},
[206699] = {
"作战山猫",
"圣焰隐修院",
"zhCN",
},
[10411] = {
"纳克萨玛斯之眼",
"斯坦索姆",
"zhCN",
},
[221845] = {
"污染者旭尔胡恩",
"尼鲁巴尔王宫",
"zhCN",
},
[213913] = {
"Kobold Flametender",
"Darkflame Cleft",
"enUS",
},
[22957] = {
"狂乱女士",
"黑暗神殿",
"zhCN",
},
[210108] = {
"E.D.N.A",
"矶石宝库",
"zhCN",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
"enUS",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
},
[229778] = {
"自动踏铁者",
"主机觉醒",
"zhCN",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
"enUS",
},
[214443] = {
"水晶碎片",
"矶石宝库",
"zhCN",
},
[232593] = {
"法拉克斯",
"黑石深渊",
"zhCN",
},
[11197] = {
"无脑的骷髅",
"斯坦索姆",
"zhCN",
},
[228954] = {
"蛛魔掠夺者",
"恐惧陷坑",
"zhCN",
},
[233205] = {
"铁怒龙骑士",
"黑石深渊",
"zhCN",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[233873] = {
"幼焰",
"黑石深渊",
"zhCN",
},
[210109] = {
"大地注能的魔像",
"矶石宝库",
"zhCN",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[23469] = {
"未知目标",
"黑暗神殿",
"zhCN",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
},
[231059] = {
"提克迪奥斯",
"卡利姆多",
"zhCN",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[226312] = {
"西斯雷尔",
"黑石深渊",
"zhCN",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[10811] = {
"档案管理员加尔福特",
"斯坦索姆",
"zhCN",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[33985] = {
"腐蚀触须",
"奥杜尔",
"zhCN",
},
[230684] = {
"势不可挡的憎恶",
"卡利姆多",
"zhCN",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[219034] = {
"掠网者",
"幽暗要塞",
"zhCN",
},
[220130] = {
"代言人杉文兹",
"飞掠裂口",
"zhCN",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[10955] = {
"被召唤的水元素",
"斯坦索姆",
"zhCN",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[231061] = {
"幽灵血牙",
"卡利姆多",
"zhCN",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
"enUS",
},
[211290] = {
"艾蕾娜·安博兰兹",
"圣焰隐修院",
"zhCN",
},
[205218] = {
"飞火图腾",
"黑石深渊",
"zhCN",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[226200] = {
"Chamber Acolyte",
"Nerub-ar Palace",
"enUS",
},
[207450] = {
"真菌戳刺者",
"真菌之愚",
"zhCN",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[220193] = {
"苏雷吉剧毒之刃",
"千丝之城",
"zhCN",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[229783] = {
"未知目标",
"黑石深渊",
"zhCN",
},
[130404] = {
"Vermin Trapper",
"Freehold",
},
[220060] = {
"美味测试员",
"燧酿酒庄",
"zhCN",
},
[197799] = {
"Quarry Infuser",
"Vault of the Incarnates",
"enUS",
},
[230807] = {
"传送锚点",
"黑石深渊",
"zhCN",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
"enUS",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[13022] = {
"抽笞者",
"厄运之槌",
"zhCN",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[11461] = {
"扭木守护者",
"厄运之槌",
"zhCN",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[230218] = {
"电荷金刚Mk. II",
"黑石深渊",
"zhCN",
},
[220976] = {
"Hollows Guard",
"Khaz Algar",
},
[218447] = {
"网茧",
"尼鲁巴尔王宫",
"zhCN",
},
[7788] = {
"沙怒苦工",
"祖尔法拉克",
"zhCN",
},
[172981] = {
"格里恩缝合憎恶",
"通灵战潮",
"zhCN",
},
[11483] = {
"法力残渣",
"厄运之槌",
"zhCN",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
"enUS",
},
[141939] = {
"艾什凡观察员",
"围攻伯拉勒斯",
"zhCN",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[219724] = {
"庭务员",
"尼鲁巴尔王宫",
"zhCN",
},
[174773] = {
"Spiteful Shade",
"Algeth'ar Academy",
"enUS",
},
[218016] = {
"未知目标",
"燧酿酒庄",
"zhCN",
},
[226460] = {
"幽暗爬行者幼体",
"恐惧陷坑",
"zhCN",
},
[17626] = {
"嘲颅军团士兵",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[109424] = {
"邪火飞天魔蝠",
"青龙的试炼",
"zhCN",
},
[7276] = {
"祖尔法拉克阵亡英雄",
"祖尔法拉克",
"zhCN",
},
[164414] = {
"复生的法师",
"通灵战潮",
"zhCN",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[17397] = {
"影月专家",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[17414] = {
"影月技师",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[7268] = {
"沙怒守护者",
"祖尔法拉克",
"zhCN",
},
[221344] = {
"未知目标",
"尼鲁巴尔王宫",
"zhCN",
},
[97197] = {
"Valarjar Purifier",
"Halls of Valor",
"enUS",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[19632] = {
"莱库尔钉刺者",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[212389] = {
"咒心入侵者",
"矶石宝库",
"zhCN",
},
[216648] = {
"恩克斯",
"千丝之城",
"zhCN",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[14399] = {
"奥术洪流",
"厄运之槌",
"zhCN",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
"enUS",
},
[144071] = {
"铁潮塑浪者",
"围攻伯拉勒斯",
"zhCN",
},
[220066] = {
"卷轴承载者",
"幽暗要塞",
"zhCN",
},
[36666] = {
"幽灵守卫",
"灵魂洪炉",
"zhCN",
},
[233208] = {
"铁怒炮手",
"黑石深渊",
"zhCN",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[26125] = {
"复活的食尸鬼",
"斯坦索姆",
"zhCN",
},
[211140] = {
"阿拉希新兵",
"圣焰隐修院",
"zhCN",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[129640] = {
"咆哮的港口猎犬",
"围攻伯拉勒斯",
"zhCN",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
},
[222923] = {
"改造的载货机器人",
"矶石宝库",
"zhCN",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[222273] = {
"苏雷吉丝弓手",
"尼鲁巴尔王宫",
"zhCN",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[17429] = {
"邪兽人新兵",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[13197] = {
"魔鞭抽笞者",
"厄运之槌",
"zhCN",
},
[226620] = {
"老鼠",
"地匍矿洞",
"zhCN",
},
[15263] = {
"预言者斯克拉姆",
"安其拉神殿",
"zhCN",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[28684] = {
"看门者克里克希尔",
"艾卓-尼鲁布",
"zhCN",
},
[166079] = {
"脆骨弩手",
"通灵战潮",
"zhCN",
},
[11453] = {
"荒野欺诈者",
"厄运之槌",
"zhCN",
},
[17732] = {
"莱库尔黄蜂",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[218022] = {
"代言人达文鲁兹",
"夜幕圣所",
"zhCN",
},
[231410] = {
"火元素",
"黑石深渊",
"zhCN",
},
[232246] = {
"铁怒医师",
"黑石深渊",
"zhCN",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[165824] = {
"纳祖达",
"通灵战潮",
"zhCN",
},
[229537] = {
"虚空大使",
"矶石宝库",
"zhCN",
},
[10412] = {
"地穴爬行者",
"斯坦索姆",
"zhCN",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[7271] = {
"巫医祖穆拉恩",
"祖尔法拉克",
"zhCN",
},
[22959] = {
"热忱的招待",
"黑暗神殿",
"zhCN",
},
[214441] = {
"Scorched Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[214697] = {
"主厨丘伊",
"燧酿酒庄",
"zhCN",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
"enUS",
},
[8477] = {
"骷髅仆从",
"斯坦索姆",
"zhCN",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[23223] = {
"噬骨旁观者",
"黑暗神殿",
"zhCN",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
},
[221863] = {
"应诏的助祭",
"尼鲁巴尔王宫",
"zhCN",
},
[7787] = {
"沙怒奴隶",
"祖尔法拉克",
"zhCN",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[33719] = {
"感应触须",
"奥杜尔",
"zhCN",
},
[71079] = {
"小型幻影守卫",
"试炼场",
"zhCN",
},
[33271] = {
"维扎克斯将军",
"奥杜尔",
"zhCN",
},
[135258] = {
"铁潮咒刃",
"围攻伯拉勒斯",
"zhCN",
},
[213932] = {
"苏雷吉好战者",
"破晨号",
"zhCN",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
"enUS",
},
[17727] = {
"怒鳞斥候",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
},
[118808] = {
"蔑魔符文工匠",
"Legion Ship - Vertical - Stormheim",
"zhCN",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[22964] = {
"欢愉祭司",
"黑暗神殿",
"zhCN",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[93949] = {
"死亡使者哈拉克",
"冰冠堡垒",
"zhCN",
},
[216329] = {
"凝结液滴",
"千丝之城",
"zhCN",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[217516] = {
"夜幕行刑者",
"飞掠裂口",
"zhCN",
},
[221896] = {
"蛛网将军阿贝纳尔",
"地匍矿洞",
"zhCN",
},
[213934] = {
"夜幕战略家",
"破晨号",
"zhCN",
},
[228361] = {
"敏捷的追击者",
"千丝之城",
"zhCN",
},
[220437] = {
"监督者卡斯凯尔",
"螺旋织纹",
"zhCN",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[26735] = {
"碧蓝缚鳞者",
"魔枢",
"zhCN",
},
[217517] = {
"夜幕窃愿者",
"飞掠裂口",
"zhCN",
},
[36564] = {
"护魂骨法师",
"灵魂洪炉",
"zhCN",
},
[231124] = {
"陷惧末日追猎者",
"卡利姆多",
"zhCN",
},
[219856] = {
"研究员文凯克斯",
"幽暗要塞",
"zhCN",
},
[212400] = {
"虚触元素",
"矶石宝库",
"zhCN",
},
[20465] = {
"幽暗沼泽狂鱼",
"盘牙湖泊：幽暗沼泽",
"zhCN",
},
[33433] = {
"装甲",
"奥杜尔",
"zhCN",
},
[211121] = {
"Rank Overseer",
"Darkflame Cleft",
"enUS",
},
[217518] = {
"夜幕审判官",
"飞掠裂口",
"zhCN",
},
[26734] = {
"碧蓝强制者",
"魔枢",
"zhCN",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[167111] = {
"锥喉鹿角巨虫",
"塞兹仙林的迷雾",
"zhCN",
},
[224276] = {
"暮光执行者",
"格瑞姆巴托",
"zhCN",
},
[29340] = {
"阿努巴尔虫巢卫士",
"艾卓-尼鲁布",
"zhCN",
},
[33822] = {
"暮光守护者",
"奥杜尔",
"zhCN",
},
[36516] = {
"护魂复生者",
"灵魂洪炉",
"zhCN",
},
[217519] = {
"夜幕幽卫",
"飞掠裂口",
"zhCN",
},
[11452] = {
"荒野游荡者",
"厄运之槌",
"zhCN",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[93951] = {
"残酷的格文拉德",
"冰冠堡垒",
"zhCN",
},
[14370] = {
"未知目标",
"厄运之槌",
"zhCN",
},
[221102] = {
"长者织影",
"千丝之城",
"zhCN",
},
[217126] = {
"过度放纵的主顾",
"燧酿酒庄",
"zhCN",
},
[17400] = {
"恶魔卫士歼灭者",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[167113] = {
"锥喉酸咽者",
"塞兹仙林的迷雾",
"zhCN",
},
[212403] = {
"咒心入侵者",
"矶石宝库",
"zhCN",
},
[23965] = {
"冰霜坟墓",
"乌特加德城堡",
"zhCN",
},
[221103] = {
"魁梧的战甲尉",
"千丝之城",
"zhCN",
},
[138247] = {
"铁潮咒刃",
"围攻伯拉勒斯",
"zhCN",
},
[32665] = {
"水晶纠结者",
"魔枢",
"zhCN",
},
[101887] = {
"阿斯帕修斯",
"永春台",
"zhCN",
},
[40484] = {
"埃鲁达克",
"格瑞姆巴托",
"zhCN",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[223207] = {
"黑血",
"尼鲁巴尔王宫",
"zhCN",
},
[17395] = {
"影月召唤者",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[138464] = {
"艾什凡水手",
"围攻伯拉勒斯",
"zhCN",
},
[222193] = {
"空洞织霜者",
"尼鲁巴尔王宫",
"zhCN",
},
[17491] = {
"嘲颅盗贼",
"地狱火堡垒：鲜血熔炉",
"zhCN",
},
[33966] = {
"重压触须",
"奥杜尔",
"zhCN",
},
[218034] = {
"未知目标",
"夜幕圣所",
"zhCN",
},
[215040] = {
"蜃鱼人嚼骨者",
"无底沉穴",
"zhCN",
},
[212405] = {
"上进的铸手",
"矶石宝库",
"zhCN",
},
[23196] = {
"噬骨巨兽",
"黑暗神殿",
"zhCN",
},
[228538] = {
"夜幕咒刃",
"破晨号",
"zhCN",
},
[39390] = {
"暮光幼龙",
"格瑞姆巴托",
"zhCN",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[28730] = {
"看守者加什拉",
"艾卓-尼鲁布",
"zhCN",
},
[167116] = {
"锥喉掠夺者",
"塞兹仙林的迷雾",
"zhCN",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
},
[23961] = {
"掠龙铁盔战士",
"乌特加德城堡",
"zhCN",
},
[24080] = {
"掠龙武器匠",
"乌特加德城堡",
"zhCN",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[102781] = {
"Fel Bat Pup",
"Black Rook Hold",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[167117] = {
"锥喉幼虫",
"塞兹仙林的迷雾",
"zhCN",
},
[33136] = {
"尤格-萨隆的卫士",
"奥杜尔",
"zhCN",
},
[214502] = {
"血缚恐魔",
"尼鲁巴尔王宫",
"zhCN",
},
[230669] = {
"唤来的腐肉",
"卡利姆多",
"zhCN",
},
[172312] = {
"锥喉饕餮者",
"塞兹仙林的迷雾",
"zhCN",
},
[36502] = {
"噬魂者",
"灵魂洪炉",
"zhCN",
},
[120835] = {
"未知目标",
"Dread Scar Rift - Warlock Mount Scenario",
"zhCN",
},
[165597] = {
"未知目标",
"通灵战潮",
"zhCN",
},
},
["extra_icon_timer_decimals"] = true,
["aura_grow_direction"] = 1,
["indicator_anchor"] = {
["x"] = 1.999997735023499,
["side"] = 6,
},
["hide_name_on_game_objects"] = false,
["health_selection_overlay_alpha"] = 0,
["minor_height_scale"] = 0.99999994039536,
["aura_padding"] = 0,
["indicator_worldboss"] = false,
["last_news_time"] = 1728167305,
["cast_statusbar_fadeout_time"] = 0.49999997019768,
["aura_stack_size"] = 8,
["range_check_health_bar_alpha"] = 0.75,
["aura_show_crowdcontrol"] = true,
["cast_colors"] = {
[358320] = {
false,
"white",
"",
},
[167385] = {
true,
"white",
"",
},
},
["extra_icon_timer_outline"] = "OUTLINE",
["aura_border_colors"] = {
["enrage"] = {
0.70196078431373,
0,
0.054901960784314,
},
["steal_or_purge"] = {
nil,
0.92549019607843,
1,
},
["crowdcontrol"] = {
1,
1,
1,
},
["offensive"] = {
nil,
0.65098039215686,
0.10196078431373,
0,
},
["is_show_all"] = {
0.70196080207825,
0.10196079313755,
0.10196079313755,
},
["is_buff"] = {
nil,
0,
0,
},
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["cast_statusbar_color_channeling"] = {
1,
nil,
0.035294119268656,
0.96000000089407,
},
["extra_icon_anchor"] = {
["x"] = -1,
},
["extra_icon_wide_icon"] = false,
["range_check_alpha"] = 0.8999999761581421,
["semver"] = "5.1.1",
["bossmod_aura_glow_expiring"] = false,
["aura_frame2_anchor"] = {
["y"] = 1.499995470046997,
["x"] = -1.200004458427429,
["side"] = 1,
},
["use_name_translit"] = true,
["aura_alpha"] = 1,
["auto_toggle_friendly"] = {
["arena"] = true,
},
["show_softinteract_icons"] = false,
["extra_icon_height"] = 21,
["transparency_behavior"] = 2,
["spell_animations"] = false,
["debuff_show_cc_border"] = {
1,
1,
1,
},
["aura_consolidate"] = true,
["extra_icon_width"] = 22,
["health_statusbar_texture"] = "Details Flat",
["hook_auto_imported"] = {
["Color Automation"] = 1,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Aura Reorder"] = 3,
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Bwonsamdi Reaping"] = 1,
["Jaina Encounter"] = 6,
["Monk Statue"] = 2,
["Combo Points"] = 6,
["Extra Border"] = 2,
["Targetting Alpha"] = 3,
["Target Color"] = 3,
["Attacking Specific Unit"] = 2,
["Execute Range"] = 1,
},
["extra_icon_border_color"] = {
1,
1,
1,
},
["minor_width_scale"] = 0.99999994039536,
["castbar_target_text_size"] = 9,
["aura_frame1_anchor"] = {
["y"] = 1.499995470046997,
["x"] = 1.199995517730713,
["side"] = 7,
},
["indicator_rare"] = false,
["cast_statusbar_color_finished"] = {
0.27843137254902,
0.75294117647059,
0.23529411764706,
},
["extra_icon_stack_font"] = "Expressway",
["non_targeted_alpha_enabled"] = true,
["cast_statusbar_bgtexture"] = "Details Flat",
["aura2_x_offset"] = -1.200004458427429,
["target_indicator"] = "Double Arrows",
["range_check_cast_bar_alpha"] = 0.8999999761581421,
["saved_cvars"] = {
["nameplateShowOnlyNames"] = "0",
["nameplateOverlapV"] = "1.5",
["nameplateLargeTopInset"] = "0.03999999910593",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplatePersonalShowInCombat"] = "0",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["nameplateLargerScale"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "0.99779832363129",
["nameplateTargetBehindMaxDistance"] = "15",
["SoftTargetInteract"] = "0",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplatePersonalShowAlways"] = "1",
["nameplateMotionSpeed"] = "0.048449993133545",
["nameplateGlobalScale"] = "1",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowEnemyPets"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "0.99656772613525",
["ShowClassColorInNameplate"] = "1",
["ShowNamePlateLoseAggroFlash"] = "1",
["SoftTargetIconGameObject"] = "0",
["nameplateShowFriends"] = "1",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateMotion"] = "1",
["nameplateSelfAlpha"] = "0.89999997615814",
["nameplateMinScale"] = "1",
["SoftTargetNameplateInteract"] = "0",
["nameplateOtherTopInset"] = "0.03999999910593",
["nameplateOtherAtBase"] = "0",
["nameplateSelfBottomInset"] = "0.2",
["nameplateShowEnemyTotems"] = "1",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateOccludedAlphaMult"] = "0.5",
["NamePlateHorizontalScale"] = "1",
["nameplateShowAll"] = "1",
["nameplateSelfTopInset"] = "0.48",
["nameplateOverlapH"] = "0.75",
},
["login_counter"] = 55203,
["extra_icon_caster_name"] = false,
["click_space_friendly"] = {
120,
1,
},
["bossmod_aura_height"] = 32.105155944824,
["aura_stack_font"] = "Expressway",
["blizzard_nameplate_font"] = "Expressway",
["range_check_buffs_alpha"] = 0.75,
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.1000000238419,
},
},
["bossmod_cooldown_text_enabled"] = false,
["auras_per_row_amount"] = 4,
["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator2",
["blizzard_nameplate_large_font"] = "Expressway",
["aura_stack_anchor"] = {
["y"] = 2.499999523162842,
["x"] = 7.999999523162842,
["side"] = 12,
},
["plate_config"] = {
["player"] = {
["spellpercent_text_font"] = "Expressway",
["cast"] = {
170,
},
["castbar_enabled"] = false,
["percent_text_color"] = {
1,
1,
1,
},
["mana_incombat"] = {
168,
4,
},
["healthbar_color"] = {
0,
0,
0,
},
["cast_incombat"] = {
170,
},
["percent_text_anchor"] = {
["y"] = 1.299999475479126,
},
["power_percent_text_size"] = 8,
["spellname_text_font"] = "Expressway",
["mana"] = {
168,
4,
},
["power_percent_text_font"] = "Expressway",
["castbar_offset"] = -55,
["percent_text_size"] = 9,
["percent_text_font"] = "Expressway",
["healthbar_color_by_hp"] = true,
["health_incombat"] = {
168,
},
["health"] = {
168,
},
["module_enabled"] = false,
},
["friendlyplayer"] = {
["spellpercent_text_font"] = "Expressway",
["actorname_friend_color"] = {
0.70980392156863,
},
["actorname_use_class_color"] = true,
["cast"] = {
135,
7,
},
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["actorname_text_spacing"] = 8,
["only_damaged"] = false,
["only_thename"] = true,
["cast_incombat"] = {
135,
7,
},
["spellname_text_anchor"] = {
["y"] = -1.500002145767212,
["x"] = -1.000002264976502,
},
["percent_text_show_decimals"] = false,
["level_text_alpha"] = 0.2999999821186066,
["spellpercent_text_enabled"] = true,
["percent_text_font"] = "Expressway",
["actorname_guild_color"] = {
0.49803921568627,
},
["percent_show_percent"] = false,
["spellname_text_font"] = "Expressway",
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["actorname_text_size"] = 9,
},
["friendlynpc"] = {
["spellpercent_text_font"] = "Expressway",
["level_text_size"] = 8,
["cast"] = {
135,
7,
},
["spellpercent_text_anchor"] = {
["x"] = 0.9999977350234985,
["side"] = 5,
},
["enabled"] = false,
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["quest_color"] = {
1,
0.49803921568627,
},
["actorname_text_outline"] = "OUTLINE",
["big_actortitle_text_color"] = {
nil,
0.7843137254902,
nil,
1,
},
["actorname_text_spacing"] = 9,
["quest_color_enemy"] = {
1,
0.36862745098039,
0,
1,
},
["big_actortitle_text_font"] = "Expressway",
["spellpercent_text_size"] = 9,
["big_actorname_text_color"] = {
0.25098039215686,
0.68627450980392,
0.20392156862745,
1,
},
["level_text_alpha"] = 0.2999999821186066,
["cast_incombat"] = {
135,
7,
},
["spellname_text_anchor"] = {
["y"] = -1.500002145767212,
["x"] = -1.000002264976502,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 0.4999977648258209,
["side"] = 11,
},
["spellname_text_font"] = "Expressway",
["quest_color_neutral"] = {
1,
0.65,
0,
},
["percent_text_enabled"] = true,
["percent_text_ooc"] = true,
["big_actortitle_text_size"] = 9,
["actorname_text_anchor"] = {
["y"] = 0.4999977648258209,
["x"] = 2.499997615814209,
["side"] = 10,
},
["percent_text_size"] = 10,
["percent_text_font"] = "Expressway",
["percent_show_health"] = true,
["health_incombat"] = {
135,
15,
},
["spellname_text_size"] = 9,
["health"] = {
135,
15,
},
["big_actorname_text_font"] = "Expressway",
["spellpercent_text_enabled"] = true,
},
["enemynpc"] = {
["spellpercent_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["spellpercent_text_anchor"] = {
["y"] = -1.500002145767212,
["x"] = 2.999997615814209,
["side"] = 5,
},
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 8,
["quest_color_enemy"] = {
nil,
0.49803921568627,
},
["big_actortitle_text_font"] = "Expressway",
["cast_incombat"] = {
135,
7,
},
["spellname_text_anchor"] = {
["y"] = -1.500002145767212,
["x"] = -1.000002264976502,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 0.4999977648258209,
["side"] = 11,
},
["spellname_text_font"] = "Expressway",
["quest_color_neutral"] = {
nil,
0.49803921568627,
},
["big_actorname_text_font"] = "Expressway",
["spellpercent_text_size"] = 9,
["level_text_alpha"] = 0.2999999821186066,
["percent_text_font"] = "Expressway",
["spellname_text_size"] = 9,
["health"] = {
135,
15,
},
["actorname_text_size"] = 9,
["actorname_text_anchor"] = {
["y"] = 0.4999977648258209,
["x"] = 1.999997735023499,
["side"] = 10,
},
["health_incombat"] = {
135,
15,
},
["level_text_enabled"] = false,
},
["global_health_width"] = 132,
["enemyplayer"] = {
["big_actorname_text_size"] = 10,
["spellpercent_text_font"] = "Expressway",
["level_text_size"] = 8,
["cast"] = {
135,
7,
},
["fixed_class_color"] = {
0.69803921568627,
0.1921568627451,
0.11372549019608,
},
["spellpercent_text_anchor"] = {
["y"] = -1.500002145767212,
["x"] = 2.999997615814209,
["side"] = 5,
},
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 9,
["quest_color_enemy"] = {
1,
0.49803921568627,
0,
1,
},
["big_actortitle_text_font"] = "Expressway",
["spellpercent_text_size"] = 9,
["cast_incombat"] = {
135,
7,
},
["spellname_text_anchor"] = {
["y"] = -1.500002145767212,
["x"] = -1.000002264976502,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 0.4999977648258209,
["side"] = 11,
},
["spellname_text_font"] = "Expressway",
["quest_color_neutral"] = {
1,
0.49803921568627,
0,
1,
},
["actorname_text_size"] = 10,
["big_actorname_text_font"] = "Expressway",
["big_actortitle_text_size"] = 10,
["actorname_text_anchor"] = {
["y"] = 0.4999977648258209,
["x"] = 1.999997735023499,
["side"] = 10,
},
["percent_text_font"] = "Expressway",
["quest_enabled"] = true,
["quest_color_enabled"] = true,
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["level_text_alpha"] = 0.2999999821186066,
["spellname_text_size"] = 9,
["level_text_enabled"] = false,
},
["global_health_height"] = 16,
},
["aura_y_offset"] = 1.499995470046997,
["bossmod_aura_glow_important_only"] = false,
["indicator_elite"] = false,
["bossmod_aura_width"] = 33,
["indicator_spec"] = false,
["border_thickness"] = 1.199999928474426,
["resources_settings"] = {
["global_settings"] = {
["anchor"] = {
["y"] = 9.709997177124023,
},
["show_depleted"] = false,
["scale"] = 0.80000001192093,
},
["chr"] = {
["Player-4184-004EAE08"] = "ArcaneCharges",
["Player-3674-0898468A"] = "SoulShards",
["Player-11-0E82EBCD"] = "ArcaneCharges",
["Player-3678-0D4F17CA"] = "ComboPoints",
["Player-11-0E5C6A6B"] = "ComboPoints",
["Player-970-00B46921"] = "ComboPoints",
["Player-11-0E5C6A2D"] = "ComboPoints",
["Player-3674-09CBAF8C"] = "ArcaneCharges",
["Player-3678-0D7BB774"] = "ComboPoints",
["Player-2073-09AF21B0"] = "ComboPoints",
["Player-11-0E912F58"] = "SoulShards",
["Player-5764-00018799"] = "ComboPoints",
["Player-4184-00C60F8C"] = "ArcaneCharges",
["Player-5764-0008F0CD"] = "ComboPoints",
["Player-3684-091919FE"] = "HolyPower",
["Player-4184-0021692E"] = "ComboPoints",
["Player-3296-00945C33"] = "ComboPoints",
["Player-11-0E912F44"] = "ComboPoints",
["Player-840-05B9A2BC"] = "Chi",
["Player-970-006B99B8"] = "ComboPoints",
["Player-3678-0D8642EB"] = "ComboPoints",
["Player-3678-0D4C07B5"] = "ComboPoints",
["Player-4184-00CB2DE1"] = "ComboPoints",
["Player-3678-0D44FD01"] = "ComboPoints",
["Player-840-059BACB7"] = "Chi",
["Player-4184-00C7C500"] = "HolyPower",
["Player-840-059CE3A2"] = "ComboPoints",
["Player-707-0681D240"] = "HolyPower",
["Player-707-0693663F"] = "Runes",
["Player-840-0297167F"] = "SoulShards",
["Player-11-0E89E36C"] = "ComboPoints",
["Player-4184-008FBEFA"] = "ComboPoints",
["Player-3296-00936CF9"] = "ComboPoints",
["Player-970-0065C1C7"] = "ComboPoints",
["Player-3676-0DBAB9E1"] = "ComboPoints",
["Player-3674-096625B1"] = "Chi",
["Player-5764-0008EBB9"] = "ComboPoints",
["Player-970-00B49A85"] = "ComboPoints",
["Player-840-0297816F"] = "ComboPoints",
["Player-840-038D4763"] = "ArcaneCharges",
["Player-840-05B9A20E"] = "Chi",
["Player-4604-00325132"] = "ComboPoints",
["Player-707-0682942A"] = "Essence",
["Player-970-00B2046C"] = "ComboPoints",
["Player-4184-00C8CB6C"] = "ComboPoints",
},
},
["spell_animation_list"] = {
[27285] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.075,
["scale_downY"] = 0.9,
["scale_downX"] = 0.9,
["scale_upY"] = 1.1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.075,
["scale_downY"] = 0.9,
["scale_downX"] = 0.9,
["scale_upY"] = 1.1,
},
},
[188443] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[46968] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
},
[275779] = {
["1"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[11366] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.8,
["scale_downX"] = 0.8,
["scale_upY"] = 1.15,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.8,
["scale_downX"] = 0.8,
["scale_upY"] = 1.15,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 10,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 10,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[228354] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[32645] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.04,
["scale_downY"] = 0.89999997615814,
["scale_downX"] = 0.89999997615814,
["scale_upY"] = 1.1999999284744,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.04,
["scale_downY"] = 0.89999997615814,
["scale_downX"] = 0.89999997615814,
["scale_upY"] = 1.1999999284744,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
},
[189112] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.8799999952316,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
},
[187874] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
},
[185763] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 3.6583230495453,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 3.6583230495453,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["scale_upY"] = 1.0299999713898,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["scale_upY"] = 1.0299999713898,
},
},
[31661] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[203782] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.5,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.5,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[100784] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 3,
["critical_scale"] = 1.05,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 3,
["critical_scale"] = 1.05,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[31935] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.03,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.03,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 6,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 6,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[53351] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_upY"] = 1,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_upY"] = 1,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[257045] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[107270] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.1499999910593,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.1499999910593,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[17364] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.10000000745058,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.02,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.10000000745058,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.02,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[49998] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[7268] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[206930] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_upY"] = 1,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_upY"] = 1,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[196278] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[162243] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 1,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 1,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[196819] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.04,
["scale_downY"] = 0.89999997615814,
["scale_downX"] = 0.89999997615814,
["scale_upY"] = 1.2999999523163,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.04,
["scale_downY"] = 0.89999997615814,
["scale_downX"] = 0.89999997615814,
["scale_upY"] = 1.2999999523163,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
},
[264178] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[199804] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 1.1699999570847,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0499999523163,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 1,
["scale_upY"] = 1.0499999523163,
},
},
[187708] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[185438] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 6.460000038147,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 6.460000038147,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["scale_upY"] = 1.0299999713898,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["scale_upY"] = 1.0299999713898,
},
},
[86040] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[52174] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.075,
["scale_downY"] = 0.8,
["scale_downX"] = 0.8,
["scale_upY"] = 1.15,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.075,
["scale_downY"] = 0.8,
["scale_downX"] = 0.8,
["scale_upY"] = 1.15,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["amplitude"] = 6,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["amplitude"] = 6,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
},
[2643] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[324540] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.89999997615814,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.89999997615814,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900558,
["scale_downX"] = 0.96999996900558,
["scale_upY"] = 1.0299999713898,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900558,
["scale_downX"] = 0.96999996900558,
["scale_upY"] = 1.0299999713898,
},
},
[53595] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.03,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 3,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[108853] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[204157] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 6,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 6,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.03,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.03,
},
},
[228478] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["amplitude"] = 2.5,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["amplitude"] = 2.5,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["scale_upY"] = 1.0299999713898,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["scale_upY"] = 1.0299999713898,
},
},
[148135] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 1.75,
["critical_scale"] = 1.05,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 1.75,
["critical_scale"] = 1.05,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
},
[199547] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["amplitude"] = 3,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["amplitude"] = 3,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900558,
["scale_downX"] = 0.96999996900558,
["scale_upY"] = 1.039999961853,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900558,
["scale_downX"] = 0.96999996900558,
["scale_upY"] = 1.039999961853,
},
},
[117418] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.1499999910593,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.1499999910593,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
},
[222024] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_downY"] = 0.89999997615814,
["cooldown"] = 0.75,
["scale_upY"] = 1.1000000238419,
},
["3"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_downY"] = 0.89999997615814,
["cooldown"] = 0.75,
["scale_upY"] = 1.1000000238419,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.7999999523163,
["critical_scale"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.7999999523163,
["critical_scale"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
},
[155166] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[8042] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.060000000745058,
["scale_downY"] = 0.95,
["scale_downX"] = 0.95,
["scale_upY"] = 1.05,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.060000000745058,
["scale_downY"] = 0.95,
["scale_downX"] = 0.95,
["scale_upY"] = 1.05,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
},
["indicator_scale"] = 0.99999994039536,
["border_color"] = {
nil,
nil,
nil,
1,
},
["focus_color"] = {
nil,
nil,
nil,
0.49306830763817,
},
["castbar_icon_size"] = "same as castbar plus healthbar",
["number_region"] = "eastasia",
["npc_colors"] = {
[99358] = {
true,
false,
"fuchsia",
},
[198716] = {
true,
false,
"blue",
},
[196798] = {
true,
false,
"deepskyblue",
},
[186696] = {
true,
false,
"fuchsia",
},
[194241] = {
true,
false,
"blue",
},
[164702] = {
true,
false,
"fuchsia",
},
[207796] = {
true,
false,
"fuchsia",
},
[196671] = {
true,
false,
"mediumpurple",
},
[180431] = {
true,
false,
"deepskyblue",
},
[115407] = {
true,
false,
"blue",
},
[221863] = {
true,
false,
"deepskyblue",
},
[184140] = {
true,
false,
"fuchsia",
},
[99359] = {
true,
false,
"mediumpurple",
},
[180432] = {
true,
false,
"blue",
},
[165471] = {
true,
false,
"blue",
},
[95779] = {
true,
false,
"mediumpurple",
},
[129602] = {
true,
false,
"mediumpurple",
},
[180433] = {
true,
false,
"fuchsia",
},
[98081] = {
true,
false,
"fuchsia",
},
[120651] = {
true,
false,
"gold",
},
[212786] = {
true,
false,
"fuchsia",
},
[197697] = {
true,
false,
"fuchsia",
},
[176598] = {
true,
false,
"blue",
},
[164578] = {
true,
false,
"mediumpurple",
},
[214066] = {
true,
false,
"blue",
},
[131587] = {
true,
false,
"mediumpurple",
},
[199233] = {
true,
false,
"mediumpurple",
},
[126918] = {
true,
false,
"blue",
},
[196548] = {
true,
false,
"deepskyblue",
},
[135552] = {
true,
false,
"blue",
},
[218671] = {
true,
false,
"deepskyblue",
},
[84400] = {
true,
false,
"mediumpurple",
},
[186191] = {
true,
false,
"blue",
},
[135169] = {
true,
false,
"fuchsia",
},
[206140] = {
true,
false,
"fuchsia",
},
[83761] = {
true,
false,
"mediumpurple",
},
[208698] = {
true,
false,
"fuchsia",
},
[221102] = {
true,
false,
"deepskyblue",
},
[127111] = {
true,
false,
"blue",
},
[40634] = {
true,
false,
"deepskyblue",
},
[200387] = {
true,
false,
"mediumpurple",
},
[221103] = {
true,
false,
"mediumpurple",
},
[199748] = {
true,
false,
"deepskyblue",
},
[165222] = {
true,
false,
"blue",
},
[198214] = {
true,
false,
"fuchsia",
},
[184020] = {
true,
false,
"mediumpurple",
},
[220976] = {
true,
false,
"fuchsia",
},
[223150] = {
true,
false,
"deepskyblue",
},
[199749] = {
true,
false,
"mediumpurple",
},
[168420] = {
true,
false,
"blue",
},
[165479] = {
true,
false,
"mediumpurple",
},
[192333] = {
true,
false,
"mediumpurple",
},
[178139] = {
true,
false,
"mediumpurple",
},
[83763] = {
true,
false,
"deepskyblue",
},
[184022] = {
true,
false,
"deepskyblue",
},
[220978] = {
true,
false,
"fuchsia",
},
[75899] = {
true,
false,
"fuchsia",
},
[210109] = {
true,
false,
"mediumpurple",
},
[212411] = {
true,
false,
"mediumpurple",
},
[199368] = {
true,
false,
"fuchsia",
},
[168934] = {
true,
false,
"fuchsia",
},
[211261] = {
true,
false,
"fuchsia",
},
[212412] = {
true,
false,
"fuchsia",
},
[190034] = {
true,
false,
"mediumpurple",
},
[160495] = {
true,
false,
"deepskyblue",
},
[188244] = {
true,
false,
"mediumpurple",
},
[178142] = {
true,
false,
"deepskyblue",
},
[157810] = {
true,
false,
"deepskyblue",
},
[211262] = {
true,
false,
"fuchsia",
},
[196045] = {
true,
false,
"deepskyblue",
},
[165483] = {
true,
false,
"fuchsia",
},
[194895] = {
true,
false,
"deepskyblue",
},
[168425] = {
true,
false,
"fuchsia",
},
[208450] = {
true,
false,
"mediumpurple",
},
[83893] = {
true,
false,
"blue",
},
[128969] = {
true,
false,
"fuchsia",
},
[99366] = {
true,
false,
"blue",
},
[227632] = {
true,
false,
"fuchsia",
},
[220599] = {
true,
false,
"deepskyblue",
},
[217658] = {
true,
false,
"mediumpurple",
},
[177889] = {
true,
false,
"fuchsia",
},
[187224] = {
true,
false,
"blue",
},
[211904] = {
true,
false,
"fuchsia",
},
[134284] = {
true,
false,
"deepskyblue",
},
[194897] = {
true,
false,
"fuchsia",
},
[217531] = {
true,
false,
"fuchsia",
},
[164463] = {
true,
false,
"deepskyblue",
},
[83894] = {
true,
false,
"mediumpurple",
},
[98280] = {
true,
false,
"deepskyblue",
},
[205384] = {
true,
false,
"deepskyblue",
},
[212673] = {
true,
false,
"fuchsia",
},
[172265] = {
true,
false,
"deepskyblue",
},
[227635] = {
true,
false,
"deepskyblue",
},
[217533] = {
true,
false,
"fuchsia",
},
[220730] = {
true,
false,
"mediumpurple",
},
[177892] = {
true,
false,
"blue",
},
[220986] = {
true,
false,
"fuchsia",
},
[165872] = {
true,
false,
"fuchsia",
},
[214209] = {
true,
false,
"deepskyblue",
},
[131858] = {
true,
false,
"mediumpurple",
},
[213954] = {
true,
false,
"mediumpurple",
},
[114266] = {
true,
false,
"deepskyblue",
},
[207177] = {
true,
false,
"mediumpurple",
},
[127757] = {
true,
false,
"mediumpurple",
},
[208456] = {
true,
false,
"blue",
},
[220988] = {
true,
false,
"fuchsia",
},
[190426] = {
true,
false,
"fuchsia",
},
[189531] = {
true,
false,
"blue",
},
[162038] = {
true,
false,
"mediumpurple",
},
[98538] = {
true,
false,
"fuchsia",
},
[150146] = {
true,
false,
"fuchsia",
},
[137103] = {
true,
false,
"fuchsia",
},
[101991] = {
true,
false,
"blue",
},
[162039] = {
true,
false,
"deepskyblue",
},
[97068] = {
true,
false,
"mediumpurple",
},
[75713] = {
true,
false,
"deepskyblue",
},
[186208] = {
true,
false,
"mediumpurple",
},
[162040] = {
true,
false,
"fuchsia",
},
[195927] = {
true,
false,
"mediumpurple",
},
[170480] = {
true,
false,
"mediumpurple",
},
[208459] = {
true,
false,
"deepskyblue",
},
[52019] = {
true,
false,
"fuchsia",
},
[83578] = {
true,
false,
"mediumpurple",
},
[227513] = {
true,
false,
"deepskyblue",
},
[171376] = {
true,
false,
"blue",
},
[190174] = {
true,
false,
"fuchsia",
},
[203857] = {
true,
false,
"deepskyblue",
},
[227514] = {
true,
false,
"fuchsia",
},
[195929] = {
true,
false,
"mediumpurple",
},
[221760] = {
true,
false,
"blue",
},
[223423] = {
true,
false,
"mediumpurple",
},
[195930] = {
true,
false,
"mediumpurple",
},
[170483] = {
true,
false,
"fuchsia",
},
[39392] = {
true,
false,
"mediumpurple",
},
[193373] = {
true,
false,
"fuchsia",
},
[228539] = {
true,
false,
"deepskyblue",
},
[168310] = {
true,
false,
"fuchsia",
},
[133912] = {
true,
false,
"blue",
},
[114334] = {
true,
false,
"mediumpurple",
},
[208208] = {
true,
false,
"mediumpurple",
},
[75652] = {
true,
false,
"fuchsia",
},
[197595] = {
true,
false,
"mediumpurple",
},
[203861] = {
true,
false,
"mediumpurple",
},
[190690] = {
true,
false,
"mediumpurple",
},
[179821] = {
true,
false,
"fuchsia",
},
[83389] = {
true,
false,
"mediumpurple",
},
[157571] = {
true,
false,
"deepskyblue",
},
[129552] = {
true,
false,
"mediumpurple",
},
[154758] = {
true,
false,
"fuchsia",
},
[162047] = {
true,
false,
"mediumpurple",
},
[118491] = {
true,
false,
"deepskyblue",
},
[115486] = {
true,
false,
"mediumpurple",
},
[90998] = {
true,
false,
"blue",
},
[224962] = {
true,
false,
"deepskyblue",
},
[157572] = {
true,
false,
"deepskyblue",
},
[164861] = {
true,
false,
"blue",
},
[114783] = {
true,
false,
"deepskyblue",
},
[105704] = {
true,
false,
"blue",
},
[166396] = {
true,
false,
"blue",
},
[215756] = {
true,
false,
"fuchsia",
},
[187240] = {
true,
false,
"mediumpurple",
},
[129553] = {
true,
false,
"fuchsia",
},
[174197] = {
true,
false,
"deepskyblue",
},
[202969] = {
true,
false,
"fuchsia",
},
[171384] = {
true,
false,
"blue",
},
[168443] = {
true,
false,
"blue",
},
[77700] = {
true,
false,
"deepskyblue",
},
[84989] = {
true,
false,
"deepskyblue",
},
[184300] = {
true,
false,
"mediumpurple",
},
[180336] = {
true,
false,
"deepskyblue",
},
[170490] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"blue",
},
[175861] = {
true,
false,
"fuchsia",
},
[184301] = {
true,
false,
"deepskyblue",
},
[202971] = {
true,
false,
"deepskyblue",
},
[225605] = {
true,
false,
"deepskyblue",
},
[115488] = {
true,
false,
"blue",
},
[91000] = {
true,
false,
"mediumpurple",
},
[164737] = {
true,
false,
"fuchsia",
},
[81985] = {
true,
false,
"deepskyblue",
},
[122969] = {
true,
false,
"deepskyblue",
},
[40577] = {
true,
false,
"mediumpurple",
},
[191847] = {
true,
false,
"deepskyblue",
},
[150160] = {
true,
false,
"mediumpurple",
},
[178165] = {
true,
false,
"fuchsia",
},
[225479] = {
true,
false,
"blue",
},
[104300] = {
true,
false,
"deepskyblue",
},
[175992] = {
true,
false,
"fuchsia",
},
[122970] = {
true,
false,
"fuchsia",
},
[131492] = {
true,
false,
"blue",
},
[76104] = {
true,
false,
"blue",
},
[86526] = {
true,
false,
"blue",
},
[135329] = {
true,
false,
"fuchsia",
},
[81603] = {
true,
false,
"mediumpurple",
},
[166275] = {
true,
false,
"deepskyblue",
},
[196198] = {
true,
false,
"blue",
},
[174843] = {
true,
false,
"mediumpurple",
},
[219983] = {
true,
false,
"mediumpurple",
},
[122971] = {
true,
false,
"mediumpurple",
},
[166276] = {
true,
false,
"mediumpurple",
},
[168578] = {
true,
false,
"deepskyblue",
},
[150292] = {
true,
false,
"blue",
},
[218961] = {
true,
false,
"fuchsia",
},
[45917] = {
true,
false,
"mediumpurple",
},
[220368] = {
true,
false,
"fuchsia",
},
[211289] = {
true,
false,
"fuchsia",
},
[150165] = {
true,
false,
"deepskyblue",
},
[198502] = {
true,
false,
"deepskyblue",
},
[122972] = {
true,
false,
"deepskyblue",
},
[205152] = {
true,
false,
"mediumpurple",
},
[92538] = {
true,
false,
"fuchsia",
},
[198503] = {
true,
false,
"deepskyblue",
},
[99891] = {
true,
false,
"mediumpurple",
},
[180473] = {
true,
false,
"blue",
},
[207199] = {
true,
false,
"blue",
},
[196202] = {
true,
false,
"blue",
},
[212826] = {
true,
false,
"mediumpurple",
},
[164873] = {
true,
false,
"fuchsia",
},
[122973] = {
true,
false,
"blue",
},
[180474] = {
true,
false,
"fuchsia",
},
[183671] = {
true,
false,
"fuchsia",
},
[129367] = {
true,
false,
"blue",
},
[212827] = {
true,
false,
"fuchsia",
},
[129559] = {
true,
false,
"fuchsia",
},
[186741] = {
true,
false,
"deepskyblue",
},
[150169] = {
true,
false,
"mediumpurple",
},
[150297] = {
true,
false,
"deepskyblue",
},
[174210] = {
true,
false,
"deepskyblue",
},
[100532] = {
true,
false,
"fuchsia",
},
[207202] = {
true,
false,
"deepskyblue",
},
[182778] = {
true,
false,
"fuchsia",
},
[163086] = {
true,
false,
"blue",
},
[91006] = {
true,
false,
"deepskyblue",
},
[173189] = {
true,
false,
"deepskyblue",
},
[205158] = {
true,
false,
"fuchsia",
},
[129369] = {
true,
false,
"fuchsia",
},
[97720] = {
true,
false,
"fuchsia",
},
[212831] = {
true,
false,
"mediumpurple",
},
[45919] = {
true,
false,
"mediumpurple",
},
[187768] = {
true,
false,
"deepskyblue",
},
[222167] = {
true,
false,
"deepskyblue",
},
[153882] = {
true,
false,
"deepskyblue",
},
[187897] = {
true,
false,
"fuchsia",
},
[179841] = {
true,
false,
"deepskyblue",
},
[151325] = {
true,
false,
"fuchsia",
},
[213217] = {
true,
false,
"deepskyblue",
},
[40357] = {
true,
false,
"fuchsia",
},
[188026] = {
true,
false,
"fuchsia",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumpurple",
},
[183423] = {
true,
false,
"deepskyblue",
},
[165137] = {
true,
false,
"mediumpurple",
},
[187771] = {
true,
false,
"blue",
},
[168718] = {
true,
false,
"blue",
},
[144294] = {
true,
false,
"deepskyblue",
},
[184319] = {
true,
false,
"blue",
},
[165010] = {
true,
false,
"mediumpurple",
},
[200943] = {
true,
false,
"mediumpurple",
},
[191225] = {
true,
false,
"mediumpurple",
},
[206698] = {
true,
false,
"blue",
},
[183425] = {
true,
false,
"blue",
},
[154014] = {
true,
false,
"deepskyblue",
},
[212453] = {
true,
false,
"deepskyblue",
},
[40166] = {
true,
false,
"mediumpurple",
},
[144296] = {
true,
false,
"mediumpurple",
},
[205804] = {
true,
false,
"mediumpurple",
},
[179334] = {
true,
false,
"fuchsia",
},
[176521] = {
true,
false,
"blue",
},
[163862] = {
true,
false,
"blue",
},
[190588] = {
true,
false,
"mediumpurple",
},
[191739] = {
true,
false,
"mediumpurple",
},
[224731] = {
true,
false,
"mediumpurple",
},
[179847] = {
true,
false,
"fuchsia",
},
[144298] = {
true,
false,
"blue",
},
[176523] = {
true,
false,
"mediumpurple",
},
[133685] = {
true,
false,
"fuchsia",
},
[190206] = {
true,
false,
"blue",
},
[180104] = {
true,
false,
"deepskyblue",
},
[224221] = {
true,
false,
"mediumpurple",
},
[114796] = {
true,
false,
"blue",
},
[216293] = {
true,
false,
"blue",
},
[96574] = {
true,
false,
"mediumpurple",
},
[210539] = {
true,
false,
"mediumpurple",
},
[190207] = {
true,
false,
"deepskyblue",
},
[189265] = {
true,
false,
"blue",
},
[188673] = {
true,
false,
"mediumpurple",
},
[150251] = {
true,
false,
"blue",
},
[104247] = {
true,
false,
"deepskyblue",
},
[130909] = {
true,
false,
"fuchsia",
},
[95842] = {
true,
false,
"deepskyblue",
},
[196856] = {
true,
false,
"mediumpurple",
},
[190686] = {
true,
false,
"blue",
},
[114319] = {
true,
false,
"blue",
},
[85194] = {
true,
false,
"fuchsia",
},
[154020] = {
true,
false,
"deepskyblue",
},
[179852] = {
true,
false,
"blue",
},
[164506] = {
true,
false,
"blue",
},
[191232] = {
true,
false,
"blue",
},
[98813] = {
true,
false,
"deepskyblue",
},
[165913] = {
true,
false,
"fuchsia",
},
[45922] = {
true,
false,
"deepskyblue",
},
[206066] = {
true,
false,
"deepskyblue",
},
[190403] = {
true,
false,
"mediumpurple",
},
[221667] = {
true,
false,
"deepskyblue",
},
[173714] = {
true,
false,
"mediumpurple",
},
[214762] = {
true,
false,
"fuchsia",
},
[186246] = {
true,
false,
"deepskyblue",
},
[115757] = {
true,
false,
"mediumpurple",
},
[155812] = {
true,
false,
"blue",
},
[198263] = {
true,
false,
"mediumpurple",
},
[224609] = {
true,
false,
"fuchsia",
},
[150250] = {
true,
false,
"deepskyblue",
},
[208438] = {
true,
false,
"mediumpurple",
},
[229537] = {
true,
false,
"yellow",
},
[193760] = {
true,
false,
"mediumpurple",
},
[127106] = {
true,
false,
"fuchsia",
},
[178171] = {
true,
false,
"fuchsia",
},
[199124] = {
true,
false,
"deepskyblue",
},
[166299] = {
true,
false,
"blue",
},
[211121] = {
true,
false,
"mediumpurple",
},
[56792] = {
true,
false,
"fuchsia",
},
[190340] = {
true,
false,
"blue",
},
[199547] = {
true,
false,
"fuchsia",
},
[223777] = {
true,
false,
"blue",
},
[204918] = {
true,
false,
"blue",
},
[100527] = {
true,
false,
"deepskyblue",
},
[178392] = {
true,
false,
"fuchsia",
},
[200137] = {
true,
false,
"deepskyblue",
},
[164510] = {
true,
false,
"fuchsia",
},
[171799] = {
true,
false,
"fuchsia",
},
[208440] = {
true,
false,
"mediumpurple",
},
[167963] = {
true,
false,
"blue",
},
[170882] = {
true,
false,
"blue",
},
[180495] = {
true,
false,
"fuchsia",
},
[199037] = {
true,
false,
"deepskyblue",
},
[176974] = {
true,
false,
"fuchsia",
},
[114544] = {
true,
false,
"fuchsia",
},
[156157] = {
true,
false,
"blue",
},
[190342] = {
true,
false,
"fuchsia",
},
[98368] = {
true,
false,
"mediumpurple",
},
[122984] = {
true,
false,
"fuchsia",
},
[41096] = {
true,
false,
"blue",
},
[166302] = {
true,
false,
"deepskyblue",
},
[173016] = {
true,
false,
"deepskyblue",
},
[211291] = {
true,
false,
"mediumpurple",
},
[205623] = {
true,
false,
"mediumpurple",
},
[164707] = {
true,
false,
"mediumpurple",
},
[165919] = {
true,
false,
"mediumpurple",
},
[214350] = {
true,
false,
"deepskyblue",
},
[195842] = {
true,
false,
"blue",
},
[180091] = {
true,
false,
"mediumpurple",
},
[104251] = {
true,
false,
"fuchsia",
},
[173720] = {
true,
false,
"mediumpurple",
},
[163618] = {
true,
false,
"blue",
},
[81212] = {
true,
false,
"mediumpurple",
},
[227300] = {
true,
false,
"mediumpurple",
},
[214761] = {
true,
false,
"mediumpurple",
},
[212403] = {
true,
false,
"blue",
},
[165763] = {
true,
false,
"deepskyblue",
},
[186220] = {
true,
false,
"deepskyblue",
},
[65317] = {
true,
false,
"mediumpurple",
},
[186125] = {
true,
false,
"deepskyblue",
},
[101438] = {
true,
false,
"blue",
},
[167967] = {
true,
false,
"blue",
},
[173655] = {
true,
false,
"mediumpurple",
},
[206074] = {
true,
false,
"deepskyblue",
},
[217039] = {
true,
false,
"mediumpurple",
},
[165410] = {
true,
false,
"mediumpurple",
},
[205435] = {
true,
false,
"mediumpurple",
},
[163620] = {
true,
false,
"mediumpurple",
},
[205691] = {
true,
false,
"blue",
},
[98370] = {
true,
false,
"deepskyblue",
},
[184335] = {
true,
false,
"deepskyblue",
},
[223774] = {
true,
false,
"blue",
},
[154744] = {
true,
false,
"fuchsia",
},
[179733] = {
true,
false,
"fuchsia",
},
[168942] = {
true,
false,
"blue",
},
[163621] = {
true,
false,
"mediumpurple",
},
[45915] = {
true,
false,
"mediumpurple",
},
[168992] = {
true,
false,
"deepskyblue",
},
[180335] = {
true,
false,
"deepskyblue",
},
[118489] = {
true,
false,
"fuchsia",
},
[104278] = {
true,
false,
"fuchsia",
},
[196102] = {
true,
false,
"deepskyblue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[98243] = {
true,
false,
"mediumpurple",
},
[188302] = {
true,
false,
"yellow",
},
[83026] = {
true,
false,
"mediumpurple",
},
[114803] = {
true,
false,
"deepskyblue",
},
[164567] = {
true,
false,
"deepskyblue",
},
[102232] = {
true,
false,
"blue",
},
[81236] = {
true,
false,
"deepskyblue",
},
[130404] = {
true,
false,
"mediumpurple",
},
[189555] = {
true,
false,
"deepskyblue",
},
[100531] = {
true,
false,
"mediumpurple",
},
[189706] = {
true,
false,
"yellow",
},
[82579] = {
true,
false,
"deepskyblue",
},
[198868] = {
true,
false,
"deepskyblue",
},
[203230] = {
true,
false,
"blue",
},
[165414] = {
true,
false,
"deepskyblue",
},
[184131] = {
true,
false,
"fuchsia",
},
[193291] = {
true,
false,
"fuchsia",
},
[151476] = {
true,
false,
"mediumpurple",
},
[191164] = {
true,
false,
"fuchsia",
},
[155824] = {
true,
false,
"blue",
},
[220401] = {
true,
false,
"fuchsia",
},
[175517] = {
true,
false,
"blue",
},
[223772] = {
true,
false,
"blue",
},
[180864] = {
true,
false,
"fuchsia",
},
[187154] = {
true,
false,
"fuchsia",
},
[75459] = {
true,
false,
"deepskyblue",
},
[218324] = {
true,
false,
"fuchsia",
},
[135365] = {
true,
false,
"fuchsia",
},
[216621] = {
true,
false,
"fuchsia",
},
[129370] = {
true,
false,
"deepskyblue",
},
[83390] = {
true,
false,
"deepskyblue",
},
[194316] = {
true,
false,
"mediumpurple",
},
[187155] = {
true,
false,
"blue",
},
[210812] = {
true,
false,
"deepskyblue",
},
[163882] = {
true,
false,
"mediumpurple",
},
[169861] = {
true,
false,
"blue",
},
[204206] = {
true,
false,
"blue",
},
[213806] = {
true,
false,
"deepskyblue",
},
[201222] = {
true,
false,
"mediumpurple",
},
[173729] = {
true,
false,
"fuchsia",
},
[194317] = {
true,
false,
"mediumpurple",
},
[84499] = {
true,
false,
"fuchsia",
},
[81984] = {
true,
false,
"mediumpurple",
},
[168153] = {
true,
false,
"fuchsia",
},
[226200] = {
true,
false,
"blue",
},
[164461] = {
true,
false,
"blue",
},
[201223] = {
true,
false,
"blue",
},
[135474] = {
true,
false,
"blue",
},
[180429] = {
true,
false,
"mediumpurple",
},
[59555] = {
true,
false,
"fuchsia",
},
[115765] = {
true,
false,
"fuchsia",
},
[200840] = {
true,
false,
"mediumpurple",
},
[205622] = {
true,
false,
"mediumpurple",
},
[211290] = {
true,
false,
"mediumpurple",
},
[156212] = {
true,
false,
"deepskyblue",
},
[206064] = {
true,
false,
"blue",
},
[224732] = {
true,
false,
"deepskyblue",
},
[194894] = {
true,
false,
"blue",
},
[135241] = {
true,
false,
"deepskyblue",
},
[214140] = {
true,
false,
"mediumpurple",
},
[184580] = {
true,
false,
"deepskyblue",
},
[40167] = {
true,
false,
"blue",
},
[178008] = {
true,
false,
"yellow",
},
[133835] = {
true,
false,
"blue",
},
[222964] = {
true,
false,
"blue",
},
[213885] = {
true,
false,
"fuchsia",
},
[126919] = {
true,
false,
"deepskyblue",
},
[100485] = {
true,
false,
"mediumpurple",
},
[98810] = {
true,
false,
"mediumpurple",
},
[183707] = {
true,
false,
"deepskyblue",
},
[197698] = {
true,
false,
"fuchsia",
},
[187160] = {
true,
false,
"blue",
},
[182045] = {
true,
false,
"fuchsia",
},
[81432] = {
true,
false,
"deepskyblue",
},
[198869] = {
true,
false,
"deepskyblue",
},
[155831] = {
true,
false,
"fuchsia",
},
[165805] = {
true,
false,
"mediumpurple",
},
[206214] = {
true,
false,
"mediumpurple",
},
[215755] = {
true,
false,
"fuchsia",
},
[187033] = {
true,
false,
"mediumpurple",
},
[168747] = {
true,
false,
"fuchsia",
},
[102404] = {
true,
false,
"mediumpurple",
},
[206697] = {
true,
false,
"deepskyblue",
},
[100486] = {
true,
false,
"deepskyblue",
},
[163121] = {
true,
false,
"blue",
},
[101637] = {
true,
false,
"mediumpurple",
},
[157017] = {
true,
false,
"blue",
},
[102788] = {
true,
false,
"blue",
},
[224219] = {
true,
false,
"deepskyblue",
},
[135245] = {
true,
false,
"mediumpurple",
},
[189464] = {
true,
false,
"blue",
},
[168109] = {
true,
false,
"deepskyblue",
},
[162099] = {
true,
false,
"fuchsia",
},
[168418] = {
true,
false,
"deepskyblue",
},
[177808] = {
true,
false,
"mediumpurple",
},
[180323] = {
true,
false,
"fuchsia",
},
[115640] = {
true,
false,
"fuchsia",
},
[138187] = {
true,
false,
"fuchsia",
},
[129374] = {
true,
false,
"mediumpurple",
},
[197905] = {
true,
false,
"blue",
},
[87252] = {
true,
false,
"mediumpurple",
},
[40936] = {
true,
false,
"mediumpurple",
},
[131666] = {
true,
false,
"blue",
},
[83892] = {
true,
false,
"deepskyblue",
},
[212739] = {
true,
false,
"mediumpurple",
},
[184331] = {
true,
false,
"mediumpurple",
},
[189466] = {
true,
false,
"mediumpurple",
},
[45928] = {
true,
false,
"mediumpurple",
},
[192791] = {
true,
false,
"fuchsia",
},
[176551] = {
true,
false,
"deepskyblue",
},
[165529] = {
true,
false,
"blue",
},
[144071] = {
true,
false,
"deepskyblue",
},
[223844] = {
true,
false,
"deepskyblue",
},
[190362] = {
true,
false,
"blue",
},
[224249] = {
true,
false,
"fuchsia",
},
[59546] = {
true,
false,
"blue",
},
[199549] = {
true,
false,
"fuchsia",
},
[59547] = {
true,
false,
"mediumpurple",
},
[196117] = {
true,
false,
"mediumpurple",
},
[220974] = {
true,
false,
"fuchsia",
},
[223994] = {
true,
false,
"deepskyblue",
},
[213892] = {
true,
false,
"deepskyblue",
},
[211263] = {
true,
false,
"fuchsia",
},
[179842] = {
true,
false,
"fuchsia",
},
[163126] = {
true,
false,
"deepskyblue",
},
[193944] = {
true,
false,
"blue",
},
[165556] = {
true,
false,
"fuchsia",
},
[81819] = {
true,
false,
"blue",
},
[115642] = {
true,
false,
"blue",
},
[213893] = {
true,
false,
"deepskyblue",
},
[163894] = {
true,
false,
"blue",
},
[186226] = {
true,
false,
"fuchsia",
},
[166301] = {
true,
false,
"fuchsia",
},
[45912] = {
true,
false,
"deepskyblue",
},
[198500] = {
true,
false,
"deepskyblue",
},
[76446] = {
true,
false,
"blue",
},
[169905] = {
true,
false,
"blue",
},
[168882] = {
true,
false,
"fuchsia",
},
[189470] = {
true,
false,
"deepskyblue",
},
[171184] = {
true,
false,
"mediumpurple",
},
[163128] = {
true,
false,
"deepskyblue",
},
[81820] = {
true,
false,
"deepskyblue",
},
[223253] = {
true,
false,
"deepskyblue",
},
[168627] = {
true,
false,
"deepskyblue",
},
[204560] = {
true,
false,
"yellow",
},
[94224] = {
true,
false,
"fuchsia",
},
[197219] = {
true,
false,
"mediumpurple",
},
[227578] = {
true,
false,
"deepskyblue",
},
[186658] = {
true,
false,
"deepskyblue",
},
[83025] = {
true,
false,
"blue",
},
[206351] = {
true,
false,
"deepskyblue",
},
[150168] = {
true,
false,
"fuchsia",
},
[188703] = {
true,
false,
"yellow",
},
[132126] = {
true,
false,
"blue",
},
[115388] = {
true,
false,
"fuchsia",
},
[198424] = {
true,
false,
"blue",
},
[216326] = {
true,
false,
"deepskyblue",
},
[199595] = {
true,
false,
"mediumpurple",
},
[197145] = {
true,
false,
"mediumpurple",
},
[197146] = {
true,
false,
"mediumpurple",
},
[218884] = {
true,
false,
"fuchsia",
},
[190368] = {
true,
false,
"fuchsia",
},
[199703] = {
true,
false,
"fuchsia",
},
[59873] = {
true,
false,
"mediumpurple",
},
[116549] = {
true,
false,
"deepskyblue",
},
[188067] = {
true,
false,
"deepskyblue",
},
[156226] = {
true,
false,
"deepskyblue",
},
[153285] = {
false,
false,
"yellow",
},
[165762] = {
true,
false,
"fuchsia",
},
[168886] = {
true,
false,
"deepskyblue",
},
[227581] = {
true,
false,
"deepskyblue",
},
[45930] = {
true,
false,
"fuchsia",
},
[216328] = {
true,
false,
"fuchsia",
},
[211341] = {
true,
false,
"mediumpurple",
},
[157634] = {
true,
false,
"blue",
},
[40943] = {
true,
false,
"deepskyblue",
},
[169927] = {
true,
false,
"fuchsia",
},
[190370] = {
true,
false,
"mediumpurple",
},
[166969] = {
true,
false,
"deepskyblue",
},
[156244] = {
true,
false,
"mediumpurple",
},
[192800] = {
true,
false,
"deepskyblue",
},
[41139] = {
true,
false,
"blue",
},
[137830] = {
true,
false,
"blue",
},
[59553] = {
true,
false,
"mediumpurple",
},
[105715] = {
true,
false,
"blue",
},
[169159] = {
true,
false,
"gold",
},
[166970] = {
true,
false,
"blue",
},
[82590] = {
true,
false,
"blue",
},
[128434] = {
true,
false,
"blue",
},
[163520] = {
true,
false,
"mediumpurple",
},
[131677] = {
true,
false,
"fuchsia",
},
[189235] = {
true,
false,
"mediumpurple",
},
[180015] = {
true,
false,
"blue",
},
[172981] = {
true,
false,
"mediumpurple",
},
[166971] = {
true,
false,
"fuchsia",
},
[113537] = {
true,
false,
"mediumpurple",
},
[152905] = {
true,
false,
"fuchsia",
},
[197406] = {
true,
false,
"fuchsia",
},
[164414] = {
true,
false,
"deepskyblue",
},
[166589] = {
true,
false,
"fuchsia",
},
[184107] = {
true,
false,
"mediumpurple",
},
[190373] = {
true,
false,
"deepskyblue",
},
[164926] = {
true,
false,
"fuchsia",
},
[82597] = {
true,
false,
"fuchsia",
},
[203812] = {
true,
false,
"fuchsia",
},
[206230] = {
true,
false,
"fuchsia",
},
[84957] = {
true,
false,
"fuchsia",
},
[167612] = {
true,
false,
"blue",
},
[114624] = {
true,
false,
"mediumpurple",
},
[197535] = {
true,
false,
"fuchsia",
},
[45704] = {
true,
false,
"dimgray",
},
[186229] = {
true,
false,
"mediumpurple",
},
[214287] = {
true,
false,
"yellow",
},
[198047] = {
true,
false,
"blue",
},
[200836] = {
true,
false,
"mediumpurple",
},
[98275] = {
true,
false,
"blue",
},
[205337] = {
true,
false,
"fuchsia",
},
[167998] = {
true,
false,
"mediumpurple",
},
[224271] = {
true,
false,
"deepskyblue",
},
[86684] = {
true,
false,
"deepskyblue",
},
[76518] = {
true,
false,
"fuchsia",
},
[176565] = {
true,
false,
"deepskyblue",
},
[177716] = {
true,
false,
"deepskyblue",
},
[169924] = {
true,
false,
"mediumpurple",
},
[101326] = {
true,
false,
"fuchsia",
},
[165824] = {
true,
false,
"fuchsia",
},
[164929] = {
true,
false,
"blue",
},
[220946] = {
true,
false,
"mediumpurple",
},
[173044] = {
true,
false,
"deepskyblue",
},
[192934] = {
true,
false,
"blue",
},
[228540] = {
true,
false,
"deepskyblue",
},
[214673] = {
true,
false,
"blue",
},
[175550] = {
true,
false,
"fuchsia",
},
[190377] = {
true,
false,
"blue",
},
[190688] = {
true,
false,
"mediumpurple",
},
[155830] = {
true,
false,
"deepskyblue",
},
[195876] = {
true,
false,
"deepskyblue",
},
[84767] = {
true,
false,
"fuchsia",
},
[114626] = {
true,
false,
"fuchsia",
},
[163524] = {
true,
false,
"fuchsia",
},
[189227] = {
true,
false,
"fuchsia",
},
[214419] = {
true,
false,
"mediumpurple",
},
[210966] = {
true,
false,
"blue",
},
[98706] = {
true,
false,
"mediumpurple",
},
[195877] = {
true,
false,
"fuchsia",
},
[168384] = {
true,
false,
"blue",
},
[198311] = {
true,
false,
"mediumpurple",
},
[131812] = {
true,
false,
"fuchsia",
},
[84520] = {
true,
false,
"mediumpurple",
},
[114804] = {
true,
false,
"blue",
},
[220141] = {
true,
false,
"deepskyblue",
},
[101008] = {
true,
false,
"fuchsia",
},
[216338] = {
true,
false,
"mediumpurple",
},
[102287] = {
true,
false,
"mediumpurple",
},
[131685] = {
true,
false,
"deepskyblue",
},
[198308] = {
true,
false,
"mediumpurple",
},
[114627] = {
true,
false,
"blue",
},
[197671] = {
true,
false,
"blue",
},
[167876] = {
true,
false,
"fuchsia",
},
[214012] = {
true,
false,
"mediumpurple",
},
[216339] = {
true,
false,
"blue",
},
[214421] = {
true,
false,
"blue",
},
[220815] = {
true,
false,
"blue",
},
[196263] = {
true,
false,
"deepskyblue",
},
[213343] = {
true,
false,
"mediumpurple",
},
[190381] = {
true,
false,
"fuchsia",
},
[210269] = {
true,
false,
"mediumpurple",
},
[115395] = {
true,
false,
"mediumpurple",
},
[216340] = {
true,
false,
"fuchsia",
},
[168594] = {
true,
false,
"mediumpurple",
},
[104270] = {
true,
false,
"mediumpurple",
},
[80805] = {
true,
false,
"mediumpurple",
},
[198501] = {
true,
false,
"deepskyblue",
},
[205727] = {
true,
false,
"blue",
},
[199717] = {
true,
false,
"mediumpurple",
},
[197799] = {
true,
false,
"deepskyblue",
},
[102095] = {
true,
false,
"blue",
},
[59552] = {
true,
false,
"blue",
},
[201288] = {
true,
false,
"fuchsia",
},
[170690] = {
true,
false,
"blue",
},
[205212] = {
true,
false,
"fuchsia",
},
[130400] = {
true,
false,
"mediumpurple",
},
[180070] = {
true,
false,
"fuchsia",
},
[40925] = {
true,
false,
"mediumpurple",
},
[177817] = {
true,
false,
"blue",
},
[176573] = {
true,
false,
"fuchsia",
},
[155090] = {
true,
false,
"deepskyblue",
},
[194315] = {
true,
false,
"mediumpurple",
},
[114629] = {
true,
false,
"blue",
},
[213913] = {
true,
false,
"deepskyblue",
},
[186420] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[211228] = {
true,
false,
"blue",
},
[221945] = {
true,
false,
"fuchsia",
},
[151127] = {
true,
false,
"fuchsia",
},
[191206] = {
true,
false,
"deepskyblue",
},
[189234] = {
true,
false,
"fuchsia",
},
[129527] = {
true,
false,
"blue",
},
[168007] = {
true,
false,
"blue",
},
[179388] = {
true,
false,
"deepskyblue",
},
[101075] = {
true,
false,
"fuchsia",
},
[176575] = {
true,
false,
"deepskyblue",
},
[199325] = {
true,
false,
"deepskyblue",
},
[131819] = {
true,
false,
"deepskyblue",
},
[176959] = {
true,
false,
"deepskyblue",
},
[80935] = {
true,
false,
"deepskyblue",
},
[197149] = {
true,
false,
"deepskyblue",
},
[167113] = {
true,
false,
"blue",
},
[131436] = {
true,
false,
"mediumpurple",
},
[194990] = {
true,
false,
"deepskyblue",
},
[155221] = {
true,
false,
"deepskyblue",
},
[96664] = {
true,
false,
"blue",
},
[212765] = {
true,
false,
"mediumpurple",
},
[95769] = {
true,
false,
"deepskyblue",
},
[96587] = {
true,
false,
"deepskyblue",
},
[185528] = {
true,
false,
"deepskyblue",
},
[185656] = {
true,
false,
"deepskyblue",
},
[167607] = {
true,
false,
"mediumpurple",
},
[156245] = {
true,
false,
"mediumpurple",
},
[131821] = {
true,
false,
"blue",
},
[164557] = {
true,
false,
"mediumpurple",
},
[80936] = {
true,
false,
"blue",
},
[164921] = {
true,
false,
"deepskyblue",
},
[185529] = {
true,
false,
"fuchsia",
},
[165197] = {
true,
false,
"fuchsia",
},
[209801] = {
true,
false,
"mediumpurple",
},
[208193] = {
true,
false,
"blue",
},
[183033] = {
true,
false,
"mediumpurple",
},
[192796] = {
true,
false,
"blue",
},
[129529] = {
true,
false,
"fuchsia",
},
[95834] = {
true,
false,
"fuchsia",
},
[45935] = {
true,
false,
"deepskyblue",
},
[152898] = {
true,
false,
"fuchsia",
},
[189878] = {
true,
false,
"yellow",
},
[173190] = {
true,
false,
"deepskyblue",
},
[114584] = {
true,
false,
"mediumpurple",
},
[114632] = {
true,
false,
"deepskyblue",
},
[205735] = {
true,
false,
"blue",
},
[198702] = {
true,
false,
"mediumpurple",
},
[227575] = {
true,
false,
"blue",
},
[208165] = {
true,
false,
"deepskyblue",
},
[168396] = {
true,
false,
"mediumpurple",
},
[86372] = {
true,
false,
"mediumpurple",
},
[133870] = {
true,
false,
"deepskyblue",
},
[179010] = {
true,
false,
"deepskyblue",
},
[95771] = {
true,
false,
"blue",
},
[227573] = {
true,
false,
"mediumpurple",
},
[151773] = {
true,
false,
"blue",
},
[196115] = {
true,
false,
"fuchsia",
},
[167965] = {
true,
false,
"blue",
},
[178141] = {
true,
false,
"blue",
},
[212389] = {
true,
false,
"blue",
},
[114633] = {
true,
false,
"mediumpurple",
},
[80938] = {
true,
false,
"mediumpurple",
},
[88163] = {
true,
false,
"fuchsia",
},
[196576] = {
true,
false,
"blue",
},
[98521] = {
true,
false,
"fuchsia",
},
[192788] = {
true,
false,
"fuchsia",
},
[170572] = {
true,
false,
"blue",
},
[164562] = {
true,
false,
"fuchsia",
},
[192767] = {
true,
false,
"mediumpurple",
},
[198577] = {
true,
false,
"blue",
},
[196203] = {
true,
false,
"deepskyblue",
},
[213338] = {
true,
false,
"deepskyblue",
},
[162133] = {
true,
false,
"fuchsia",
},
[211816] = {
true,
false,
"fuchsia",
},
[84990] = {
true,
false,
"blue",
},
[164563] = {
true,
false,
"blue",
},
[221979] = {
true,
false,
"fuchsia",
},
[129372] = {
true,
false,
"blue",
},
[179269] = {
true,
false,
"fuchsia",
},
[191230] = {
true,
false,
"fuchsia",
},
[171341] = {
true,
false,
"deepskyblue",
},
[178630] = {
true,
false,
"deepskyblue",
},
[223770] = {
true,
false,
"blue",
},
[168988] = {
true,
false,
"fuchsia",
},
[189816] = {
true,
false,
"deepskyblue",
},
[194487] = {
true,
false,
"blue",
},
[155908] = {
true,
false,
"fuchsia",
},
[165076] = {
true,
false,
"blue",
},
[187969] = {
true,
false,
"blue",
},
[129788] = {
true,
false,
"deepskyblue",
},
[150253] = {
true,
false,
"mediumpurple",
},
[195696] = {
true,
false,
"fuchsia",
},
[212793] = {
true,
false,
"blue",
},
[208244] = {
true,
false,
"deepskyblue",
},
[175576] = {
true,
false,
"fuchsia",
},
[185537] = {
true,
false,
"blue",
},
[171343] = {
true,
false,
"fuchsia",
},
[223822] = {
true,
false,
"fuchsia",
},
[115019] = {
true,
false,
"deepskyblue",
},
[168658] = {
true,
false,
"fuchsia",
},
[212775] = {
true,
false,
"deepskyblue",
},
[220742] = {
true,
false,
"fuchsia",
},
[198709] = {
true,
false,
"mediumpurple",
},
[114316] = {
true,
false,
"deepskyblue",
},
[75506] = {
true,
false,
"deepskyblue",
},
[75979] = {
true,
false,
"fuchsia",
},
[223773] = {
true,
false,
"blue",
},
[198326] = {
true,
false,
"mediumpurple",
},
[184132] = {
true,
false,
"blue",
},
[195928] = {
true,
false,
"mediumpurple",
},
[171805] = {
true,
false,
"blue",
},
[207198] = {
true,
false,
"deepskyblue",
},
[198870] = {
true,
false,
"blue",
},
[162057] = {
true,
false,
"mediumpurple",
},
[115020] = {
true,
false,
"mediumpurple",
},
[180348] = {
true,
false,
"blue",
},
[184023] = {
true,
false,
"blue",
},
[196044] = {
true,
false,
"fuchsia",
},
[163459] = {
true,
false,
"blue",
},
[114317] = {
true,
false,
"deepskyblue",
},
[168318] = {
true,
false,
"mediumpurple",
},
[167964] = {
true,
false,
"fuchsia",
},
[223775] = {
true,
false,
"blue",
},
[214608] = {
true,
false,
"deepskyblue",
},
[114542] = {
true,
false,
"blue",
},
[195265] = {
true,
false,
"mediumpurple",
},
[220195] = {
true,
false,
"deepskyblue",
},
[183495] = {
true,
false,
"mediumpurple",
},
[92610] = {
true,
false,
"fuchsia",
},
[214441] = {
true,
false,
"fuchsia",
},
[223776] = {
true,
false,
"blue",
},
[214697] = {
true,
false,
"fuchsia",
},
[205618] = {
true,
false,
"mediumpurple",
},
[200126] = {
true,
false,
"blue",
},
[220196] = {
true,
false,
"fuchsia",
},
[216364] = {
true,
false,
"fuchsia",
},
[97197] = {
true,
false,
"deepskyblue",
},
[150143] = {
true,
false,
"blue",
},
[205363] = {
true,
false,
"deepskyblue",
},
[197985] = {
true,
false,
"deepskyblue",
},
[205619] = {
true,
false,
"mediumpurple",
},
[219046] = {
true,
false,
"deepskyblue",
},
[220197] = {
true,
false,
"mediumpurple",
},
[183497] = {
true,
false,
"blue",
},
[150142] = {
true,
false,
"deepskyblue",
},
[177891] = {
true,
false,
"mediumpurple",
},
[163458] = {
true,
false,
"deepskyblue",
},
[185032] = {
true,
false,
"mediumpurple",
},
[205620] = {
true,
false,
"mediumpurple",
},
[213932] = {
true,
false,
"mediumpurple",
},
[129600] = {
true,
false,
"deepskyblue",
},
[44404] = {
true,
false,
"deepskyblue",
},
[115406] = {
true,
false,
"deepskyblue",
},
[131586] = {
true,
false,
"mediumpurple",
},
[195135] = {
true,
false,
"fuchsia",
},
[80816] = {
true,
false,
"deepskyblue",
},
[168156] = {
true,
false,
"fuchsia",
},
},
["extra_icon_show_enrage_border"] = {
0.85098039215686,
0,
0.074509803921569,
},
["auto_inside_raid_dungeon"] = {
["hide_enemy_player_totems"] = true,
["hide_enemy_player_pets"] = true,
},
["hook_data"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 25,\n        \n        --Rogue\n        [\"Deathstalker's Mark\"] = 102,\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Caustic Spatter\"] = 92,\n        [\"Find Weakness\"] = 93,\n        [\"Crimson Tempest\"] = 85,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1726954906,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = true,
["Revision"] = 580,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Aura Reorder - Jundies",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 17,\n        height = 13,\n        x = 14,\n        y = 0,\n        blend = \"ADD\",\n        color = \"white\",\n    }    \n    \nend\n\n\n",
},
["Time"] = 1726954889,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["Url"] = "https://wago.io/f5itAXjQq/1",
["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_double_right_64",
["Enabled"] = true,
["Revision"] = 207,
["Options"] = {
},
["Author"] = "�r��ne-Kel'thuzad",
["Desc"] = "Adds double arrow as a target indicators option",
["Prio"] = 99,
["Name"] = "Double Arrow Target",
["PlaterCore"] = 1,
["HooksTemp"] = {
},
},
{
["OptionsValues"] = {
["SPglowfreq"] = 0.59999990463257,
["SPglowxoff"] = 0.5,
["doNotPurge"] = {
},
["SPglowyoff"] = 0.5,
["SPglowcolor"] = {
1,
1,
0.45490199327469,
1,
},
["SPglowparticle"] = 5,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    local options1 = {\n        glowType = \"button\",\n        frequency = modTable.config.SPglowfreq\n    }\n    \n    local options2 = {\n        glowType = \"pixel\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        length = modTable.config.SPpixellength,\n        th = modTable.config.SPpixelth,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n        border = modTable.config.SPpixelborder\n    }\n    \n    local options3 = {\n        glowType = \"ants\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        scale = modTable.config.SPantsscale,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff\n    }\n    \n    modTable.options =\n    (modTable.config.SPglownum == 1 and options1) or (modTable.config.SPglownum == 2 and options2) or\n    (modTable.config.SPglownum == 3 and options3)\n    \n    local doNotPurgeList = {\n        [385063] = true, -- Burning Ambition, Ruby Life Pools\n        [392454] = true, -- Burning Veins, Ruby Life Pools\n        [396020] = true, -- Golden Barrier, Temple of the Jade Serpent\n        [383161] = true -- Decay Infusion, Brackenhide Hollow\n    }\n    \n    for _, id in pairs(modTable.config.doNotPurge) do\n        doNotPurgeList[tonumber(id)] = true\n    end\n    \n    modTable.doNotPurge = function(id)\n        return doNotPurgeList[id] ~= nil\n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitFrame.healthBar:IsShown() then\n        return\n    end\n    \n    local buffSpecialGlow = true\n    local color = modTable.config.SPglowcolor\n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers[2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers[containerID]\n        \n        for _, auraIcon in ipairs(auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge and not modTable.doNotPurge(auraIcon.SpellId)) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs(unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon.canStealOrPurge and not modTable.doNotPurge(auraIcon.SpellId)) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end\n            end\n        end\n    end\nend",
},
["Time"] = 1726352819,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 132096,
["Enabled"] = true,
["Revision"] = 1059,
["semver"] = "",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Common Options",
["Name"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "1(Button) / 2(Pixel) / 3(Ants) ",
["Min"] = 1,
["Key"] = "SPglownum",
["Value"] = 2,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Glow Type",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set to negative to inverse direction of rotation",
["Min"] = -2,
["Key"] = "SPglowfreq",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Glow Frequency",
},
{
["Type"] = 1,
["Key"] = "SPglowcolor",
["Value"] = {
1,
1,
0.45490196078431,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set glow color",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel & Ants Glow",
["Name"] = "Options for Pixel & Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Set number of lines",
["Min"] = 1,
["Key"] = "SPglowparticle",
["Value"] = 6,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Number of Particles",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowxoff",
["Value"] = 1.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "X-Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowyoff",
["Value"] = 1.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Y-Offset",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel Glow",
["Name"] = "Options for Pixel Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "SPpixelborder",
["Value"] = false,
["Name"] = "Pixel Add Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable to true to create border under lines",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set pixel line length",
["Min"] = 0.01,
["Key"] = "SPpixellength",
["Value"] = 6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Pixel Line Length",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Set pixel line thickness",
["Min"] = 0.01,
["Key"] = "SPpixelth",
["Value"] = 2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Pixel Line Thickness",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Ants Glow",
["Name"] = "Options for Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 2.5,
["Desc"] = "Set ants glow scale",
["Min"] = 0.01,
["Key"] = "SPantsscale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Ants Glow Scale",
},
{
["Type"] = 7,
["Key"] = "doNotPurge",
["Value"] = {
},
["Name"] = "Do Not Purge",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "List of spells you may not want to purge for whichever reason",
},
},
["LastHookEdited"] = "",
["Name"] = "Steal/Purge Aura Glow",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1729208566,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\checked_64",
["Enabled"] = true,
["Revision"] = 121,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Force Threat Color NPC",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x62f9521d664ad",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    if not Plater.AddPerformanceUnits then\n        return\n    end\n    \n    local units = {\n        \n        -- Raids\n        [189706] = true, -- Chaotic Essence\n        [189707] = true, -- Chaotic mote\n        [176920] = true, -- Domination Arrow -- Sylv\n        [196679] = true, -- Frozen Shroud -- Broodkeeper\n        [194999] = true, -- Volatile Spark -- Raszageth\n        [191714] = true, -- Seeking Stormling -- Raszageth\n        [210231] = true, -- Tainted Lasher -- Gnarlroot\n        [211306] = true, -- Fiery vines -- Tindral\n        [219746] = true, --Tomb - Ansurek\n        \n        -- Dungeons\n        [196642] = true, -- Hungry Lasher (Boss add)\n        [197398] = true, -- Hungry Lasher\n        [208994] = true, -- Infected Lasher\n        [189363] = true, -- Infected Lasher\n        [96247] = true, -- Vileshard Crawler\n        [100529] = true, -- Hatespawn Slime\n        [84401] = true, -- Swift Sproutling (boss add)\n        \n        --Testing\n        [198594] = false, -- Testing target dummy\n        [87329] = false, -- testing\n    }\n    \n    for unit, flag in pairs(units) do\n        if flag and modTable.config.performance then\n            Plater.AddPerformanceUnits(unit)\n        else\n            Plater.RemovePerformanceUnits(unit)\n        end\n        if flag and modTable.config.forceBlizz then\n            Plater.AddForceBlizzardNameplateUnits(unit)\n        else\n            Plater.RemoveForceBlizzardNameplateUnits(unit)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1729208563,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["TANK"] = true,
["HEALER"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 458228,
["Enabled"] = true,
["Revision"] = 389,
["semver"] = "",
["Author"] = "Viashi-Argent Dawn",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Performance Units - Jundies",
["Options"] = {
{
["Type"] = 4,
["Key"] = "performance",
["Value"] = true,
["Name"] = "Performance",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "forceBlizz",
["Value"] = false,
["Name"] = "Force Blizzard",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local vt = Plater.NameplateHasAura(unitFrame, \"Vampiric Touch\")\n    \n    if vt then\n        Plater.SetNameplateColor(unitFrame)\n    else\n        Plater.SetNameplateColor(unitFrame, \"#7FFFD4\")\n        \n        return\n    end\nend",
},
["Time"] = 1727078598,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["PRIEST"] = true,
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 103,
["semver"] = "",
["Author"] = "Эллинойз-Ревущий фьорд",
["Desc"] = "Changing Colors on doted targets",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "ShadowDotsColors [Old]",
},
{
["OptionsValues"] = {
["colour_names"] = false,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Initialization"] = "function(modTable)\n    \n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,\n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true,\n        [\"Terror\"] = true,\n        [\"Totem\"] = true,\n        [\"Waycrest\"] = true,\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    function modTable.renamer(unitFrame, unitId)\n        \n        if not (unitId and unitFrame) then\n            return\n        end\n        \n        local name = unitFrame.namePlateUnitName or UnitName(unitId) or \"\"\n        \n        -- 1) shorten\n        if modTable.config[\"short_names\"] and not unitFrame.unitName.isRenamed then\n            local unitName\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            if nameBlacklist[b] then\n                unitName = a or b or c or d or e or f\n            else\n                unitName = f or e or d or c or b or a\n            end\n            name = unitName or name\n        end -- if short_names\n        \n        \n        -- 2) Coloring\n        if modTable.config[\"colour_names\"] then\n            local marker = GetRaidTargetIndex(unitId)\n            if marker then\n                local color = markerToHex[marker or 8]\n                name = WrapTextInColorCode(name, color)\n            end\n        end\n        \n        -- 3) Apply\n        unitFrame.healthBar.unitName:SetText(name)\n    end -- envTable.namer\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend\n\n\n\n",
},
["Time"] = 1729208556,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/vmszcNe2o/4",
["Icon"] = "INTERFACE\\ICONS\\Ability_Monk_Ascension",
["Enabled"] = true,
["Revision"] = 309,
["semver"] = "1.0.3",
["Author"] = "Rhk-Tarren Mill",
["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
["Prio"] = 98,
["version"] = 4,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "short_names",
["Value"] = true,
["Name"] = "Shorten Names",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Shortens NPC Names. eg.: \"Murkbrine Fishmancer\" -> \"Fishmancer\"",
},
{
["Type"] = 4,
["Key"] = "colour_names",
["Value"] = true,
["Name"] = "Colour by Raidmark",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colours the Name by the assigned Raidmark. eg.: Triangle --> Green Name",
},
},
["LastHookEdited"] = "Initialization",
["Name"] = "Short Names",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    envTable.moveCastIcon = not Plater.db.profile.castbar_icon_customization_enabled --false\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        if not envTable.moveCastIcon then return end\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
},
["Time"] = 1726267217,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/mEN8Q6zUa/12",
["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
["Enabled"] = true,
["Revision"] = 510,
["semver"] = "1.0.11",
["Author"] = "Viash-Thrall",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon + cast bar.",
["Prio"] = 99,
["version"] = 12,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Cast Icon Anchor + Border",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.ttdTextFrame:SetText(\"\")\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateUnit(unitId, unitFrame.namePlateNpcId)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateUnit(unitId)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- Credit to Aethys for the algorithm: https://github.com/herotc/hero-lib\n    \n    --general settings:\n    envTable.onlyShowOnBoss = false\n    envTable.includeShields = true\n    \n    --custom health% for specific units:\n    envTable.customPercent = {\n        --Dawnbreaker \n        [213937] = 59.5, --Rasha'nan\n        --Darkflame Cleft\n        [210797] = 44.5, --The Darkness\n        -- City of Threads\n        [219984] = 50, -- Xeph'itik\n        ----- Shadowlands\n        -- Sanguine Depths\n        [162099] = 50, -- General Kaal\n        --- De Other Side\n        [166608] = 10, --Mueh'Zala\n        --- Mists of Tirna Scithe\n        [164929] = 20, -- Tirnenn Villager\n        [164804] = 20, -- Droman Oulfarran\n        ----- Draenor\n        --- Shadowmoon Burial Ground\n        [76057] = 20.5, -- Carrion Worm\n        ----- Legion\n        -- Halls of Valor\n        [95674] = 60, -- Fenryr P1\n        [95676] = 80, -- Odyn\n        [94960] = 10, -- Hymdall\n        -- Court of Stars\n        [104215] = 20, -- Patrol Captain Gerdo\n        ----- Mists of Pandaria\n        -- Temple of the Jade Serpent\n        [56732] = 30, -- Liu Flameheart,\n        ----- Dragonflight\n        -- Brackenhide Hollow\n        [186121] = 4, -- Decatriarch Wratheye\n        -- Uldaman\n        [184580] = 10, -- Olaf\n        [184581] = 10, -- Baelog\n        [184582] = 10, -- Eric \"The Swift\"\n        [184125] = 1, -- Chrono-Lord Deios,\n        -- Doti lower\n        [198933] = 90, -- Iridikron, technically 85 but you care only until 90\n        [207638] = 80, -- Blight of Galakrond\n        [201792] = 60, -- Ahnzon\n    }\n    \n    -- text settings:\n    local textColor = \"white\"\n    local textSize = 12\n    local textFont = \"2002\"\n    local textOutline = \"NONE\" --\"OUTLINE\"\n    --local textShadowColor = \"green\"\n    \n    -- positioning\n    local anchor = {\n        side = 3, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 2, --x offset\n        y = -3, --y offset\n    }\n    \n    -- TTD calculation config\n    envTable.config = {\n        historyCount = 100,\n        historyTime = 10,\n        duration = 600,\n        pctHP = 0,\n    }\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the TTD\n    if not unitFrame.healthBar.ttdTextFrame then\n        envTable.ttdTextFrame = Plater:CreateLabel(unitFrame.healthBar, \"\", textSize, textColor)\n        unitFrame.healthBar.ttdTextFrame = envTable.ttdTextFrame\n        envTable.ttdTextFrame:SetText(\"\")\n    end\n    \n    Plater.SetAnchor(unitFrame.healthBar.ttdTextFrame, anchor)\n    \n    if textFont then\n        DetailsFramework:SetFontFace(unitFrame.healthBar.ttdTextFrame, textFont)\n    end\n    if textSize then\n        DetailsFramework:SetFontSize(unitFrame.healthBar.ttdTextFrame, textSize)\n    end\n    if textOutline then\n        DetailsFramework:SetFontOutline(unitFrame.healthBar.ttdTextFrame, textOutline)\n    end\n    if textColor then\n        local r, g, b, a = DetailsFramework:ParseColors(textColor)\n        unitFrame.healthBar.ttdTextFrame:SetTextColor(r, g, b, a)\n    end\n    if textShadowColor then\n        local r, g, b, a = DetailsFramework:ParseColors(textShadowColor)\n        DetailsFramework:SetFontShadow(unitFrame.healthBar.ttdTextFrame, r, g, b, a, 1, -1)\n    end\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    --functions\n    \n    envTable.cache = {}\n    envTable.units = {}\n    \n    function envTable.TTDRefresh(unit)\n        local currentTime = GetTime()\n        local historyCount = envTable.config.historyCount\n        local historyTime = envTable.config.historyTime\n        \n        if not UnitExists(unit) then\n            return\n        end\n        \n        local GUID = UnitGUID(unit)\n        \n        if not GUID then\n            return\n        end\n        \n        local health = UnitHealth(unit)\n        local maxHealth = UnitHealthMax(unit)\n        local absorbsPercent = 0\n        \n        if UnitGetTotalAbsorbs and envTable.includeShields then\n            local absorbs = UnitGetTotalAbsorbs(unit)\n            health = health + absorbs\n            absorbsPercent = absorbs ~= -1 and maxHealth ~= -1 and absorbs / maxHealth * 100 or 0\n        end\n        \n        local healthPercentage = health ~= -1 and maxHealth ~= -1 and health / maxHealth * 100\n        -- Check if it's a valid unit\n        if UnitCanAttack(\"player\", unit) and healthPercentage < (100 + absorbsPercent) then\n            local unitTable = envTable.units[GUID]\n            -- Check if we have seen one time this unit, if we don't then initialize it.\n            if not unitTable or healthPercentage > unitTable[1][1][2] then\n                unitTable = { {}, currentTime }\n                envTable.units[GUID] = unitTable\n            end\n            \n            local values = unitTable[1]\n            local time = currentTime - unitTable[2]\n            -- Check if the % HP changed since the last check (or if there were none)\n            if #values == 0 or healthPercentage ~= values[1][2] then\n                local value\n                local lastIndex = #envTable.cache\n                -- Check if we can re-use a table from the cache -- Buds: i have doubt on the value of reusing table, with the high cost of tinsert on 1st index\n                if lastIndex == 0 then\n                    value = { time, healthPercentage }\n                else\n                    value = envTable.cache[lastIndex]\n                    envTable.cache[lastIndex] = nil\n                    value[1] = time\n                    value[2] = healthPercentage\n                end\n                table.insert(values, 1, value)\n                local n = #values\n                -- Delete values that are no longer valid\n                while (n > historyCount) or (time - values[n][1] > historyTime) do\n                    envTable.cache[#envTable.cache + 1] = values[n]\n                    values[n] = nil\n                    n = n - 1\n                end\n            end\n        end\n    end\n    \n    function envTable.TimeToX(guid, percentage, minSamples)\n        local seconds = 8888\n        local unitTable = envTable.units[guid]\n        -- Simple linear regression\n        -- ( E(x^2)  E(x) )  ( a )  ( E(xy) )\n        -- ( E(x)     n  )  ( b ) = ( E(y)  )\n        -- Format of the above: ( 2x2 Matrix ) * ( 2x1 Vector ) = ( 2x1 Vector )\n        -- Solve to find a and b, satisfying y = a + bx\n        -- Matrix arithmetic has been expanded and solved to make the following operation as fast as possible\n        if unitTable then\n            local values = unitTable[1]\n            local n = #values\n            if n > minSamples then\n                local a, b = 0, 0\n                local Ex2, Ex, Exy, Ey = 0, 0, 0, 0\n                \n                local value, x, y\n                for i = 1, n do\n                    value = values[i]\n                    x, y = value[1], value[2]\n                    \n                    Ex2 = Ex2 + x * x\n                    Ex = Ex + x\n                    Exy = Exy + x * y\n                    Ey = Ey + y\n                end\n                -- invariant to find matrix inverse\n                local invariant = 1 / (Ex2 * n - Ex * Ex)\n                -- Solve for a and b\n                a = (-Ex * Exy * invariant) + (Ex2 * Ey * invariant)\n                b = (n * Exy * invariant) - (Ex * Ey * invariant)\n                if b ~= 0 then\n                    -- Use best fit line to calculate estimated time to reach target health\n                    seconds = (percentage - a) / b\n                    -- Subtract current time to obtain \"time remaining\"\n                    seconds = math.min(7777, seconds - (GetTime() - unitTable[2]))\n                    if seconds < 0 then\n                        seconds = 9999\n                    end\n                end\n            end\n        end\n        \n        return seconds\n    end\n    \n    function envTable.updateUnit(unitId, npcId)\n        if UnitExists(unitId) and (not envTable.onlyShowOnBoss or UnitLevel(unitId) == -1) then\n            envTable.TTDRefresh(unitId)\n            local GUID = UnitGUID(unitId)\n            local customPercent = envTable.customPercent[npcId] or nil\n            envTable.TTD = envTable.TimeToX(GUID, customPercent or envTable.config.pctHP, 3)\n            if envTable.TTD < 7777 and envTable.TTD < envTable.config.duration then\n                envTable.show = true\n                envTable.updateText()\n            end\n        end\n    end\n    \n    function envTable.updateText()\n        ---@type string|number\n        local ret = \"\"\n        \n        local number = envTable.TTD\n        \n        if not number or number == 0 or not envTable.show then\n            unitFrame.healthBar.ttdTextFrame:SetText(\"\")\n            return\n        end\n        \n        local H = floor(number / 3600)\n        local M = floor((number - (floor(number / 3600) * 3600)) / 60)\n        local S = number - math.floor(number / 60) * 60\n        if H > 0 then\n            ret = (\"%02d:%02d:%02d\"):format(H, M, S)\n        elseif M > 0 then\n            ret = (\"%02d:%02d\"):format(M, S)\n        else\n            ret = floor(S)\n        end\n        \n        unitFrame.healthBar.ttdTextFrame:SetText(ret)\n    end\nend",
},
["Time"] = 1726956727,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 2125377,
["Enabled"] = false,
["Revision"] = 210,
["semver"] = "",
["Author"] = "Viash-Thrall",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "Time to Die (TTD)",
},
{
["OptionsValues"] = {
["midScale"] = 0.89999997615814,
["lowScale"] = 0.79999995231628,
},
["HooksTemp"] = {
},
["UID"] = "0x6366dbeb1fda6285",
["Hooks"] = {
["Leave Combat"] = "function (_, unitId, unitFrame, _, modTable)\n    -- do nothing while spiteful is disabled\n    -- when updating this, also update Init and Nameplate Updated\n    \n    if not modTable.config.scale then\n        return\n    end\n    \n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID or not modTable.isSpiteful(npcID) then\n        return\n    end\n    \n    Plater.SetNameplateScale(\n        unitFrame,\n        modTable.spitefulTargetsPlayer(unitId) and modTable.config.higherScale or modTable.config.extraLowScale\n    )\nend",
["Nameplate Updated"] = "function (_, unitId, unitFrame, _, modTable)\n    -- do nothing while spiteful is disabled\n    -- when updating this, also update Init and Leave Combat\n    \n    if not modTable.config.scale then\n        return\n    end\n    \n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID or not modTable.isSpiteful(npcID) then\n        return\n    end\n    \n    Plater.SetNameplateScale(\n        unitFrame,\n        modTable.spitefulTargetsPlayer(unitId) and modTable.config.higherScale or modTable.config.extraLowScale\n    )\nend",
["Initialization"] = "function (modTable)\n    local medium = modTable.config.midScale -- 0.90\n    local small = modTable.config.lowScale -- 0.80\n    local extrasmall = modTable.config.extraLowScale -- 0.70,\n    local larger = modTable.config.higherScale -- 1.1\n    \n    --[[\n    GUIDELINES\n    - use LARGER for enemies with great situational importance that need extra attention\n        ex: totems at the end of Stonevault, Spiteful targeting you\n    - use MEDIUM for enemies that do little to nothing but melee the tank and have average health\n        OR casters without mandatory kick\n        ex: Patchwerk Soldier, Necrotic Wake | Tainted Lashers, Gnarlroot\n        ex: Primalist Galesinger, Halls of Infusion\n    - use SMALL for enemies that do nothing but melee the tank and have less than average health\n        -- ex: Jagged Hound, Waycrest Manor\n    - use EXTRA SMALL for enemies that do nothing at all AND/OR there's so many on the screen, you have no choice\n        ex: Fiery Vines, Tindral | Hungry Lashers, Academy\n    ]]\n    --\n    \n    modTable.npcIDs = {}\n    \n    local test = {\n        --[87329] = extrasmall, -- test dummy    \n    }\n    -- raids\n    local nerubarPalace = {\n        [219739] = small, -- Infested Spawn\n        --[220626] = small, -- Blood Parasite - \n        [223674] = small, --Skitterer - Ansurek\n        [219746] = small, -- Tomb - Ansurek\n        [221344] = medium, -- Gloom Hatchling - Ansurek\n    }\n    local amirdrassil = {\n        [210231] = medium, -- Tainted Lasher, Gnarlroot\n        [211306] = extrasmall, -- Fiery Vines, Tindral\n    }\n    local vault = {\n        [194991] = medium, -- Oathsworn Vanguard\n        [191714] = small, -- Seeking Stormling\n    }\n    local sepulcher = {\n        [183669] = small, -- Fiendish Soul\n    }\n    local nathria = {\n        [169925] = small, -- Begrudging Waiter\n    }\n    \n    -- War Within dungeons\n    \n    local prioryOfTheSacredFlame = {\n        [212838] = small, --Arathi Neophyte\n        [207943] = small, --Arathi Neophyte\n    }\n    \n    local darkflameCleft = {\n        [210148] = small, -- Menial Laborer\n        [210810] = small, -- Menial Laborer\n        [208457] = small, -- Skittering Darkness\n    }\n    \n    local cinderbrewMeadery = {\n        [217126] = extrasmall, --Over-indulged Patron\n        [214668] = small, -- Patron\n        [218865] = small, --Bee-let\n        [210270] = small, --Brew Drop\n        [223562] = small, --Brew Drop #2\n    }\n    \n    local stoneVault = {\n        [214287] = larger, --Earth Burst Totem\n    }\n    \n    local araKara = {\n        [216336] = small, --Ravenous Crawler\n        [216341] = small, --Jabbing Flyer\n        [218325] = extrasmall, --Swarming Flyer\n        [216337] = small, --Bloodworker\n    }\n    \n    local cityOfThreads = {\n        [220199] = small, --Battle Scarab\n        [216363] = medium, --Reenforced drone\n        [216365] = medium, --Carrier\n        [223357] = medium, --Conscript\n        [216329] = small, --Droplet\n        [220065] = small, --Umbral Weave\n        [222700] = small, --Umbral Weave\n        [219198] = medium, --Ravenous Scarab\n        [216342] = medium, -- Skittering Assistant\n    }\n    \n    local theDawnbreaker = {\n        --[225601] = extrasmall, --Webbed Victim\n        [224616] = small, --Animated Shadow\n    }\n    \n    -- DF Dungeons\n    \n    local murozondsRise = {\n        [205151] = small, -- Tyr's Vanguard\n    }\n    \n    local galakrondsFall = {\n        [204536] = extrasmall, -- Blight Chunk\n        [206065] = extrasmall, -- Interval\n    }\n    \n    local hallsOfInfusion = {\n        [190923] = small, -- Zephyrling\n    }\n    \n    local neltharus = {\n        [192781] = small, -- Ore Elemental\n        [194389] = small, -- Lava Spawn\n    }\n    \n    local uldaman = {\n        [184134] = small, -- Scavenging Leaper\n        [186696] = larger, -- Quaking Totem\n    }\n    \n    local brackenhideHollow = {\n        [189299] = small, -- Decaying Slime\n        [192481] = small, -- Decaying Slime (boss adds)\n        [194330] = small, -- Decaying Slime (from big slime split)\n        [199916] = small, -- Decaying Slime\n        [194273] = small, -- Witherling\n        [187238] = small, -- Witherling\n        [189363] = extrasmall, -- Infected Lasher\n        [208994] = extrasmall, -- Infected Lasher\n        [194373] = small, -- Witherling\n        [190381] = larger, -- Rotburst Totem\n    }\n    \n    local algetharAcademy = {\n        [196642] = extrasmall, -- Hungry Lasher\n        [197398] = extrasmall, -- Hungry Lasher\n        [192329] = small, -- Territorial Eagle\n        [196694] = medium, -- Arcane Forager\n    }\n    \n    local azureVault = {\n        [191313] = extrasmall, -- Bubbling Sapling\n        [196559] = extrasmall, -- Volatile Sapling\n        [187246] = medium, -- Nullmagic Hornswog\n        [187242] = medium, -- Tarasek Looter\n        [187159] = small, -- Whelp\n    }\n    \n    local rubyLifePools = {\n        [189893] = extrasmall, -- Infused Whelp\n        [187894] = extrasmall, -- Infused Whelp\n        [194622] = extrasmall, -- Scorchling\n        [190205] = extrasmall, -- Scorchling\n        [197509] = extrasmall, -- Primal Thundercloud\n    }\n    \n    local nokhudOffensive = {\n        [195855] = small, -- Risen Warrior\n        [195875] = small, -- Desecrated Bakar\n        [196645] = small, -- Desecrated Bakar\n    }\n    \n    -- Shadowlands Dungeons\n    \n    local tazavesh = {\n        [178163] = small, -- Murkbrine Shorerunner\n    }\n    \n    local theaterOfPain = {\n        [163089] = small, -- Disgusting Refuse\n    }\n    \n    local necroticWake = {\n        [166264] = small, -- Spare Parts\n        [166266] = small, -- Spare Parts #2\n        [171500] = extrasmall, -- Shuffling Corpse\n        [165138] = small, -- Blight bag\n        [162729] = medium, -- Patchwerk Soldier\n        [163122] = small, -- Brittlebone Warrior\n        [164427] = small, -- Reanimated Warrior\n    }\n    \n    local mistsOfTirnaScithe = {\n        [165111] = medium, -- Drust Spiteclaw\n        [167117] = small, -- Larva\n    }\n    \n    local hallsOfAtonement = {\n        [167892] = medium, -- Tormented Soul\n    }\n    \n    local deOtherSide = {\n        [168986] = small, -- Skeletal Raptor\n    }\n    \n    local plaguefall = {\n        [168969] = small, -- Gushing Slime\n    }\n    \n    local sanguineDepths = {\n        [171455] = small, -- Stonewall Gargon\n        [168457] = small, -- Stonewall Gargon\n        [166589] = small, -- Animate Weapon\n    }\n    \n    --BFA Dungeons\n    \n    local mechagon = {\n        [144300] = small, -- Mechagon Citizen\n    }\n    \n    local siegeOfBoralus = {\n        [133990] = medium, -- Scrimshaw Gutter\n        [138002] = medium, -- Scrimshaw Gutter\n        [135258] = medium, -- Curseblade\n    }\n    \n    local atalDazar = {\n        [128435] = extrasmall, -- saurid\n    }\n    \n    local waycrestManor = {\n        [131669] = small, -- Jagged Hound\n    }\n    \n    local underrot = {\n        [131402] = extrasmall, -- Underrot Tick\n    }\n    \n    local freehold = {\n        [130024] = small, -- Soggy Shiprat\n    }\n    \n    -- Legion Dungeons\n    \n    local hallsOfValor = {\n        [97087] = medium, -- Valajar Champion\n        [96640] = medium, -- Valajar Marksman\n        [99922] = small, -- Ebonclaw Packmate\n        [96608] = medium, -- Ebonclaw Worg\n        [96609] = medium, -- Gildedfur Stag\n    }\n    \n    local darkheartThicket = {\n        [100529] = small, -- Hatespawn Slime\n        [101074] = small, -- Hatespawn Whelpling\n        [100991] = small, -- Strangling Roots\n        [107288] = small, -- Vilethorn Sapling\n    }\n    \n    local blackRookHold = {\n        [98677] = small, -- Rook Spiderling\n        [98900] = medium, -- Wyrmtongue Trickster\n        [102781] = extrasmall, -- Fel Bat Pup\n    }\n    \n    local courtOfStars = {\n        [105703] = small, -- Mana Wyrm,\n        [104295] = small, -- Blazing Imp\n    }\n    \n    local neltharionsLair = {\n        [96247] = extrasmall, -- Vileshard Crawler\n        [102430] = small, -- Tarspitter Slug\n    }\n    \n    -- WoD Dungeons\n    \n    local everbloom = {\n        [81864] = small, -- Dreadpetal\n        [84401] = small, -- Swift Sproutling\n    }\n    \n    local shadowmoonBurialGrounds = {\n        [75451] = small, -- Defiled Spirit (non-casting)\n        [77006] = small, -- Corpse Skitterling\n        [76444] = small, -- Subjugated Soul\n    }\n    -- MoP Dungeons\n    local templeOfTheJadeSerpent = {\n        [62358] = small, -- Corrupt Droplet\n        [58319] = small, -- Lesser Sha\n        [59598] = small, -- Lesser Sha\n    }\n    \n    -- Cata Dungeons\n    \n    local throneOfTheTides = {\n        [40923] = extrasmall, -- Unstable Corruption\n    }\n    \n    local vortexPinnacle = {\n        [205326] = medium, -- Gust Soldier\n        [45477] = medium, -- Gust Soldier\n        [45704] = small, -- Lurking Tempest\n        [204337] = small, -- Lurking Tempest\n        [45924] = medium, -- Turbulent Squall\n        [45922] = medium, -- Empyrean Assassin\n        [45926] = medium, -- Servant of Asaad\n        [45932] = small, -- Skyfall Star\n    }\n    \n    local grimBatol = {\n        [224853] = small, -- Hatchling\n        [39388] = medium, -- Boss Hatchling\n    }\n    \n    local misc = {\n        -- Fodder to the Flame demons\n        [169428] = small,\n        [169430] = small,\n        [169429] = small,\n        [169426] = small,\n        [169421] = small,\n        [169425] = small,\n        [168932] = small,\n        -- Misc\n        [189707] = small, -- Chaotic Motes, SL Fated affix\n        [229537] = larger, -- Void Emissary\n        [229296] = small, -- Orb of Ascendance\n    }\n    \n    local maps = {\n        test,\n        prioryOfTheSacredFlame,\n        darkflameCleft,\n        cinderbrewMeadery,\n        theDawnbreaker,\n        stoneVault,\n        amirdrassil,\n        atalDazar,\n        waycrestManor,\n        darkheartThicket,\n        everbloom,\n        blackRookHold,\n        galakrondsFall,\n        throneOfTheTides,\n        templeOfTheJadeSerpent,\n        nokhudOffensive,\n        courtOfStars,\n        shadowmoonBurialGrounds,\n        algetharAcademy,\n        azureVault,\n        hallsOfValor,\n        rubyLifePools,\n        underrot,\n        freehold,\n        neltharionsLair,\n        vortexPinnacle,\n        hallsOfInfusion,\n        neltharus,\n        uldaman,\n        brackenhideHollow,\n        murozondsRise,\n        misc,\n        vault,\n        sepulcher,\n        nathria,\n        nerubarPalace,\n        araKara,\n        cityOfThreads,\n        tazavesh,\n        theaterOfPain,\n        necroticWake,\n        mistsOfTirnaScithe,\n        hallsOfAtonement,\n        deOtherSide,\n        plaguefall,\n        sanguineDepths,\n        grimBatol,\n        siegeOfBoralus,\n        mechagon,\n    }\n    \n    for i = 1, #maps do\n        local map = maps[i]\n        \n        for id, priority in pairs(map) do\n            modTable.npcIDs[id] = priority\n        end\n    end\n    \n    ---@param unit string\n    ---@return number|nil\n    function modTable.parseGUID(unit)\n        local guid = UnitGUID(unit)\n        \n        if not guid then\n            return nil\n        end\n        \n        local id = select(6, strsplit(\"-\", guid))\n        \n        return id and tonumber(id) or nil\n    end\n    \n    -- do nothing while spiteful is disabled\n    -- when updating this, also update Nameplate Updated and Leave Combat\n    \n    ---@param id number\n    ---@return boolean\n    function modTable.isSpiteful(id)\n        return tonumber(id) == 220626 --Blood Parasite\n    end\n    \n    ---@param unitId string\n    ---@return boolean\n    function modTable.spitefulTargetsPlayer(unitId)\n        local targetName = UnitName(unitId .. \"target\")\n        \n        if not targetName then\n            return false\n        end\n        \n        return UnitIsUnit(targetName, \"player\")\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not modTable.config.scale then\n        return\n    end\n    \n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID then\n        return\n    end\n    \n    local scale = modTable.npcIDs[npcID]\n    \n    if scale then\n        Plater.SetNameplateScale(unitFrame, scale)\n    end\nend",
},
["Time"] = 1729592381,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 1041231,
["Enabled"] = true,
["Revision"] = 2283,
["semver"] = "",
["Author"] = "Causese-Valdrakken",
["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Priority based scaling - Jundies",
["Options"] = {
{
["Type"] = 4,
["Key"] = "scale",
["Value"] = true,
["Name"] = "Enable Scaling",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to scale based on priority.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for mid priority.",
["Min"] = 0,
["Key"] = "midScale",
["Value"] = 0.9,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Mid prio",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for low priority.",
["Min"] = 0,
["Key"] = "lowScale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Low prio",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for extra low scale",
["Min"] = 0,
["Key"] = "extraLowScale",
["Value"] = 0.7,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Very Low Prio",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set scaling value for higher priority",
["Min"] = 0,
["Key"] = "higherScale",
["Value"] = 1.1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Higher Priority",
},
},
["LastHookEdited"] = "Initialization",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    function Plater.UpdateLifePercentText(healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        --get the cached health amount for performance\n        local currentHealth, maxHealth = healthBar.CurrentHealth, healthBar.CurrentHealthMax\n        \n        if showHealthAmount and showPercentAmount then\n            local percent = maxHealth == 0 and 100 or (currentHealth / maxHealth * 100)\n            \n            if showDecimals then\n                if percent < 10 then\n                    healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth) .. format(\" %.2f%%\", percent))\n                elseif percent < 99.9 then\n                    healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth) .. format(\" %.1f%%\", percent))\n                else\n                    healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth) .. \" 100%\")\n                end\n            else\n                healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth) .. format(\" %d%%\", percent))\n            end\n        elseif showHealthAmount then\n            healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth))\n        elseif showPercentAmount then\n            local percent = maxHealth == 0 and 100 or (currentHealth / maxHealth * 100)\n            \n            if showDecimals then\n                if percent < 10 then\n                    healthBar.lifePercent:SetText(format(\"%.2f%%\", percent))\n                elseif percent < 99.9 then\n                    healthBar.lifePercent:SetText(format(\"%.1f%%\", percent))\n                else\n                    healthBar.lifePercent:SetText(\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText(format(\"%d%%\", percent))\n            end\n        else\n            healthBar.lifePercent:SetText(\"\")\n        end\n    end\nend\n\n\n\n\n",
},
["Time"] = 1729208562,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 237031,
["Enabled"] = true,
["Revision"] = 168,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show the total health and percent in the health amount text. See the constructor code to change options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Health Formatting",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    \n    --init\n    local hb = unitFrame.healthBar\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture(hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture(hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if hb.isCustomShieldHook then\n            return\n        end\n        --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n        hb.UpdateHealPrediction = function(self)\n            local currentHealth = self.currentHealth\n            local currentHealthMax = self.currentHealthMax\n            local healthPercent = currentHealth / currentHealthMax\n            \n            if not currentHealthMax or currentHealthMax <= 0 then\n                return\n            end\n            \n            --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n            local width = self:GetWidth()\n            \n            hb.shieldAbsorbIndicator:Hide()\n            hb.shieldAbsorbGlow:Hide()\n            \n            if not self.displayedUnit then\n                return\n            end\n            \n            if self.Settings.ShowHealingPrediction then\n                --incoming heal on the unit from all sources\n                local unitHealIncoming = UnitGetIncomingHeals(self.displayedUnit) or 0\n                --heal absorbs\n                local unitHealAbsorb = UnitGetTotalHealAbsorbs(self.displayedUnit) or 0\n                \n                if unitHealIncoming > 0 then\n                    --calculate what is the percent of health incoming based on the max health the player has\n                    local incomingPercent = unitHealIncoming / currentHealthMax\n                    self.incomingHealIndicator:Show()\n                    self.incomingHealIndicator:SetWidth(\n                        max(1, min(width * incomingPercent, abs(healthPercent - 1) * width))\n                    )\n                    self.incomingHealIndicator:SetPoint(\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                    self.incomingHealIndicator:SetPoint(\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                else\n                    self.incomingHealIndicator:Hide()\n                end\n                \n                if unitHealAbsorb > 0 then\n                    local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                    self.healAbsorbIndicator:Show()\n                    self.healAbsorbIndicator:SetWidth(\n                        max(1, min(width * healAbsorbPercent, abs(healthPercent - 1) * width))\n                    )\n                    self.healAbsorbIndicator:SetPoint(\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                    self.healAbsorbIndicator:SetPoint(\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                else\n                    self.healAbsorbIndicator:Hide()\n                end\n            end\n            \n            if self.Settings.ShowShields then\n                --damage absorbs\n                local unitDamageAbsorb = UnitGetTotalAbsorbs(self.displayedUnit) or 0\n                self.currentAbsorb = unitDamageAbsorb\n                \n                if unitDamageAbsorb > 0 then\n                    local curHealthTotal = unitDamageAbsorb + currentHealth\n                    local damageAbsorbPercent\n                    local healthPercentAbsorb\n                    local isHalfBar = false\n                    if curHealthTotal > currentHealthMax then\n                        if useHalfBar then\n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            if damageAbsorbPercent > 1 then\n                                damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                            end\n                            healthPercentAbsorb = 1 - damageAbsorbPercent\n                            self:SetMinMaxValues(0, currentHealthMax)\n                            \n                            isHalfBar = true\n                        else\n                            damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                            healthPercentAbsorb = currentHealth / curHealthTotal\n                            self:SetMinMaxValues(0, curHealthTotal)\n                        end\n                    else\n                        damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                        healthPercentAbsorb = currentHealth / currentHealthMax\n                        self:SetMinMaxValues(0, currentHealthMax)\n                    end\n                    --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                    \n                    self.shieldAbsorbIndicator:SetWidth(width * damageAbsorbPercent)\n                    self.shieldAbsorbIndicator:SetPoint(\n                        \"topleft\",\n                        self,\n                        \"topleft\",\n                        width * healthPercentAbsorb,\n                        (isHalfBar and (-self:GetHeight() / 2)) or 0\n                    )\n                    self.shieldAbsorbIndicator:SetPoint(\n                        \"bottomleft\",\n                        self,\n                        \"bottomleft\",\n                        width * healthPercentAbsorb,\n                        0\n                    )\n                    \n                    self.shieldAbsorbIndicator:Show()\n                else\n                    self.shieldAbsorbIndicator:Hide()\n                end\n            end\n            \n            hb.isCustomShieldHook = true\n        end\n        \n        if hb.displayedUnit then\n            hb.shieldAbsorbIndicator:Hide()\n            hb.shieldAbsorbGlow:Hide()\n            hb:UNIT_MAXHEALTH()\n        else\n            hb.customShieldHookNeedsUpdate = true\n        end\n    end\nend",
},
["Time"] = 1726955149,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135940,
["Enabled"] = true,
["Revision"] = 1263,
["semver"] = "",
["Author"] = "Elaiana-Proudmoore",
["Desc"] = "Adds absorbs to the health bar as full health value.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options For @scriptname",
["Name"] = "Options Intro",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = "",
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["LastHookEdited"] = "Constructor",
["Name"] = "Absorb Shields in Healthbar",
},
{
["OptionsValues"] = {
["nameColor"] = {
0,
1,
0.011764707043767,
1,
},
["useNameplateColor"] = false,
["useNameColor"] = true,
["borderColor"] = {
0,
1,
0.011764707043767,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x669ff67a1d2afb0",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.maybeUpdateColor(unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.maybeUpdateColor(unitFrame)\nend",
["Initialization"] = "function (modTable)\n    -- Populated with root immune npcIds from MDT.\n    local immuneMap = {\n        -- not stun immune in MDT\n        [205408] = true, -- Infinite Timeslicer\n    }\n    \n    local hasMDT = false\n    \n    if MDT and MDT.dungeonEnemies then\n        hasMDT = true\n        \n        for _, dungeon in pairs(MDT.dungeonEnemies) do\n            for _, npc in pairs(dungeon) do\n                if npc.characteristics and npc.characteristics and not npc.characteristics[\"Stun\"] then\n                    immuneMap[npc.id] = true\n                end\n            end\n        end\n    end\n    \n    function modTable.maybeUpdateColor(unitFrame)\n        if not hasMDT then\n            return\n        end\n        \n        if immuneMap[unitFrame.namePlateNpcId] == nil then\n            return\n        end\n        \n        if modTable.config.useNameplateColor then\n            Plater.SetNameplateColor(unitFrame, modTable.config.healthBarColor)\n            Plater.DenyColorChange(unitFrame, true)\n        end\n        \n        if modTable.config.useBorderColor then\n            Plater.SetBorderColor(unitFrame, modTable.config.borderColor)\n            Plater.DenyColorChange(unitFrame, true)\n        end\n        \n        if modTable.config.useNameColor then\n            Plater:SetFontColor(unitFrame.unitName, modTable.config.nameColor)\n            Plater.DenyColorChange(unitFrame, true)\n        end\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.maybeUpdateColor(unitFrame)\nend",
},
["Time"] = 1724700828,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["Enabled"] = true,
["64"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135848,
["Enabled"] = false,
["Revision"] = 617,
["semver"] = "",
["Author"] = "Aparratchic-Ragnaros",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Freeze Immune NPC's [MDT]",
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Activate Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
0,
0.34117648005486,
1,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBorderColor",
["Value"] = false,
["Name"] = "Activate Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "borderColor",
["Value"] = {
0,
1,
0.011764707043767,
1,
},
["Name"] = "Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameColor",
["Value"] = false,
["Name"] = "Activate Name Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "nameColor",
["Value"] = {
0,
1,
0.26666668057442,
1,
},
["Name"] = "Name Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)    \n    local inCombat = self.InCombat\n    local isTanking = self.namePlateThreatIsTanking\n    local isTapDenied = UnitIsTapDenied(unitId)\n    \n    if inCombat and not isTanking and not isTapDenied then\n        local exists = UnitExists(self.targetUnitID)\n        if exists then\n            local role = UnitGroupRolesAssigned(self.targetUnitID)\n            local isTank = (role == \"TANK\")\n            \n            if not isTank then\n                local guid = UnitGUID(self.targetUnitID)\n                if envTable.shallHighlight(self, guid) then\n                    Plater.SetNameplateColor(unitFrame, envTable.color)\n                end\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.color = \"#5d00ff\"\n    \n    envTable.npcs = {\n        [61056] = \"Greater Earth Elemental\",\n        [61146] = \"Black Ox Statue\",\n        [95072] = \"Earth Elemental\",\n        [103822] = \"Treant\"\n    }\n    \n    envTable.rules = {\n        [\"Pet\"] = true,\n        [\"Creature\"] = function(npcID)\n            return (envTable.npcs[npcID] ~= nil)\n        end\n    }\n    \n    envTable.getTypeAndID = function(guid)\n        local unitType, _, _, _, _, npcID = strsplit(\"-\", guid)\n        return unitType, tonumber(npcID or \"0\") or 0\n    end\n    \n    envTable.shallHighlight = function(self, guid)\n        local unitType, npcID = envTable.getTypeAndID(guid)\n        if unitType then\n            local value = envTable.rules[unitType]\n            if value then\n                if type(value) == \"boolean\" then\n                    return value\n                elseif type(value) == \"function\" then\n                    return value(npcID)\n                end\n            end -- value\n        end -- unitType\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1726865575,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["TANK"] = true,
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/ZqU9hBu43/3",
["Icon"] = 627607,
["Enabled"] = true,
["Revision"] = 114,
["semver"] = "1.0.2",
["Author"] = "Brewdux-Tarren Mill",
["Desc"] = "Recolors the nameplate, if you the unit is tanked by a pet.",
["Prio"] = 99,
["version"] = 3,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Pet Threat Highlighter",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.healthBar.questProgressTextFrame then\n        unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateText(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateText(unitFrame)\nend",
["Constructor"] = "function(self, unitId, unitFrame, envTable)\n    local textColor = \"orange\"\n    local textSize = 12\n    \n    -- positioning\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -15, --x offset\n        y = 0, --y offset\n    }\n    \n    function envTable.updateText(unitFrame)\n        if not unitFrame or not unitFrame.namePlateIsQuestObjective or not unitFrame.QuestAmountCurrent then\n            if unitFrame.healthBar.questProgressTextFrame and unitFrame.healthBar.questProgressTextFrame:IsShown() then\n                unitFrame.healthBar.questProgressTextFrame:Hide()\n            end\n            \n            return\n        end\n        \n        local text = unitFrame.QuestAmountTotal and unitFrame.QuestAmountTotal - unitFrame.QuestAmountCurrent\n        or unitFrame.QuestAmountCurrent .. \"%\"\n        \n        local currentText = unitFrame.healthBar.questProgressTextFrame\n        and unitFrame.healthBar.questProgressTextFrame:GetText()\n        or nil\n        \n        if currentText == text then\n            return\n        end\n        \n        --create the text frame that will show the quest progress\n        if not unitFrame.healthBar.questProgressTextFrame then\n            envTable.questProgressTextFrame = Plater:CreateLabel(unitFrame.healthBar, \"\", textSize, textColor)\n            Plater.SetAnchor(envTable.questProgressTextFrame, anchor)\n            unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        end\n        \n        if not unitFrame.healthBar.questProgressTextFrame:IsVisible() then\n            unitFrame.healthBar.questProgressTextFrame:Show()\n        end\n        \n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend",
},
["Time"] = 1726955721,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "236671",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a text indicator for quest progress to show how many times the objective has to be completed.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "QuestProgress",
},
{
["OptionsValues"] = {
["targetColor"] = {
1,
1,
1,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x669565071fdad90",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local targetBorderColor = modTable.config.targetColor\n    local focusBorderColor = modTable.config.focusColor\n    \n    modTable.target = nil\n    modTable.focus = nil\n    \n    local function holdsSameColor(frame, nextColor)\n        local currentR, currentG, currentB, currentA =\n        unpack(frame.customBorderColor and frame.customBorderColor or Plater.db.profile.border_color)\n        local nextR, nextG, nextB, nextA = unpack(nextColor or Plater.db.profile.border_color)\n        \n        return currentR == nextR and currentG == nextG and currentB == nextB and currentA == nextA\n    end\n    \n    function envTable.updateBorderColor(frame)\n        if unitFrame.namePlateIsTarget then\n            if holdsSameColor(unitFrame, targetBorderColor) then\n                return\n            end\n            \n            Plater.SetBorderColor(unitFrame, targetBorderColor)\n            modTable.target = unitFrame\n        elseif unitFrame.IsFocus then\n            if holdsSameColor(unitFrame, focusBorderColor) then\n                return\n            end\n            \n            Plater.SetBorderColor(unitFrame, focusBorderColor)\n            modTable.focus = unitFrame\n        else\n            if not UnitExists(\"target\") then\n                modTable.target = nil\n            end\n            \n            if not UnitExists(\"focus\") or UnitIsFriend(\"focus\", \"player\") then\n                modTable.focus = nil\n            else\n                local plate = C_NamePlate.GetNamePlateForUnit(\"focus\")\n                \n                if plate and plate.unitFrame then\n                    modTable.focus = plate.unitFrame\n                end\n            end\n            \n            if modTable.target ~= unitFrame and modTable.focus ~= unitFrame and not holdsSameColor(unitFrame) then\n                Plater.SetBorderColor(unitFrame)\n            end\n        end\n    end\nend",
},
["Time"] = 1727391566,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "132212",
["Enabled"] = true,
["Revision"] = 337,
["semver"] = "",
["Author"] = "Xephunt-These Go To Eleven",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Target Border Color",
["Options"] = {
{
["Type"] = 1,
["Key"] = "targetColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Target Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes target border color",
},
{
["Type"] = 1,
["Key"] = "focusColor",
["Value"] = {
0,
1,
0.94117653369904,
1,
},
["Name"] = "Focus Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes Focus border color",
},
},
["LastHookEdited"] = "Constructor",
},
{
["OptionsValues"] = {
["showTargetName"] = true,
},
["HooksTemp"] = {
},
["UID"] = "0x66e5810079f372",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.EnhancedCastBar(unitId, unitFrame)\nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)    \n    modTable.EnhancedCastBar(unitId, unitFrame)\nend",
["Initialization"] = "function (modTable)\n    modTable.reflectableSpells = {}\n    \n    local playerClass = select(3, UnitClass(\"player\"))\n    \n    ---@param spellId number\n    ---@return number, number, boolean, number\n    local function CompatGetSpellCooldown(spellId)\n        if C_Spell.GetSpellCooldown then\n            local info = C_Spell.GetSpellCooldown(spellId)\n            return info.startTime, info.duration, info.isEnabled, info.modRate\n        end\n        \n        return GetSpellCooldown(spellId)\n    end\n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    ---@param spellID number\n    ---@return boolean\n    local function IsSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdSTART, gcdDUR = CompatGetSpellCooldown(61304) -- GCD\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellStart, spellDuration = CompatGetSpellCooldown(spellID)\n        local spellReadyTime = spellStart + spellDuration\n        return spellReadyTime > GCD_expirationTime\n    end\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    local function MaybeCreateTickTexture(castBar)\n        if not castBar.tick then\n            castBar.tick = castBar:CreateTexture(nil, \"overlay\")\n            castBar.tick:SetDrawLayer(\"overlay\", 4)\n            castBar.tick:SetBlendMode(\"DISABLE\")\n            --castBar.tick:SetHeight(castBar:GetHeight())\n            castBar.tick:SetHeight(8)\n            castBar.tick:SetTexture(Plater.SparkTextures[8])\n            castBar.tick:SetWidth(2)\n            castBar.tick:SetVertexColor(Plater:ParseColors(modTable.config.colorTick))\n        end\n    end\n    \n    ---@param unitId string\n    ---@return boolean\n    local function UnitIsStillCasting(unitId)\n        if UnitCastingInfo(unitId) ~= nil then\n            return true\n        end\n        \n        if UnitChannelInfo(unitId) ~= nil then\n            return true\n        end\n        \n        return false\n    end\n    \n    local function DetermineInterruptId()\n        if playerClass == 1 then -- Warrior\n            return function()\n                return 6552 -- Pummel\n            end\n        end\n        \n        if playerClass == 2 then -- Paladin\n            return function()\n                return 96231 -- Rebuke\n            end\n        end\n        \n        if playerClass == 3 then -- Hunter\n            return function()\n                local spec = GetSpecialization()\n                \n                if spec == 3 then -- survival\n                    return 187707 -- muzzle\n                end\n                \n                return 147362 -- counter shot\n            end\n        end\n        \n        if playerClass == 4 then -- rogue\n            return function()\n                return 1766 -- kick\n            end\n        end\n        \n        if playerClass == 5 then -- priest\n            return function()\n                local spec = GetSpecialization()\n                \n                if spec == 3 then -- shadow\n                    return 15487 -- silence\n                end\n                \n                return nil\n            end\n        end\n        \n        if playerClass == 6 then -- death knight\n            return function()\n                return 47528 -- mind freeze\n            end\n        end\n        \n        if playerClass == 7 then -- shaman\n            return function()\n                return 57994\n            end\n        end\n        \n        if playerClass == 8 then -- mage\n            return function()\n                return 2139 -- counterspell\n            end\n        end\n        \n        if playerClass == 9 then -- warlock\n            return function()\n                if IsSpellKnown(89766, true) then -- felguard: axe toss\n                    return 89766\n                end\n                \n                if IsSpellKnown(19647, true) then -- felhunter: spell lock\n                    return 19647\n                end\n                \n                if C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then -- spell lock via grimoire of sacrifice\n                    return 132409\n                end\n                \n                return nil\n            end\n        end\n        \n        if playerClass == 10 then -- monk\n            return function()\n                return 116705 -- spear hand strike\n            end\n        end\n        \n        if playerClass == 11 then -- druid\n            return function()\n                local spec = GetSpecialization()\n                \n                if spec == 1 then -- balance\n                    return 78675 -- solar beam\n                end\n                \n                return 106839 -- skull bash\n            end\n        end\n        \n        if playerClass == 12 then -- demon hunter\n            return function()\n                return 183752 -- disrupt\n            end\n        end\n        \n        if playerClass == 13 then -- evoker\n            return function()\n                return 351338 -- quell\n            end\n        end\n    end\n    \n    local GetInterruptID = DetermineInterruptId()\n    \n    ---@param unitId string\n    ---@param unitFrame Frame\n    function modTable.EnhancedCastBar(unitId, unitFrame)\n        local castBar = unitFrame.castBar\n        \n        if castBar.tick ~= nil then\n            castBar.tick:Hide()\n        end\n        \n        if castBar.IsInterrupted or castBar.interrupted or not UnitIsStillCasting(unitId) then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if not UnitExists(targetUnitId) then\n            return\n        end\n        \n        local targetName = UnitName(targetUnitId)\n        local isTargettingMe = targetName == UnitName(\"player\")\n        castBar.Text:SetText(castBar.SpellName)\n        \n        -- Cast is targetting a specific unit\n        if targetName then\n            -- Nameplate flash options\n            if isTargettingMe and modTable.config.nameplateFlash then\n                -- Default value of true since it is turned on in the options\n                local showNameplateFlash = true\n                \n                if\n                modTable.config.hideNameplateFlashSolo\n                and not UnitInParty(\"player\")\n                and not UnitInRaid(\"player\")\n                then\n                    showNameplateFlash = false\n                end\n                \n                if modTable.config.hideFlashAsTank and GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                    showNameplateFlash = false\n                end\n                \n                -- Show nameplate flash if conditions met\n                if showNameplateFlash then\n                    Plater.FlashNameplateBody(unitFrame)\n                end\n            end\n            \n            -- Target name in cast bar options\n            if modTable.config.showTargetName then\n                if modTable.config.replaceName and isTargettingMe then\n                    targetName = \"Me\"\n                end\n                \n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText(castBar.Text, castBarWidth * (modTable.config.castNameSize / 100))\n                \n                local currentText = castBar.Text:GetText()\n                if currentText ~= nil and currentText ~= \"\" then\n                    local castText = currentText .. \" \" .. Plater.SetTextColorByClass(targetUnitId, targetName)\n                    \n                    if\n                    modTable.config.hideNameSolo\n                    and not UnitInParty(\"player\")\n                    and not UnitInRaid(\"player\")\n                    and isTargettingMe\n                    then\n                        castText = currentText\n                    end\n                    \n                    castBar.Text:SetText(castText)\n                    DetailsFramework:TruncateText(castBar.Text, castBarWidth)\n                end\n            end\n        end\n        \n        if not modTable.config.showInterruptColor then\n            return\n        end\n        \n        -- Interrupt bar color options\n        local canInterrupt = castBar.canInterrupt\n        local castEndTime = castBar.spellEndTime\n        local interruptReadyTime = 0\n        local start\n        local duration\n        local interruptID = GetInterruptID()\n        \n        if interruptID ~= nil then\n            start, duration = CompatGetSpellCooldown(interruptID) --local\n            interruptReadyTime = start + duration\n        end\n        \n        local nextColor = modTable.config.colorProtected\n        \n        if canInterrupt and interruptID ~= nil then\n            local playerIsWarlock = playerClass == 9\n            \n            -- Check to see if the spell is known/talented\n            if IsSpellKnown(interruptID, playerIsWarlock) then\n                if interruptReadyTime == 0 then\n                    nextColor = modTable.config.colorInterruptAvailable\n                elseif\n                modTable.config.showSecondaryInterrupts\n                and playerClass == 2 -- paladin\n                and IsSpellKnown(31935) -- avenger's shield\n                and not IsSpellOnCooldown_IgnoreGCD(31935)\n                then\n                    nextColor = modTable.config.colorSecondaryInterrupt\n                elseif interruptReadyTime < (castEndTime - 0.25) then\n                    MaybeCreateTickTexture(castBar)\n                    castBar.tick:Show()\n                    local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue -- castBar.spellStartTime + 0.25\n                    if castBar.channeling then\n                        tickLocation = 1 - tickLocation\n                    end\n                    castBar.tick:SetPoint(\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                    \n                    nextColor = modTable.config.colorInterruptSoon\n                elseif interruptReadyTime >= (castEndTime - 0.25) then\n                    nextColor = modTable.config.colorNoInterrupt\n                end\n            else\n                nextColor = modTable.config.colorNoInterrupt\n            end\n        end\n        \n        -- Spell Reflection coloring\n        if\n        modTable.config.showSecondaryInterrupts\n        and isTargettingMe\n        and playerClass == 1\n        and IsSpellKnown(23920) -- spell reflect\n        and not IsSpellOnCooldown_IgnoreGCD(23920)\n        and modTable.reflectableSpells[castBar.SpellID] == true\n        then\n            -- Color the bar if the spell is reflectable\n            nextColor = modTable.config.colorSecondaryInterrupt\n        end\n        \n        local currentR, currentG, currentB, currentA = castBar:GetColor()\n        local nextR, nextG, nextB, nextA = unpack(nextColor)\n        \n        if currentR ~= nextR or currentG ~= nextG or currentB ~= nextB or currentA ~= nextA then\n            Plater.SetCastBarColor(unitFrame, nextColor)\n        end\n    end\n    \n    if playerClass == 1 then\n        --TWW Dungeons \n        local araKara = {\n            436322, -- Poison bolt - atik\n            434786, -- Web bolt\n        }\n        \n        local cityOfThreads = {\n            442536, -- Grimweave Blast\n            443427, -- Web Bolt\n            439341, -- Splice - Izo\n            446717, -- Umbral Weave\n            438860, -- Umbral Weave - Izo\n        }\n        \n        local theDawnbreaker = {\n            428086, -- Shadow bolt\n            451114, -- Congealed Shadow\n            432448, -- Stygian Seed\n            431495, -- Black Edge\n            451113, -- Web Bolt\n            431303, -- Night Bolt\n            431494, -- Black Edge\n        }\n        \n        local theStonevault = {\n            429422, -- Stone Bolt\n            426283, -- Arcing Void\n            429110, --Alloy Bolt\n            429545, -- Censoring Gear\n            459210, -- Shadow Claw\n            430097, -- Molten Metal - Speaker Brokk\n        }\n        \n        local cinderbrewMeadery = {\n            \n        }\n        \n        local darkflameCleft = { \n            \n        }\n        \n        local prioryOfTheSacredFlame = {\n            \n        }\n        \n        local theRookery = {\n            \n        }\n        \n        \n        \n        --DF Dungeons\n        \n        local murozondsRise = {\n            400165, -- Epoch Bolt\n            413607, -- Corroding Volley\n            418202, -- Temporal Blast\n            417030, -- Fireball\n            411763, -- Infinite Blast\n            407121, -- Immolate\n        }\n        \n        local galakrondsFall = {\n            415435, -- Infinite Bolt\n            413590, -- Noxious Ejection\n            411958, -- Stonebolt\n        }\n        \n        local rubyLifePools = {\n            373803, -- Cold Claws boss adds\n            372683, -- Cold Claws trash\n            372808, -- Frigid Shard\n            373693, -- Living Bomb\n            371984, -- Icebolt\n            384197, -- Cinderbolt\n            384194, -- Cinderbolt\n            392576, -- Thunderbolt\n            385310, -- Lightning Bolt\n            385536, -- Flame Dance\n        }\n        \n        local azureVault = {\n            374789, -- Infused Strike\n            373932, -- Illusionary Bolt\n            384978, -- Dragon Strike\n            377503, -- Condensed Frost\n            389804, -- Heavy Tome\n            371306, -- Arcane Bolt\n        }\n        \n        local brackenhideHollow = {\n            382249, -- Earth Bolt\n            381694, -- Decayed Senses\n            378155, -- Earth Bolt (boss)\n            382474, -- Decay Surge\n        }\n        \n        local hallsOfInfusion = {\n            374020, -- Containment Beam\n            389443, -- Purifying Blast\n            374706, -- Pyretic Burst\n            375950, -- Ice Shard\n            385963, -- Frost Shock\n            395690, -- Lightning Blast\n            387504, -- Squall Buffet\n            387571, -- Focused Deluge\n        }\n        \n        local uldaman = {\n            369674, -- Stone Spike\n            369675, -- Chain Lightning\n            372718, -- Earthen Shards\n            369399, -- Stone Bolt\n            369365, -- Curse of Stone\n            377395, -- Time Sink\n        }\n        \n        local neltharus = {\n            378818, -- Magma Conflagration\n            372538, -- Melt\n            383231, -- Lava Bolt\n        }\n        \n        local nokhudOffensive = {\n            387125, -- Thunderstrike\n            387127, -- Chain Lightning\n            386012, -- Stormbolt\n            387613, -- Death Bolt\n            382670, -- Gale Arrow\n            376827, -- Conductive Strike\n            384761, -- Wind Burst\n            396206, -- Storm Shock\n            381530, -- Storm Shock\n        }\n        \n        local algetharAcademy = {\n            388862, -- Surge\n            377991, -- Storm Slash\n            387975, -- Arcane Missiles\n        }\n        \n        --Shadowlands Dungeons\n        \n        local mistsOfTirnaScithe = {\n            332767, --Spirit Bolt\n            323057, --Spirit Bolt - Boss\n            332557, --Soul Split\n            463217, --Anima Slash\n            325223, --Anima Injection\n            332486, --Overgrowth\n        }\n        \n        local theNecroticWake = {\n            328667, --Frostbolt Volley\n            333623, --Frostbolt Volley\n            326574, --Noxious Fog\n            320788, --Frozen Binds\n            322274, --Enfeeble\n            334748, --Drain Fluids\n            320462, --Necrotic Bolt\n            333479, --Spew Disease\n            323347, --Clinging Darkness\n            333602, --Frostbolt\n        }\n        \n        \n        \n        --BFA Dungeons\n        \n        local siegeOfBoralus = {\n            272581, -- Water bolt\n            257063, -- Brackish bolt\n        }\n        \n        local waycrestManor = {\n            265372, -- Shadow Cleave\n            263943, -- Etch\n            264105, -- Runic Mark\n            260701, -- Bramble Bolt\n            260699, -- Soul Bolt\n            260700, -- Ruinous Bolt\n            266036, -- Drain Essence\n            264024, -- Soul Bolt\n            426541, -- Runic Bolt\n            264556, -- Tearing Strike\n            264153, -- Spit\n            278444, -- Infest\n            265881, -- Decaying Touch\n            265880, -- Dread Mark\n            268278, -- Wracking Chord\n            261438, -- Wasting Strike\n            261440, -- Virulent Pathogen\n        }\n        \n        local atalDazar = {\n            253562, -- Wildfire\n            254959, -- Soul Burn\n            252923, -- Venom Blast\n            252687, -- Venomfang Strike\n            250096, -- Wracking Pain\n        }\n        \n        local underrot = {\n            265084, -- Blood Bolt\n            260879, -- Blood Bolt (boss)\n            278961, -- Decaying Mind\n            266265, -- Wicked Embrace\n            272180, -- Void Spit\n        }\n        \n        local freehold = {\n            259092, -- Lightning Bolt\n            257908, -- Oiled Blade\n            281420, -- Water Bolt\n        }\n        \n        \n        --Legion Dungeons\n        \n        local darkheartThicket = {\n            204243, -- Tormenting Eye\n            200238, -- Feed on the Weak\n            200185, -- Nightmare Bolt\n            200684, -- Nightmare Toxin\n            200642, -- Despair\n            201411, -- Firebolt\n            201837, -- Shadow Bolt\n        }\n        \n        local blackRookHold = {\n            199663, -- Soul Blast\n            200248, -- Arcane Blitz\n        }\n        \n        local neltharionsLair = {\n            186269, -- Stone Bolt\n            198496, -- Sunder\n            210150, -- Toxic Retch\n            200732, -- Molten Crash\n        }\n        \n        local hallsOfValor = {\n            198595, -- Thunderous Bolt\n            198962, -- Shattered Rune\n            198959, -- Etch\n            191976, -- Arcing Bolt\n            192288, -- Searing Light\n        }\n        \n        local courtOfStars = {\n            209036, -- Throw Torch\n            209413, -- Suppress\n            211406, -- Firebolt\n            211473, -- Shadow Slash\n            373364, -- Vampiric Claws\n        }\n        \n        \n        --WoD Dungeons\n        \n        local everbloom = {\n            169657, -- Poisonous Claws\n            168040, -- Nature's Wrath\n            168092, -- Water Bolt\n            169840, -- Frostbolt\n            169841, -- Arcane Blast\n            169839, -- Pyroblast\n            427858, -- Fireball\n            164965, -- Choking Vines\n        }\n        \n        local shadowmoonBurialGrounds = {\n            152814, -- Shadow Bolt\n            152819, -- Shadow Word: Frailty\n            156776, -- Rending Voidlash\n            398206, -- Death Blast\n            153067, -- Void Devastation\n            153524, -- Plague Spit\n        }\n        \n        --MoP Dungeons\n        \n        local templeOfTheJadeSerpent = {\n            397888, -- Hydrolance\n            114803, -- Throw Torch\n            114571, -- Agony\n            397914, -- Defiling Mist\n            397931, -- Dark Claw\n            106823, -- Serpent Strike\n        }\n        \n        \n        --Cata Dungeons\n        \n        local throneOfTheTides = {\n            426731, -- Water Bolt\n            428542, -- Crushing Depths\n            426768, -- Lightning Bolt\n            75992, -- Lightning Surge\n            428374, -- Focused Tempest\n            426783, -- Mind Flay\n            429048, -- Flame Shock\n            429173, -- Mind Rot\n            429176, -- Aquablast\n            428526, -- Ink Blast\n            428889, -- Foul Bolt\n        }\n        \n        local vortexPinnacle = {\n            410873, -- Rushing Wind\n            86331, -- Lightning Bolt\n            411019, -- Starlight\n            87762, -- Lightning Lash\n            87622, -- Chain Lightning\n        }\n        \n        local grimBatol = { \n            447966, --Shadowflame bolt (Boss)\n            76369, --Shadowflame bolt (adds)\n            450087, --Depth's Grasp\n            451971, --Lava Fist\n            451241, --Shadowflame Slash\n        }\n        \n        \n        \n        -- Raids\n        local nerubarPalace = {\n            438807, --Vicious Bite - Broodtwister\n            441362, --Volatile Concoction - Broodtwister\n            441772, --Void Bolt - Silken Court\n            438200, --Poison Bolt - Silken Court\n        }\n        \n        local amidrassil = {\n            431302, -- Fyr'alath's Flame, Fyrakk\n            421284, -- Coiling Flames, Volcoross\n        }\n        \n        local aberrus = {\n            403203, -- Flame Slash, Amalgamation Chamber\n            403699, -- Shadow Spike\n            397386, -- Lava Bolt, trash\n            410351, -- Flaming Cudgel, Assault\n        }\n        \n        local vault = {\n            396040, -- Pyroblast, Eranog\n            372394, -- Lightning Bolt, Council\n            372315, -- Frost Spike\n            372275, -- Chain Lightning\n            385812, -- Aerial Slash, Dathea\n            375716, -- Ice Barrage, Diurna\n            385553, -- Storm Bolt\n            375653, -- Static Jolt\n        }\n        \n        local zones = {\n            nerubarPalace,\n            araKara,\n            cityOfThreads,\n            grimBatol,\n            mistsOfTirnaScithe,\n            siegeOfBoralus,\n            theDawnbreaker,\n            theNecroticWake,\n            theStonevault,\n            cinderbrewMeadery,\n            darkflameCleft,\n            prioryOfTheSacredFlame,\n            theRookery,\n            rubyLifePools,\n            azureVault,\n            brackenhideHollow,\n            uldaman,\n            neltharus,\n            algetharAcademy,\n            nokhudOffensive,\n            hallsOfInfusion,\n            darkheartThicket,\n            everbloom,\n            throneOfTheTides,\n            waycrestManor,\n            atalDazar,\n            blackRookHold,\n            vortexPinnacle,\n            underrot,\n            freehold,\n            neltharionsLair,\n            templeOfTheJadeSerpent,\n            courtOfStars,\n            shadowmoonBurialGrounds,\n            hallsOfValor,\n            murozondsRise,\n            galakrondsFall,\n            amidrassil,\n            aberrus,\n            vault,\n        }\n        \n        for i = 1, #zones do\n            local zone = zones[i]\n            \n            for k = 1, #zone do\n                local id = zone[k]\n                modTable.reflectableSpells[id] = true\n            end\n        end\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable) end",
},
["Time"] = 1729486360,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 429383,
["Enabled"] = true,
["Revision"] = 1844,
["semver"] = "",
["Author"] = "Nimeshady-Zul'jin",
["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Enhanced Castbar - Jundies",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Feature - Custom cast bar coloring:",
["Name"] = "CUSTOM CAST BAR COLORS",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showInterruptColor",
["Value"] = true,
["Name"] = "Enable custom colored enemy cast bars.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
},
{
["Type"] = 4,
["Key"] = "showSecondaryInterrupts",
["Value"] = true,
["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
},
{
["Type"] = 1,
["Key"] = "colorInterruptAvailable",
["Value"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["Name"] = "Color when my primary interrupt is available.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorInterruptSoon",
["Value"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorNoInterrupt",
["Value"] = {
1,
0.49411767721176,
0.13725490868092,
1,
},
["Name"] = "Color when my primary interrupt is unavailable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
},
{
["Type"] = 1,
["Key"] = "colorSecondaryInterrupt",
["Value"] = {
1,
0.0078431377187371,
0.78431379795074,
1,
},
["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
},
{
["Type"] = 1,
["Key"] = "colorProtected",
["Value"] = {
0.80784320831299,
0.29411765933037,
0.28627452254295,
1,
},
["Name"] = "Color for casts that are protected/un-interruptable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
},
{
["Type"] = 1,
["Key"] = "colorTick",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Name"] = "Color of interrupt available tick. (Hover for more info)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Feature - Show name of target in the cast bar:",
["Name"] = "Settings Target Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTargetName",
["Value"] = true,
["Name"] = "Show the name of cast targets in the cast bar.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "hideNameSolo",
["Value"] = false,
["Name"] = "Hide my name when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "replaceName",
["Value"] = false,
["Name"] = "Show \"Me\" instead of my character name.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "The relative size (in percentage) that a spell name will take up of the cast bar, not including the target name. Adjust this so that target names fit into the cast bar correctly based on the width and text size of your cast bar. If you find even after adjusting this setting that there is not enough space try decreasing your cast bar text size or making the cast bar wider.",
["Min"] = 30,
["Key"] = "castNameSize",
["Value"] = 60,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Maximum length of a cast name in %. Hover for more info.",
},
{
["Type"] = 5,
["Key"] = "option8",
["Value"] = "Feature - Flash nameplates when a spell targets you:",
["Name"] = "Settings Border Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Namplate Flash",
},
{
["Type"] = 4,
["Key"] = "nameplateFlash",
["Value"] = false,
["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
},
{
["Type"] = 4,
["Key"] = "hideNameplateFlashSolo",
["Value"] = true,
["Name"] = "Hide flash effect when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing solo.",
},
{
["Type"] = 4,
["Key"] = "hideFlashAsTank",
["Value"] = true,
["Name"] = "Hide flash effect when I'm playing a tank specialization.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
},
},
["LastHookEdited"] = "Initialization",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["UID"] = "0x672976f090f7e2",
["Hooks"] = {
},
["Time"] = 1730770704,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["Icon"] = "",
["Enabled"] = false,
["Revision"] = 3,
["Options"] = {
},
["Author"] = "丶諾諾丶-索拉丁",
["Desc"] = "",
["Prio"] = 99,
["Name"] = "New Mod",
["PlaterCore"] = 1,
["HooksTemp"] = {
},
},
{
["OptionsValues"] = {
["specialColors"] = {
{
"116",
"navy",
},
},
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    unitFrame.castBar:UpdateCastColor()\nend",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptIDs()\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not envTable.lastUpdateTime or (envTable.lastUpdateTime < modTable.lastUpdateTime) then\n        modTable.setCastColorFunction (unitFrame)\n        envTable.lastUpdateTime = modTable.lastUpdateTime\n    end\nend",
["Initialization"] = "function (modTable)\n    \n    -- settings:\n    local noKickReadyColor = modTable.config.noKickReadyColor or \"blue\"\n    local kickReadyInTimeColor = modTable.config.kickReadyInTimeColor or \"purple\"\n    local kickOutOfRangeColor = modTable.config.kickOutOfRangeColor or \"orange\"\n    local kickOutOfRangeEnabled = modTable.config.kickOutOfRangeEnabled\n    local kickReadyInTimeGraceTime = modTable.config.kickReadyInTimeGraceTime or 0.5 --sec - additional time on the CD to account for reaction, lag, etc\n    local checkCovenant = true\n    local enableSigil = false\n    local showSpark = modTable.config.showSpark\n    local sparkColor = modTable.config.sparkColor\n    local sparkWidth = modTable.config.sparkWidth\n    local sparkTexture = modTable.config.sparkTexture\n    local textureChangeNotReady = modTable.config.textureChangeNotReady\n    local defaultTexture\n    local notReadyTexture\n    local LSM = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\n    if not LSM then\n        textureChangeNotReady = false\n    else\n        defaultTexture = LSM:Fetch (\"statusbar\", Plater.db.profile.cast_statusbar_texture)\n        notReadyTexture = LSM:Fetch (\"statusbar\", modTable.config.notReadyTexture) or modTable.config.notReadyTexture ~= \"\" and modTable.config.notReadyTexture or defaultTexture\n    end\n    \n    local specialCastColorsEnabled = modTable.config.specialColorsEnabled\n    local specialColorsData = modTable.config.specialColors\n    local platerCastColorsEnabled = modTable.config.platerCastColorsEnabled\n    local specialColorsForNonInterruptibleEnabled = modTable.config.specialColorsForNonInterruptibleEnabled\n    local specialColors = {}\n    local additionalInterruptColors = {\n        [31935] = {Plater:ParseColors(\"greenyellow\")}, --prot avenger's shield\n        --[375576] = {Plater:ParseColors(\"greenyellow\")}, --paladin kyrian bell\n    }\n    \n    if platerCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, colorData in pairs(Plater.db.profile.cast_colors) do\n            if colorData and colorData[1] and colorData[2] then\n                specialColors[tonumber(id) or id] = {Plater:ParseColors(colorData[2])}\n            end\n        end\n    end\n    if specialCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, color in pairs(specialColorsData) do\n            specialColors[tonumber(id) or id] = {Plater:ParseColors(color)}\n        end\n    end\n    local useSpecial = specialCastColorsEnabled or platerCastColorsEnabled\n    \n    \n    -- functions:\n    \n    -- determine interrupt spell according to spec\n    function modTable.updateInterruptIDs ()\n        local specId = \"N/A\"\n        if WOW_PROJECT_ID == WOW_PROJECT_MAINLINE then\n            specId = GetSpecializationInfo(GetSpecialization())\n        end\n        modTable.knownSpecID = specId\n        local interruptIDs = {} -- contains: [spellID] = <is player ability>, false meaning pet or weird workarounds needed\n        if WOW_PROJECT_ID == WOW_PROJECT_MAINLINE then\n            if Plater.PlayerClass == \"ROGUE\" then\n                interruptIDs[1766] = true\n            elseif Plater.PlayerClass == \"DEATHKNIGHT\" then\n                interruptIDs[47528] = true\n            elseif Plater.PlayerClass == \"DEMONHUNTER\" then\n                interruptIDs[183752] = true\n                if specId == 581 then\n                    interruptIDs[202137] = enableSigil\n                end\n            elseif Plater.PlayerClass == \"DRUID\" then\n                if specId == 103 or specId == 104 or specId == 105 then\n                    interruptIDs[106839] = true -- feral/guardian/resto\n                elseif specId == 102 then\n                    interruptIDs[78675] = true -- moonkin\n                end\n            elseif Plater.PlayerClass == \"HUNTER\" then\n                if specId == 255 then\n                    interruptIDs[187707] = true -- SV\n                else\n                    interruptIDs[147362] = true -- BM/MS\n                end\n            elseif Plater.PlayerClass == \"MONK\" then\n                interruptIDs[116705] = true --WW/BM/MW\n            elseif Plater.PlayerClass == \"PALADIN\" then\n                interruptIDs[96231] = true --prot/ret/holy\n                if specId == 66 then\n                    interruptIDs[31935] = true --prot avenger's shield\n                    if IsPlayerSpell(375576) then\n                        interruptIDs[375576] = true --Divine Toll\n                    end\n                end\n            elseif Plater.PlayerClass == \"SHAMAN\" then\n                interruptIDs[57994] = true\n            elseif Plater.PlayerClass == \"WARRIOR\" then\n                interruptIDs[6552] = true\n                if modTable.isTalentLearned(90307) then --Disrupting Shout\n                    interruptIDs[90307] = \"386071\"\n                end\n            elseif Plater.PlayerClass == \"MAGE\" then\n                interruptIDs[2139] = true\n            elseif Plater.PlayerClass == \"PRIEST\" then\n                if specId == 258 then\n                    interruptIDs[15487] = true\n                end\n            elseif Plater.PlayerClass == \"WARLOCK\" then\n                interruptIDs[119910] = 119898 --Spell Lock (command ability)\n                if IsPlayerSpell(108503) then --GoSac\n                    interruptIDs[132409] = 119898 --sacrificed Spell Lock (command ability)\n                end\n                if IsPlayerSpell(212619) then --Call Felhunter (PVP ability)\n                    interruptIDs[212619] = true\n                end\n                if specId == 266 then\n                    interruptIDs[119914] = 119898 --demo/fel guard  Axe Toss (command ability)\n                end\n            elseif Plater.PlayerClass == \"EVOKER\" then\n                interruptIDs[351338] = true --quell talent\n            end\n        else -- classic\n            if Plater.PlayerClass == \"ROGUE\" then\n                interruptIDs[1766] = true\n            elseif Plater.PlayerClass == \"DEATHKNIGHT\" then\n                interruptIDs[47528] = true\n                interruptIDs[47476] = true\n            elseif Plater.PlayerClass == \"DRUID\" then\n                interruptIDs[16979] = true\n                interruptIDs[80964] = true\n                interruptIDs[80965] = true\n            elseif Plater.PlayerClass == \"HUNTER\" then\n                interruptIDs[34490] = true\n            elseif Plater.PlayerClass == \"SHAMAN\" then\n                interruptIDs[57994] = true\n            elseif Plater.PlayerClass == \"WARRIOR\" then\n                interruptIDs[6552] = true\n                interruptIDs[72] = true\n            elseif Plater.PlayerClass == \"MAGE\" then\n                interruptIDs[2139] = true\n            elseif Plater.PlayerClass == \"PRIEST\" then\n                interruptIDs[15487] = true\n            elseif Plater.PlayerClass == \"WARLOCK\" then\n                interruptIDs[19647] = true --Spell Lock\n            end\n        end\n        modTable.interruptSpellIDs = interruptIDs\n    end\n    \n    function modTable.updateInterruptId (unitFrame)\n        local specId = \"N/A\"\n        if WOW_PROJECT_ID == WOW_PROJECT_MAINLINE then\n            specId = GetSpecializationInfo(GetSpecialization())\n        end\n        if not modTable.interruptSpellIDs or modTable.knownSpecID ~= specId then\n            modTable.updateInterruptIDs()\n        end\n        unitFrame.castBar.interruptSpellIDs = modTable.interruptSpellIDs\n    end\n    \n    function modTable.isTalentLearned(nodeID)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then return false end\n        local talentConfig = C_ClassTalents.GetActiveConfigID()\n        local nodeInfo = talentConfig and nodeID and C_Traits.GetNodeInfo(talentConfig, nodeID)\n        return nodeInfo and nodeInfo.entryIDsWithCommittedRanks and nodeInfo.entryIDsWithCommittedRanks[1] and true or false\n    end\n    \n    local function isSpellOrTalentKnown(spellId)\n        if IsSpellKnown(spellId) or IsSpellKnown(spellId, true) then -- check pet as well\n            return true\n        elseif modTable.isTalentLearned(spellId) then\n            return true\n        end\n    end\n    \n    local function setCastBarTexture(castBar, notReady)\n        if textureChangeNotReady then\n            local texture = notReady and notReadyTexture or defaultTexture\n            if castBar.curTextureNotInterrupt ~= texture then\n                castBar:SetStatusBarTexture (texture)\n                castBar.curTextureNotInterrupt = texture\n            end\n        end\n    end\n    \n    local GetSpellCooldown = GetSpellCooldown or function(spellID)\n        local spellCooldownInfo = C_Spell.GetSpellCooldown(spellID)\n        if spellCooldownInfo then\n            return spellCooldownInfo.startTime, spellCooldownInfo.duration, spellCooldownInfo.isEnabled, spellCooldownInfo.modRate\n        end\n    end\n    local IsSpellInRange = IsSpellInRange and function(id) return IsSpellInRange(GetSpellInfo(id)) end or function(id, unit)\n        local result = C_Spell.IsSpellInRange(id, unit)\n        if result == true then\n            return 1\n        elseif result == false then\n            return 0\n        end\n        return nil\n    end\n    function modTable.setCastColorFunction (unitFrame)\n        -- create spark (if needed)\n        local castBar = unitFrame.castBar\n        if not castBar.InterruptSpark then\n            castBar.InterruptSpark = castBar:CreateTexture (nil, \"overlay\")\n            castBar.InterruptSpark:SetDrawLayer (\"overlay\", 4)\n            castBar.InterruptSpark:SetBlendMode (\"ADD\")\n            castBar.InterruptSpark:SetHeight(castBar:GetHeight() + 6)\n        end\n        castBar.InterruptSpark:SetTexture(Plater.SparkTextures[sparkTexture])\n        castBar.InterruptSpark:SetVertexColor(Plater:ParseColors(sparkColor))\n        castBar.InterruptSpark:SetWidth(sparkWidth)\n        \n        if not LSM then\n            textureChangeNotReady = false\n        else\n            defaultTexture = LSM:Fetch (\"statusbar\", Plater.db.profile.cast_statusbar_texture)\n            notReadyTexture = LSM:Fetch (\"statusbar\", modTable.config.notReadyTexture) or modTable.config.notReadyTexture ~= \"\" and modTable.config.notReadyTexture or defaultTexture\n        end\n        \n        -- overwrite the color function:\n        castBar.GetCastColor = function (self)\n            \n            self.InterruptSpark:Hide()\n            setCastBarTexture(self)\n            \n            local interruptCD, interruptReadyInTime = nil, false\n            local interruptDur, interruptStart = 0, 0\n            local usedInterruptSpellId\n            local spellOutOfRange = false --skip per default\n            if self.interruptSpellIDs and self.unit and UnitCanAttack(\"player\", self.unit) then\n                \n                for interruptSpellId, playerAbility in pairs(self.interruptSpellIDs) do\n                    if playerAbility == true or type(playerAbility) == \"string\"  then\n                        if isSpellOrTalentKnown(interruptSpellId) then\n                            interruptSpellId = tonumber(playerAbility) or interruptSpellId\n                            local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                            local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                            --print(interruptSpellId, cdStart, cdDur, tmpInterruptCD)\n                            if not interruptCD or (tmpInterruptCD < interruptCD) then\n                                interruptCD = tmpInterruptCD\n                                interruptDur = cdDur\n                                interruptStart = cdStart\n                                spellOutOfRange = kickOutOfRangeEnabled and IsSpellInRange(interruptSpellId, self.unit) == 0\n                            elseif tmpInterruptCD == 0 then\n                                if additionalInterruptColors[interruptSpellId] or not usedInterruptSpellId then\n                                    usedInterruptSpellId = interruptSpellId\n                                elseif not additionalInterruptColors[interruptSpellId] and additionalInterruptColors[usedInterruptSpellId] then\n                                    usedInterruptSpellId = interruptSpellId\n                                end\n                            end\n                        end\n                    else\n                        if type(playerAbility) == \"number\" then\n                            -- workaround for spell overrides (on WL command ability, etc.)\n                            if FindSpellOverrideByID(playerAbility) == interruptSpellId then\n                                local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                                local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                                if not interruptCD or  (tmpInterruptCD < interruptCD) then\n                                    interruptCD = tmpInterruptCD\n                                    interruptDur = cdDur\n                                    interruptStart = cdStart\n                                    spellOutOfRange = kickOutOfRangeEnabled and IsSpellInRange(interruptSpellId, self.unit) == 0\n                                elseif tmpInterruptCD == 0 then\n                                    if additionalInterruptColors[interruptSpellId] or not usedInterruptSpellId then\n                                        usedInterruptSpellId = interruptSpellId\n                                    elseif not additionalInterruptColors[interruptSpellId] and additionalInterruptColors[usedInterruptSpellId] then\n                                        usedInterruptSpellId = interruptSpellId\n                                    end\n                                end \n                            end\n                        end\n                    end\n                end\n                \n                if not interruptCD then\n                    interruptCD = 0\n                end\n                \n                if self.channeling then\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < self.value\n                else\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < (self.maxValue - self.value)\n                end\n            end\n            \n            if not interruptCD then\n                interruptCD = 0\n            end\n            \n            if (not self.canInterrupt) then\n                return (specialColorsForNonInterruptibleEnabled and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.NonInterruptible\n                \n            elseif (self.failed) then\n                return self.Colors.Failed\n                \n            elseif (self.interrupted) then\n                return self.Colors.Interrupted\n                \n            elseif (self.finished) then\n                return self.Colors.Finished\n                \n            elseif interruptCD > 0 and interruptReadyInTime then\n                if showSpark then\n                    self.InterruptSpark:Show()\n                    local sparkPosition = (interruptStart + interruptDur - self.spellStartTime + kickReadyInTimeGraceTime)/self.maxValue\n                    if self.channeling then\n                        sparkPosition = 1-sparkPosition\n                    end\n                    self.InterruptSpark:SetPoint (\"center\", self, \"left\", sparkPosition  * self:GetWidth(), 0)\n                end\n                setCastBarTexture(self, true)\n                return additionalInterruptColors[usedInterruptSpellId] or kickReadyInTimeColor\n                \n            elseif interruptCD > 0 then\n                setCastBarTexture(self, true)\n                return noKickReadyColor\n                \n            elseif kickOutOfRangeEnabled and spellOutOfRange then\n                return kickOutOfRangeColor\n                \n            elseif (self.channeling) then\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Channeling\n                \n            else\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Casting\n                \n            end\n        end\n    end\n    \n    modTable.lastUpdateTime = time()\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\n    modTable.setCastColorFunction(unitFrame)\nend",
},
["Time"] = 1730770712,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/jHilJiXiY/55",
["Icon"] = 132219,
["Enabled"] = true,
["Revision"] = 1018,
["semver"] = "1.3.15",
["Author"] = "Viash-Thrall",
["Desc"] = "Sets the cast bar color to the specified one if your interrupt spell is not ready. Uses other Plater color settings otherwise.",
["Prio"] = 99,
["Name"] = "Interrupt not ready Cast Color",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "General:",
["Value"] = "General:",
["Key"] = "option8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Kick not Ready Color",
["Value"] = {
0,
0,
1,
1,
},
["Key"] = "noKickReadyColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Kick Ready in Time Color",
["Value"] = {
0.50196078431373,
0,
1,
1,
},
["Key"] = "kickReadyInTimeColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Kick out of Range Color",
["Value"] = {
1,
0.54901960784314,
0,
1,
},
["Key"] = "kickOutOfRangeColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Check 'Out Of Range'",
["Value"] = false,
["Key"] = "kickOutOfRangeEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "kickReadyInTimeGraceTime",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Reaction grace Time",
},
{
["Type"] = 4,
["Name"] = "Enable special Colors",
["Value"] = false,
["Key"] = "specialColorsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Enable Plater Cast Colors",
["Value"] = false,
["Key"] = "platerCastColorsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Colors for not-interruptible",
["Value"] = false,
["Key"] = "specialColorsForNonInterruptibleEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 18",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Texture for \"interrupt not ready\"",
["Value"] = false,
["Key"] = "textureChangeNotReady",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 3,
["Name"] = "Texture",
["Value"] = "Details Flat",
["Key"] = "notReadyTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Use either a texture name (LSM) or texture path",
},
{
["Type"] = 6,
["Name"] = "Option 10",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Spark:",
["Value"] = "Spark:",
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Spark",
["Value"] = true,
["Key"] = "showSpark",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0,
1,
0,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 12,
["Key"] = "sparkWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Spark Width",
},
{
["Type"] = 2,
["Max"] = 8,
["Desc"] = "",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "sparkTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Spark Texure",
},
{
["Type"] = 7,
["Name"] = "Special Cast Colors",
["Value"] = {
{
"116",
"navy",
},
},
["Key"] = "specialColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["HooksTemp"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not envTable.lastUpdateTime or (envTable.lastUpdateTime < modTable.lastUpdateTime) then\n        modTable.setCastColorFunction (unitFrame)\n        envTable.lastUpdateTime = modTable.lastUpdateTime\n    end\nend",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptIDs()\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    unitFrame.castBar:UpdateCastColor()\nend",
["Initialization"] = "function (modTable)\n    \n    -- settings:\n    local noKickReadyColor = modTable.config.noKickReadyColor or \"blue\"\n    local kickReadyInTimeColor = modTable.config.kickReadyInTimeColor or \"purple\"\n    local kickOutOfRangeColor = modTable.config.kickOutOfRangeColor or \"orange\"\n    local kickOutOfRangeEnabled = modTable.config.kickOutOfRangeEnabled\n    local kickReadyInTimeGraceTime = modTable.config.kickReadyInTimeGraceTime or 0.5 --sec - additional time on the CD to account for reaction, lag, etc\n    local checkCovenant = true\n    local enableSigil = false\n    local showSpark = modTable.config.showSpark\n    local sparkColor = modTable.config.sparkColor\n    local sparkWidth = modTable.config.sparkWidth\n    local sparkTexture = modTable.config.sparkTexture\n    local textureChangeNotReady = modTable.config.textureChangeNotReady\n    local defaultTexture\n    local notReadyTexture\n    local LSM = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\n    if not LSM then\n        textureChangeNotReady = false\n    else\n        defaultTexture = LSM:Fetch (\"statusbar\", Plater.db.profile.cast_statusbar_texture)\n        notReadyTexture = LSM:Fetch (\"statusbar\", modTable.config.notReadyTexture) or modTable.config.notReadyTexture ~= \"\" and modTable.config.notReadyTexture or defaultTexture\n    end\n    \n    local specialCastColorsEnabled = modTable.config.specialColorsEnabled\n    local specialColorsData = modTable.config.specialColors\n    local platerCastColorsEnabled = modTable.config.platerCastColorsEnabled\n    local specialColorsForNonInterruptibleEnabled = modTable.config.specialColorsForNonInterruptibleEnabled\n    local specialColors = {}\n    local additionalInterruptColors = {\n        [31935] = {Plater:ParseColors(\"greenyellow\")}, --prot avenger's shield\n        --[375576] = {Plater:ParseColors(\"greenyellow\")}, --paladin kyrian bell\n    }\n    \n    if platerCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, colorData in pairs(Plater.db.profile.cast_colors) do\n            if colorData and colorData[1] and colorData[2] then\n                specialColors[tonumber(id) or id] = {Plater:ParseColors(colorData[2])}\n            end\n        end\n    end\n    if specialCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, color in pairs(specialColorsData) do\n            specialColors[tonumber(id) or id] = {Plater:ParseColors(color)}\n        end\n    end\n    local useSpecial = specialCastColorsEnabled or platerCastColorsEnabled\n    \n    \n    -- functions:\n    \n    -- determine interrupt spell according to spec\n    function modTable.updateInterruptIDs ()\n        local specId = \"N/A\"\n        if WOW_PROJECT_ID == WOW_PROJECT_MAINLINE then\n            specId = GetSpecializationInfo(GetSpecialization())\n        end\n        modTable.knownSpecID = specId\n        local interruptIDs = {} -- contains: [spellID] = <is player ability>, false meaning pet or weird workarounds needed\n        if WOW_PROJECT_ID == WOW_PROJECT_MAINLINE then\n            if Plater.PlayerClass == \"ROGUE\" then\n                interruptIDs[1766] = true\n            elseif Plater.PlayerClass == \"DEATHKNIGHT\" then\n                interruptIDs[47528] = true\n            elseif Plater.PlayerClass == \"DEMONHUNTER\" then\n                interruptIDs[183752] = true\n                if specId == 581 then\n                    interruptIDs[202137] = enableSigil\n                end\n            elseif Plater.PlayerClass == \"DRUID\" then\n                if specId == 103 or specId == 104 or specId == 105 then\n                    interruptIDs[106839] = true -- feral/guardian/resto\n                elseif specId == 102 then\n                    interruptIDs[78675] = true -- moonkin\n                end\n            elseif Plater.PlayerClass == \"HUNTER\" then\n                if specId == 255 then\n                    interruptIDs[187707] = true -- SV\n                else\n                    interruptIDs[147362] = true -- BM/MS\n                end\n            elseif Plater.PlayerClass == \"MONK\" then\n                interruptIDs[116705] = true --WW/BM/MW\n            elseif Plater.PlayerClass == \"PALADIN\" then\n                interruptIDs[96231] = true --prot/ret/holy\n                if specId == 66 then\n                    interruptIDs[31935] = true --prot avenger's shield\n                    if IsPlayerSpell(375576) then\n                        interruptIDs[375576] = true --Divine Toll\n                    end\n                end\n            elseif Plater.PlayerClass == \"SHAMAN\" then\n                interruptIDs[57994] = true\n            elseif Plater.PlayerClass == \"WARRIOR\" then\n                interruptIDs[6552] = true\n                if modTable.isTalentLearned(90307) then --Disrupting Shout\n                    interruptIDs[90307] = \"386071\"\n                end\n            elseif Plater.PlayerClass == \"MAGE\" then\n                interruptIDs[2139] = true\n            elseif Plater.PlayerClass == \"PRIEST\" then\n                if specId == 258 then\n                    interruptIDs[15487] = true\n                end\n            elseif Plater.PlayerClass == \"WARLOCK\" then\n                interruptIDs[119910] = 119898 --Spell Lock (command ability)\n                if IsPlayerSpell(108503) then --GoSac\n                    interruptIDs[132409] = 119898 --sacrificed Spell Lock (command ability)\n                end\n                if IsPlayerSpell(212619) then --Call Felhunter (PVP ability)\n                    interruptIDs[212619] = true\n                end\n                if specId == 266 then\n                    interruptIDs[119914] = 119898 --demo/fel guard  Axe Toss (command ability)\n                end\n            elseif Plater.PlayerClass == \"EVOKER\" then\n                interruptIDs[351338] = true --quell talent\n            end\n        else -- classic\n            if Plater.PlayerClass == \"ROGUE\" then\n                interruptIDs[1766] = true\n            elseif Plater.PlayerClass == \"DEATHKNIGHT\" then\n                interruptIDs[47528] = true\n                interruptIDs[47476] = true\n            elseif Plater.PlayerClass == \"DRUID\" then\n                interruptIDs[16979] = true\n                interruptIDs[80964] = true\n                interruptIDs[80965] = true\n            elseif Plater.PlayerClass == \"HUNTER\" then\n                interruptIDs[34490] = true\n            elseif Plater.PlayerClass == \"SHAMAN\" then\n                interruptIDs[57994] = true\n            elseif Plater.PlayerClass == \"WARRIOR\" then\n                interruptIDs[6552] = true\n                interruptIDs[72] = true\n            elseif Plater.PlayerClass == \"MAGE\" then\n                interruptIDs[2139] = true\n            elseif Plater.PlayerClass == \"PRIEST\" then\n                interruptIDs[15487] = true\n            elseif Plater.PlayerClass == \"WARLOCK\" then\n                interruptIDs[19647] = true --Spell Lock\n            end\n        end\n        modTable.interruptSpellIDs = interruptIDs\n    end\n    \n    function modTable.updateInterruptId (unitFrame)\n        local specId = \"N/A\"\n        if WOW_PROJECT_ID == WOW_PROJECT_MAINLINE then\n            specId = GetSpecializationInfo(GetSpecialization())\n        end\n        if not modTable.interruptSpellIDs or modTable.knownSpecID ~= specId then\n            modTable.updateInterruptIDs()\n        end\n        unitFrame.castBar.interruptSpellIDs = modTable.interruptSpellIDs\n    end\n    \n    function modTable.isTalentLearned(nodeID)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then return false end\n        local talentConfig = C_ClassTalents.GetActiveConfigID()\n        local nodeInfo = talentConfig and nodeID and C_Traits.GetNodeInfo(talentConfig, nodeID)\n        return nodeInfo and nodeInfo.entryIDsWithCommittedRanks and nodeInfo.entryIDsWithCommittedRanks[1] and true or false\n    end\n    \n    local function isSpellOrTalentKnown(spellId)\n        if IsSpellKnown(spellId) or IsSpellKnown(spellId, true) then -- check pet as well\n            return true\n        elseif modTable.isTalentLearned(spellId) then\n            return true\n        end\n    end\n    \n    local function setCastBarTexture(castBar, notReady)\n        if textureChangeNotReady then\n            local texture = notReady and notReadyTexture or defaultTexture\n            if castBar.curTextureNotInterrupt ~= texture then\n                castBar:SetStatusBarTexture (texture)\n                castBar.curTextureNotInterrupt = texture\n            end\n        end\n    end\n    \n    local GetSpellCooldown = GetSpellCooldown or function(spellID)\n        local spellCooldownInfo = C_Spell.GetSpellCooldown(spellID)\n        if spellCooldownInfo then\n            return spellCooldownInfo.startTime, spellCooldownInfo.duration, spellCooldownInfo.isEnabled, spellCooldownInfo.modRate\n        end\n    end\n    local IsSpellInRange = IsSpellInRange and function(id) return IsSpellInRange(GetSpellInfo(id)) end or function(id, unit)\n        local result = C_Spell.IsSpellInRange(id, unit)\n        if result == true then\n            return 1\n        elseif result == false then\n            return 0\n        end\n        return nil\n    end\n    function modTable.setCastColorFunction (unitFrame)\n        -- create spark (if needed)\n        local castBar = unitFrame.castBar\n        if not castBar.InterruptSpark then\n            castBar.InterruptSpark = castBar:CreateTexture (nil, \"overlay\")\n            castBar.InterruptSpark:SetDrawLayer (\"overlay\", 4)\n            castBar.InterruptSpark:SetBlendMode (\"ADD\")\n            castBar.InterruptSpark:SetHeight(castBar:GetHeight() + 6)\n        end\n        castBar.InterruptSpark:SetTexture(Plater.SparkTextures[sparkTexture])\n        castBar.InterruptSpark:SetVertexColor(Plater:ParseColors(sparkColor))\n        castBar.InterruptSpark:SetWidth(sparkWidth)\n        \n        if not LSM then\n            textureChangeNotReady = false\n        else\n            defaultTexture = LSM:Fetch (\"statusbar\", Plater.db.profile.cast_statusbar_texture)\n            notReadyTexture = LSM:Fetch (\"statusbar\", modTable.config.notReadyTexture) or modTable.config.notReadyTexture ~= \"\" and modTable.config.notReadyTexture or defaultTexture\n        end\n        \n        -- overwrite the color function:\n        castBar.GetCastColor = function (self)\n            \n            self.InterruptSpark:Hide()\n            setCastBarTexture(self)\n            \n            local interruptCD, interruptReadyInTime = nil, false\n            local interruptDur, interruptStart = 0, 0\n            local usedInterruptSpellId\n            local spellOutOfRange = false --skip per default\n            if self.interruptSpellIDs and self.unit and UnitCanAttack(\"player\", self.unit) then\n                \n                for interruptSpellId, playerAbility in pairs(self.interruptSpellIDs) do\n                    if playerAbility == true or type(playerAbility) == \"string\"  then\n                        if isSpellOrTalentKnown(interruptSpellId) then\n                            interruptSpellId = tonumber(playerAbility) or interruptSpellId\n                            local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                            local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                            --print(interruptSpellId, cdStart, cdDur, tmpInterruptCD)\n                            if not interruptCD or (tmpInterruptCD < interruptCD) then\n                                interruptCD = tmpInterruptCD\n                                interruptDur = cdDur\n                                interruptStart = cdStart\n                                spellOutOfRange = kickOutOfRangeEnabled and IsSpellInRange(interruptSpellId, self.unit) == 0\n                            elseif tmpInterruptCD == 0 then\n                                if additionalInterruptColors[interruptSpellId] or not usedInterruptSpellId then\n                                    usedInterruptSpellId = interruptSpellId\n                                elseif not additionalInterruptColors[interruptSpellId] and additionalInterruptColors[usedInterruptSpellId] then\n                                    usedInterruptSpellId = interruptSpellId\n                                end\n                            end\n                        end\n                    else\n                        if type(playerAbility) == \"number\" then\n                            -- workaround for spell overrides (on WL command ability, etc.)\n                            if FindSpellOverrideByID(playerAbility) == interruptSpellId then\n                                local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                                local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                                if not interruptCD or  (tmpInterruptCD < interruptCD) then\n                                    interruptCD = tmpInterruptCD\n                                    interruptDur = cdDur\n                                    interruptStart = cdStart\n                                    spellOutOfRange = kickOutOfRangeEnabled and IsSpellInRange(interruptSpellId, self.unit) == 0\n                                elseif tmpInterruptCD == 0 then\n                                    if additionalInterruptColors[interruptSpellId] or not usedInterruptSpellId then\n                                        usedInterruptSpellId = interruptSpellId\n                                    elseif not additionalInterruptColors[interruptSpellId] and additionalInterruptColors[usedInterruptSpellId] then\n                                        usedInterruptSpellId = interruptSpellId\n                                    end\n                                end \n                            end\n                        end\n                    end\n                end\n                \n                if not interruptCD then\n                    interruptCD = 0\n                end\n                \n                if self.channeling then\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < self.value\n                else\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < (self.maxValue - self.value)\n                end\n            end\n            \n            if not interruptCD then\n                interruptCD = 0\n            end\n            \n            if (not self.canInterrupt) then\n                return (specialColorsForNonInterruptibleEnabled and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.NonInterruptible\n                \n            elseif (self.failed) then\n                return self.Colors.Failed\n                \n            elseif (self.interrupted) then\n                return self.Colors.Interrupted\n                \n            elseif (self.finished) then\n                return self.Colors.Finished\n                \n            elseif interruptCD > 0 and interruptReadyInTime then\n                if showSpark then\n                    self.InterruptSpark:Show()\n                    local sparkPosition = (interruptStart + interruptDur - self.spellStartTime + kickReadyInTimeGraceTime)/self.maxValue\n                    if self.channeling then\n                        sparkPosition = 1-sparkPosition\n                    end\n                    self.InterruptSpark:SetPoint (\"center\", self, \"left\", sparkPosition  * self:GetWidth(), 0)\n                end\n                setCastBarTexture(self, true)\n                return additionalInterruptColors[usedInterruptSpellId] or kickReadyInTimeColor\n                \n            elseif interruptCD > 0 then\n                setCastBarTexture(self, true)\n                return noKickReadyColor\n                \n            elseif kickOutOfRangeEnabled and spellOutOfRange then\n                return kickOutOfRangeColor\n                \n            elseif (self.channeling) then\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Channeling\n                \n            else\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Casting\n                \n            end\n        end\n    end\n    \n    modTable.lastUpdateTime = time()\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\n    modTable.setCastColorFunction(unitFrame)\nend",
},
["version"] = 55,
},
{
["LastHookEdited"] = "Constructor",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.SetNameplateColors()\nend",
["Constructor"] = "function(self, unitId, unitFrame, envTable)\n    -- Config Tables\n    envTable.UseInPvP = false\n    envTable.UseRaidMarks = false\n    envTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"lightblue\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"ghostwhite\", --skull\n    }\n    \n    --[[\n        Supports matching multiple auras to set a specific color.\n        ATTENTION: The first hit in the list will be used. So add your multi-matches to the top of the list!\n\n        Each entry has the following format:\n                { \n                    auras = {<auraID1>, <auraID2>, ..., <auraIDn>}, -- all aura-IDs which should be matched for the color. can be one to many auras\n                    -- ATTENTION: Currently stacks only works for the first auraID in the list\n                    stacks = <stacks>, -- required stacks for the condition (optional, can be removed)\n                    borderColor = \"violet\", -- the border color to be set (optional, can be removed)\n                    nameplateColor = \"violet\", -- the nameplate color which should be set (optional, can be removed)\n                },\n\n        Colors can be either any \"/plater colors\" as a string or a color map {r,g,b,a} , e.g. {1,0.35,0} or hex values, e.g. \"#00a3ff\"\n\n        The example below sets \"violet\" if moonfire and sunfire are active and \"orange\" for only sunfire or \"blue\" for only moonfire\n    --]]\n    \n    envTable.BuffsToMatch = {\n        { \n            auras = {335467, 589,34914}, -- Devouring Plague + SW:P + Vampiric Touch\n            borderColor = \"#a838ff\",\n            nameplateColor = \"#a838ff\",\n        },\n        { \n            auras = {589, 34914}, --Vampiric Touch + SP\n            borderColor = \"#a838fff\",\n        },\n        {\n            auras = {980, 146739, 316099}, -- Agony, Corruption, and Unstable Affliction\n            nameplateColor = \"#780095\",\n            borderColor = \"#780095\",\n        },\n        {\n            auras = {980, 445474, 316099}, -- Agony, Wither, and Unstable Affliction\n            nameplateColor = \"#4100ff\",\n            borderColor = \"#4100ff\",\n        },\n        {\n            auras = {980}, -- Agony\n            borderColor = \"#780095\",\n        },\n        {\n            auras = {316099}, -- Unstable Affliction\n            nameplateColor = \"#7221a7\",\n        },\n        { \n            auras = {188389}, -- Flame Shock\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {164812, 164815}, -- moonfire + sunfire\n            borderColor = \"violet\",\n            nameplateColor = \"violet\",\n        },\n        \n        {\n            auras = {192090}, -- Razorice\n            stacks = 3, -- required stacks for the condition\n            borderColor = \"gold\",\n        },\n        \n        {\n            auras = {192090}, -- Razorice\n            stacks = 2, -- required stacks for the condition\n            borderColor = \"forestgreen\",\n        },\n        {\n            auras = {192090,164812}, -- Razorice\n            stacks = 1, -- required stacks for the condition\n            borderColor = \"midnightblue\",\n        },       \n        {\n            auras = {192090}, -- Razorice\n            stacks = 1, -- required stacks for the condition\n            borderColor = \"darkorchid\",\n        }, \n        \n        { \n            auras = {164812, 192090}, -- moonfire + sunfire\n            borderColor = \"#00a3ff\",\n            \n        },\n        { \n            auras = {164815}, -- Sunfire\n            borderColor = \"orange\",\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {164812}, -- Moonfire\n            borderColor = \"#913fff\",\n        },\n        { \n            auras = {396361}, -- AV Last Boss\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {278431}, -- Infest\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {200105}, -- Sacrifice Soul\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {201064}, -- Spinner boi\n            nameplateColor = \"magenta\",\n        },\n        { \n            auras = {200958}, -- Flame boi\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {412012}, -- Temposlice\n            nameplateColor = \"orange\",\n        },\n        {\n            auras = {51714}, -- Razorice\n            stacks = 5, -- required stacks for the condition\n            nameplateColor = \"cyan\",\n        },\n        \n        {\n            auras = {387179}, -- Weapons Of Order\n            stacks = 3, -- required stacks for the condition\n            nameplateColor = \"#00a3ff\",\n        }\n    }\n    \n    -- DO NOT TOUCH\n    local DF = _G[\"DetailsFramework\"]\n    \n    -- Function to get the aura stacks\n    function envTable.GetAuraStacks(unit, auraID)\n        local function matchAura(spellIDToFind, _, _, _, _, _, _, _, _, _, _, _, spellID)\n            return spellIDToFind == spellID\n        end\n        local auraName, _, stacks, _, _, _, _, _, _, spellID = AuraUtil.FindAura(matchAura, unit, \"PLAYER|HARMFUL\", auraID)\n        return (auraName and stacks) or 0\n    end\n    \n    -- Function to reset nameplate and border/text colors\n    function envTable.ResetColors(unitFrame)\n        local npcColor = Plater.GetNpcColor(unitFrame)\n        if npcColor then\n            Plater.SetNameplateColor(unitFrame, npcColor)\n        elseif unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\" then\n            Plater.FindAndSetNameplateColor(unitFrame)\n        else\n            Plater.RefreshNameplateColor(unitFrame)\n        end\n        \n        local nameString = unitFrame.healthBar.unitName\n        Plater.SetBorderColor(unitFrame)\n        DF:SetFontColor(nameString, {1,1,1})\n    end\n    \n    -- Function to check if in PvP\n    function envTable.InPvP()\n        return C_PvP.IsBattleground() or C_PvP.IsArena() or (UnitIsPlayer(unitId) and UnitIsPVP(unitId))\n    end\n    \n    function envTable.CheckAuraMatches(unitFrame)\n        if not envTable.UseInPvP and envTable.InPvP() then\n            envTable.ResetColors(unitFrame)\n            return\n        end\n        \n        for _, v in ipairs(envTable.BuffsToMatch) do\n            local hasAura = true\n            for _, auraID in ipairs(v.auras) do\n                if not Plater.NameplateHasAura(unitFrame, auraID) then\n                    hasAura = false\n                    break\n                end\n            end\n            \n            if hasAura then\n                local match = true\n                if v.stacks and v.stacks > 1 then\n                    local stacks = envTable.GetAuraStacks(unitFrame.unit, v.auras[1])\n                    if stacks < v.stacks then\n                        match = false\n                    end\n                end\n                \n                if match then\n                    if v.nameplateColor then\n                        Plater.SetNameplateColor(unitFrame, v.nameplateColor)\n                    end\n                    if v.borderColor then\n                        local nameString = unitFrame.healthBar.unitName\n                        Plater.SetBorderColor(unitFrame, v.borderColor)\n                        DF:SetFontColor(nameString, v.borderColor)\n                    end\n                    return\n                end\n            else\n                envTable.ResetColors(unitFrame)\n            end\n        end\n    end\n    \n    function envTable.SetNameplateColors()\n        local raidMark = envTable.UseRaidMarks and unitFrame.unit and Plater.GetRaidMark(unitFrame)\n        if raidMark then\n            Plater.SetNameplateColor(unitFrame, envTable.ColorByMark[raidMark])\n        else \n            envTable.CheckAuraMatches(unitFrame)\n        end \n    end\nend",
},
["Time"] = 1730771124,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 134563,
["Enabled"] = true,
["Revision"] = 408,
["semver"] = "",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Change nameplate health bar, boder and name text color base on aura or raid mark.",
["Prio"] = 99,
["Name"] = "AuraNameplateColors-v3",
["PlaterCore"] = 1,
["version"] = -1,
["HooksTemp"] = {
["Constructor"] = "function(self, unitId, unitFrame, envTable)\n    -- Config Tables\n    envTable.UseInPvP = false\n    envTable.UseRaidMarks = false\n    envTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"lightblue\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"ghostwhite\", --skull\n    }\n    \n    --[[\n        Supports matching multiple auras to set a specific color.\n        ATTENTION: The first hit in the list will be used. So add your multi-matches to the top of the list!\n\n        Each entry has the following format:\n                { \n                    auras = {<auraID1>, <auraID2>, ..., <auraIDn>}, -- all aura-IDs which should be matched for the color. can be one to many auras\n                    -- ATTENTION: Currently stacks only works for the first auraID in the list\n                    stacks = <stacks>, -- required stacks for the condition (optional, can be removed)\n                    borderColor = \"violet\", -- the border color to be set (optional, can be removed)\n                    nameplateColor = \"violet\", -- the nameplate color which should be set (optional, can be removed)\n                },\n\n        Colors can be either any \"/plater colors\" as a string or a color map {r,g,b,a} , e.g. {1,0.35,0} or hex values, e.g. \"#00a3ff\"\n\n        The example below sets \"violet\" if moonfire and sunfire are active and \"orange\" for only sunfire or \"blue\" for only moonfire\n    --]]\n    \n    envTable.BuffsToMatch = {\n        { \n            auras = {335467, 589,34914}, -- Devouring Plague + SW:P + Vampiric Touch\n            borderColor = \"#a838ff\",\n            nameplateColor = \"#a838ff\",\n        },\n        { \n            auras = {589, 34914}, --Vampiric Touch + SP\n            borderColor = \"#a838fff\",\n        },\n        {\n            auras = {980, 146739, 316099}, -- Agony, Corruption, and Unstable Affliction\n            nameplateColor = \"#780095\",\n            borderColor = \"#780095\",\n        },\n        {\n            auras = {980, 445474, 316099}, -- Agony, Wither, and Unstable Affliction\n            nameplateColor = \"#4100ff\",\n            borderColor = \"#4100ff\",\n        },\n        {\n            auras = {980}, -- Agony\n            borderColor = \"#780095\",\n        },\n        {\n            auras = {316099}, -- Unstable Affliction\n            nameplateColor = \"#7221a7\",\n        },\n        { \n            auras = {188389}, -- Flame Shock\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {164812, 164815}, -- moonfire + sunfire\n            borderColor = \"violet\",\n            nameplateColor = \"violet\",\n        },\n        \n        {\n            auras = {192090}, -- Razorice\n            stacks = 3, -- required stacks for the condition\n            borderColor = \"gold\",\n        },\n        \n        {\n            auras = {192090}, -- Razorice\n            stacks = 2, -- required stacks for the condition\n            borderColor = \"forestgreen\",\n        },\n        {\n            auras = {192090,164812}, -- Razorice\n            stacks = 1, -- required stacks for the condition\n            borderColor = \"midnightblue\",\n        },       \n        {\n            auras = {192090}, -- Razorice\n            stacks = 1, -- required stacks for the condition\n            borderColor = \"darkorchid\",\n        }, \n        \n        { \n            auras = {164812, 192090}, -- moonfire + sunfire\n            borderColor = \"#00a3ff\",\n            \n        },\n        { \n            auras = {164815}, -- Sunfire\n            borderColor = \"orange\",\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {164812}, -- Moonfire\n            borderColor = \"#913fff\",\n        },\n        { \n            auras = {396361}, -- AV Last Boss\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {278431}, -- Infest\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {200105}, -- Sacrifice Soul\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {201064}, -- Spinner boi\n            nameplateColor = \"magenta\",\n        },\n        { \n            auras = {200958}, -- Flame boi\n            nameplateColor = \"orange\",\n        },\n        { \n            auras = {412012}, -- Temposlice\n            nameplateColor = \"orange\",\n        },\n        {\n            auras = {51714}, -- Razorice\n            stacks = 5, -- required stacks for the condition\n            nameplateColor = \"cyan\",\n        },\n        \n        {\n            auras = {387179}, -- Weapons Of Order\n            stacks = 3, -- required stacks for the condition\n            nameplateColor = \"#00a3ff\",\n        }\n    }\n    \n    -- DO NOT TOUCH\n    local DF = _G[\"DetailsFramework\"]\n    \n    -- Function to get the aura stacks\n    function envTable.GetAuraStacks(unit, auraID)\n        local function matchAura(spellIDToFind, _, _, _, _, _, _, _, _, _, _, _, spellID)\n            return spellIDToFind == spellID\n        end\n        local auraName, _, stacks, _, _, _, _, _, _, spellID = AuraUtil.FindAura(matchAura, unit, \"PLAYER|HARMFUL\", auraID)\n        return (auraName and stacks) or 0\n    end\n    \n    -- Function to reset nameplate and border/text colors\n    function envTable.ResetColors(unitFrame)\n        local npcColor = Plater.GetNpcColor(unitFrame)\n        if npcColor then\n            Plater.SetNameplateColor(unitFrame, npcColor)\n        elseif unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\" then\n            Plater.FindAndSetNameplateColor(unitFrame)\n        else\n            Plater.RefreshNameplateColor(unitFrame)\n        end\n        \n        local nameString = unitFrame.healthBar.unitName\n        Plater.SetBorderColor(unitFrame)\n        DF:SetFontColor(nameString, {1,1,1})\n    end\n    \n    -- Function to check if in PvP\n    function envTable.InPvP()\n        return C_PvP.IsBattleground() or C_PvP.IsArena() or (UnitIsPlayer(unitId) and UnitIsPVP(unitId))\n    end\n    \n    function envTable.CheckAuraMatches(unitFrame)\n        if not envTable.UseInPvP and envTable.InPvP() then\n            envTable.ResetColors(unitFrame)\n            return\n        end\n        \n        for _, v in ipairs(envTable.BuffsToMatch) do\n            local hasAura = true\n            for _, auraID in ipairs(v.auras) do\n                if not Plater.NameplateHasAura(unitFrame, auraID) then\n                    hasAura = false\n                    break\n                end\n            end\n            \n            if hasAura then\n                local match = true\n                if v.stacks and v.stacks > 1 then\n                    local stacks = envTable.GetAuraStacks(unitFrame.unit, v.auras[1])\n                    if stacks < v.stacks then\n                        match = false\n                    end\n                end\n                \n                if match then\n                    if v.nameplateColor then\n                        Plater.SetNameplateColor(unitFrame, v.nameplateColor)\n                    end\n                    if v.borderColor then\n                        local nameString = unitFrame.healthBar.unitName\n                        Plater.SetBorderColor(unitFrame, v.borderColor)\n                        DF:SetFontColor(nameString, v.borderColor)\n                    end\n                    return\n                end\n            else\n                envTable.ResetColors(unitFrame)\n            end\n        end\n    end\n    \n    function envTable.SetNameplateColors()\n        local raidMark = envTable.UseRaidMarks and unitFrame.unit and Plater.GetRaidMark(unitFrame)\n        if raidMark then\n            Plater.SetNameplateColor(unitFrame, envTable.ColorByMark[raidMark])\n        else \n            envTable.CheckAuraMatches(unitFrame)\n        end \n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.SetNameplateColors()\nend",
},
["Options"] = {
},
},
},
["auras_per_row_auto"] = false,
["auras_per_row_amount2"] = 2,
["disable_omnicc_on_auras"] = true,
["bossmod_castrename_enabled"] = false,
["auto_toggle_stacking"] = {
["party"] = false,
["raid"] = false,
["arena"] = false,
["world"] = false,
},
["bossmod_support_enabled"] = false,
["health_statusbar_bgcolor"] = {
0.21176472306252,
0.21176472306252,
0.21176472306252,
1,
},
["cast_audiocues"] = {
[470609] = "Interface\\Addons\\WeakAuras\\PowerAurasMedia\\Sounds\\BITE.ogg",
},
["blizzard_nameplate_large_font_size"] = 9,
["pet_width_scale"] = 0.99999994039536,
["extra_icon_timer_size"] = 11,
["target_highlight_color"] = {
0.9921568627451,
1,
0.97254901960784,
},
["castbar_target_anchor"] = {
["y"] = -1.5,
["x"] = -13,
},
["ghost_auras"] = {
["auras"] = {
["PRIEST"] = {
[5] = {
},
},
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
},
},
["extra_icon_stack_outline"] = "OUTLINE",
["resources"] = {
["y_offset"] = 51.58999633789063,
["y_offset_target"] = -2.235174179077148e-06,
["scale"] = 0.75,
},
["click_space"] = {
141,
21,
},
["extra_icon_auras"] = {
328501,
328986,
204490,
"Rescind",
409463,
"Breath of Eons",
278431,
323059,
438706,
372824,
388523,
114404,
22703,
164275,
77505,
255941,
200672,
377014,
451026,
440179,
273721,
76151,
456252,
456245,
1330,
423246,
},
["castbar_target_font"] = "Expressway",
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["script_banned_user"] = {
["Player-3674-08A5D7A3"] = true,
},
["target_shady_enabled"] = false,
["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark2",
["first_run2"] = true,
["cast_statusbar_use_fade_effects"] = false,
["cast_statusbar_spark_alpha"] = 1,
["pet_height_scale"] = 0.99999994039536,
["aura_x_offset"] = 1.199995517730713,
["first_run3"] = true,
["hover_highlight_alpha"] = 0.5,
["aura_sort"] = true,
["ui_parent_scale_tune"] = -5.587935447692871e-08,
["aura_stack_color"] = {
nil,
0,
0.062745098039216,
},
["health_statusbar_bgtexture"] = "Details Flat",
["indicator_raidmark_anchor"] = {
["y"] = 7.819997787475586,
["x"] = -2.235174179077148e-06,
["side"] = 12,
},
["aura_show_enrage"] = true,
["aura_tracker"] = {
["buff_banned"] = {
["318486"] = true,
["323961"] = true,
["333553"] = true,
["317602"] = true,
["396106"] = true,
["236502"] = true,
["5760"] = true,
["396098"] = true,
["343553"] = true,
["396109"] = true,
["343613"] = false,
["216777"] = true,
["327416"] = false,
["302564"] = true,
["417039"] = false,
["292664"] = true,
["61574"] = true,
["303380"] = true,
["286145"] = true,
["284471"] = true,
["396113"] = true,
["333579"] = true,
["422067"] = false,
["61573"] = true,
["206150"] = true,
["209746"] = true,
["284882"] = true,
["333575"] = true,
["311571"] = true,
["266499"] = true,
["268710"] = true,
},
["buff"] = {
273607,
283928,
311975,
343208,
197862,
66235,
344548,
189949,
343196,
317929,
259895,
290494,
327993,
322540,
332672,
321708,
305395,
41450,
200327,
290583,
320407,
236801,
194223,
333920,
74001,
212753,
175395,
197874,
200816,
196718,
173898,
315948,
122783,
322108,
343150,
296497,
344363,
205202,
255016,
289626,
337851,
228048,
341857,
23333,
198144,
292152,
321702,
29166,
197061,
215776,
209194,
272682,
212640,
216451,
79542,
187827,
124974,
207812,
212295,
34976,
196555,
129035,
316849,
265314,
69369,
321745,
316828,
278454,
285272,
279043,
203048,
198817,
316834,
344878,
320379,
335255,
231627,
328767,
198111,
125174,
317138,
322110,
284508,
236439,
328682,
325208,
185422,
317138,
213602,
323048,
},
["debuff_banned"] = {
["353354"] = true,
["444736"] = true,
["461498"] = false,
["444834"] = false,
["374557"] = false,
["331016"] = false,
["392388"] = true,
["443404"] = false,
["458169"] = false,
["295367"] = true,
["204167"] = false,
["269576"] = true,
["424965"] = true,
["453599"] = false,
["370898"] = false,
["417490"] = true,
["394021"] = true,
["394453"] = false,
["394255"] = true,
["273836"] = true,
["452229"] = false,
["314113"] = true,
["294909"] = true,
["281242"] = true,
["206760"] = true,
["381628"] = true,
["279416"] = true,
["390271"] = false,
["321330"] = true,
["294934"] = true,
["388550"] = true,
["324260"] = true,
["204206"] = false,
["426339"] = true,
["391568"] = true,
["454025"] = false,
["356372"] = false,
["360277"] = true,
["403391"] = true,
["345466"] = true,
["382426"] = true,
["378983"] = true,
["211793"] = false,
["457133"] = false,
["461981"] = false,
["6343"] = true,
["5760"] = true,
["356995"] = false,
["410790"] = false,
["463192"] = true,
["455366"] = true,
["443541"] = true,
["352534"] = true,
["394328"] = true,
["256148"] = true,
["356329"] = true,
["204242"] = true,
["286581"] = true,
["358379"] = true,
["205027"] = false,
["449217"] = true,
["457928"] = false,
["420144"] = true,
["169623"] = true,
["397478"] = true,
["331653"] = true,
["406770"] = true,
["244813"] = false,
["397712"] = true,
["373281"] = false,
["392490"] = false,
["429750"] = true,
["354052"] = true,
["389788"] = false,
["255909"] = true,
["377359"] = false,
},
["debuff_tracked"] = {
["409990"] = true,
["335372"] = false,
["323059"] = false,
},
["debuff"] = {
315341,
207756,
280322,
340075,
316220,
280321,
319504,
256495,
190533,
345569,
347037,
},
["buff_tracked"] = {
["227931"] = true,
["338510"] = false,
["365338"] = true,
["368364"] = true,
["389808"] = true,
["209859"] = true,
["343502"] = false,
["297133"] = true,
["385528"] = true,
["440177"] = false,
["343503"] = true,
["163689"] = true,
["233210"] = true,
["438706"] = true,
},
},
["extra_icon_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\cooldown_edge_1",
["cast_statusbar_color"] = {
nil,
1,
nil,
1,
},
["update_throttle"] = 0.33000001311302,
["tocversion"] = 110002,
["castbar_icon_show"] = false,
["indicator_extra_raidmark"] = false,
["target_shady_combat_only"] = false,
["aura_show_debuffs_personal"] = false,
["extra_icon_timer_font"] = "Expressway",
["not_affecting_combat_alpha"] = 1,
["target_highlight_alpha"] = 1,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["extra_icon_show_offensive_border"] = {
nil,
0.65098039215686,
0.10196078431373,
},
["extra_icon_use_blizzard_border_color"] = false,
["url"] = "https://wago.io/ak3iS95aa/111",
["target_shady_alpha"] = 0,
["indicator_raidmark_scale"] = 0.8499999642372131,
["tap_denied_color"] = {
0.46666666666667,
0.46666666666667,
0.46666666666667,
},
["target_highlight_height"] = 10,
["aura_width2"] = 19,
["color_override_colors"] = {
[3] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
[4] = {
1,
0.79607850313187,
0.20784315466881,
},
},
["version"] = 111,
["health_animation_time_dilatation"] = 1.6699999570847,
["extra_icon_caster_font"] = "Expressway",
["range_check_power_bar_alpha"] = 0.8999999761581421,
["focus_as_target_alpha"] = true,
["extra_icon_auras_mine"] = {
["Violent Detonation"] = false,
["209859"] = false,
["Plague Bomb"] = false,
["Serrated Bone Spike"] = true,
},
["range_check_enabled"] = false,
["cast_statusbar_color_interrupted"] = {
0.8,
0.30196078431373,
0.30196078431373,
},
["range_check_in_range_or_target_alpha"] = 1,
["aura_timer_text_size"] = 9,
["script_auto_imported"] = {
["Aura - Is Cast Bar [P]"] = 1,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Fixate On You"] = 12,
["Explosion Affix M+"] = 14,
["Cast - Castbar is Timer [P]"] = 2,
["Blink by Time Left"] = 1,
["Cast - Glowing [P]"] = 10,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Cast - Tank Interrupt"] = 12,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Add - Explode on Die [P]"] = 1,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Cast - Stop Casting"] = 4,
["Add - Tag Number [P]"] = 2,
["Unit Power"] = 1,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Heroic Leap [P]"] = 3,
["Countdown"] = 12,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Unit - Health Markers"] = 12,
["Unit - Important"] = 11,
["Cast - Important Target [P]"] = 2,
["Auto Set Skull"] = 11,
["Cast - AoE Hit All [P]"] = 3,
["Color Change"] = 1,
["Cast - Very Important"] = 15,
["Cast - Alert + Timer [P]"] = 4,
["Aura - Buff Alert"] = 15,
["Cast - Debuff [P]"] = 2,
["Aura is Shield [P]"] = 5,
["Add - Warning [P]"] = 5,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Important by Color [P]"] = 2,
["Cast - Heal Cut [P]"] = 3,
["Cast - Watch Step [P]"] = 1,
["Spiteful Affix"] = 3,
["Cast - Shield Interrupt"] = 2,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Quick Flash"] = 2,
["Aura Border Color"] = 1,
["Cast - On Going Cast [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Fixate"] = 11,
["Cast - Voidzone [P]"] = 2,
["Cast - Shining Green [P]"] = 3,
["Cast - Ultra Important"] = 14,
["Unit - Show Energy"] = 11,
},
["number_region_first_run"] = true,
["show_healthbars_on_softinteract"] = false,
["aura2_grow_direction"] = 3,
["extra_icon_stack_size"] = 11,
["indicator_faction"] = false,
["range_check_alpha_friendlies"] = 1,
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.54117647058824,
0.43137254901961,
},
["anothertank"] = {
0.50196078431373,
0.50196078431373,
},
["aggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
["nocombat"] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
["noaggro"] = {
0.8666667342186,
0.43529415130615,
},
["pulling"] = {
nil,
0.91372549019608,
0.22745098039216,
},
},
},
["patch_version"] = 38,
["dps"] = {
["colors"] = {
["aggro"] = {
0.86666666666667,
0.43529411764706,
},
["notontank"] = {
0.50196078431373,
0.50196078431373,
},
["noaggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
},
},
["cast_statusbar_bgcolor"] = {
0.21176470588235,
0.21176470588235,
0.21176470588235,
0.90000000596046,
},
["indicator_pet"] = false,
["aura_timer_text_font"] = "Expressway",
["show_health_prediction"] = false,
["aura_width"] = 19,
["extra_icon_show_purge_border"] = {
nil,
0.92549019607843,
},
["auto_toggle_friendly_enabled"] = true,
["cast_statusbar_spark_width"] = 8,
["auto_toggle_enemy"] = {
["party"] = false,
["raid"] = false,
["arena"] = false,
["world"] = false,
},
},
},
}
PlaterLanguage = {
["language"] = "zhCN",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2024-12-09 00:48:45 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 諾諾的小尾巴",
"2024-12-09 00:34:19 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 諾諾的小尾巴",
"2024-12-09 00:25:37 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 諾諾的小尾巴",
"2024-12-09 00:22:42 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 諾諾的小尾巴",
"2024-12-08 23:40:47 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 丶諾諾丶",
"2024-12-08 23:37:29 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 諾諾的小尾巴",
"2024-12-08 23:23:00 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 諾諾的小尾巴",
"2024-12-08 23:19:11 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 諾諾的小尾巴",
"2024-12-06 18:41:09 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 諾宝",
"2024-12-06 18:23:38 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 丶亦言",
"2024-12-06 12:58:19 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 丶諾諾丶",
"2024-12-06 12:26:07 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 丶諾諾丶",
"2024-12-06 00:14:52 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 丶諾諾丶",
"2024-12-06 00:05:34 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 丶諾諾丶",
"2024-12-06 00:03:14 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 丶諾諾丶",
"2024-12-06 00:01:31 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 諾宝",
"2024-12-05 23:58:35 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 乱舞诺诺",
"2024-12-05 23:34:08 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 乱舞诺诺",
"2024-12-05 23:26:18 | INIT | Plater-v596-Retail | Framework v585 | 11.0.5 | zhCN | 乱舞诺诺",
},
["_error_logs"] = {
},
}
PlaterBackup = {
}
